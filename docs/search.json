[{"path":"/articles/introduction.html","id":"overview-of-the-edsurvey-package","dir":"Articles","previous_headings":"","what":"Overview of the EdSurvey Package","title":"Introduction to Analyzing NCES Data Using EdSurvey","text":"EdSurvey package designed help users analyze data National Center Education Statistics (NCES), including National Assessment Educational Progress (NAEP) datasets. scope complexity, datasets require special statistical methods analyze. EdSurvey package gives users functions perform analyses account complex sample survey designs use plausible values. EdSurvey package also seamlessly takes advantage LaF package read data required analysis. Users computers insufficient memory read entire NAEP datasets can still analyses without write special code read just appropriate variables. addressed directly EdSurvey package—behind scenes without additional work user.","code":""},{"path":[]},{"path":"/articles/introduction.html","id":"book-and-journal-publication","dir":"Articles","previous_headings":"Technical Papers","what":"Book and Journal Publication","title":"Introduction to Analyzing NCES Data Using EdSurvey","text":"Bailey, P., Lee, M., Nguyen, T., & Zhang, T. (2020). Using EdSurvey Analyse PIAAC Data. Large-Scale Cognitive Assessment (pp. 209-237). Springer, Cham.","code":""},{"path":"/articles/introduction.html","id":"data-set-specific-overviews","dir":"Articles","previous_headings":"Technical Papers","what":"Data Set Specific Overviews","title":"Introduction to Analyzing NCES Data Using EdSurvey","text":"Documents describe analysis specific survey data EdSurvey package include following: Using EdSurvey Analyze ECLS-K:2011 Data introduction methods used analysis large-scale child development study Early Childhood Longitudinal Study, Kindergarten Class 2010-11 (ECLS-K:2011) using EdSurvey package. vignette covers topics preparing R environment processing, creating summary tables, running linear regression models, correlating variables. Using EdSurvey Analyze NCES Data: Illustration Analyzing NAEP Primer introduction basics using EdSurvey package analyzing NCES data, using NAEP Primer example. vignette covers topics preparing R environment processing, creating summary tables, running linear regression models, correlating variables. Using EdSurvey Analyze TIMSS Data introduction methods used analysis large-scale educational assessment programs Trends International Mathematics Science Study (TIMSS) using EdSurvey package. vignette covers topics preparing R environment processing, creating summary tables, running linear regression models, correlating variables. Using EdSurvey Analyze NAEP Data Without Accommodations provides overview use NAEP data accommodations describes methods used analyze data.","code":""},{"path":"/articles/introduction.html","id":"task-specific-walkthroughs","dir":"Articles","previous_headings":"Technical Papers","what":"Task Specific Walkthroughs","title":"Introduction to Analyzing NCES Data Using EdSurvey","text":"Documents providing overview functions developed EdSurvey package include following: NAEP DBA-PBA Linking Error EdSurvey describes using EdSurvey calculate linking error NAEP assessments combined PBA DBA formats, NCES method EdSurvey uses calculate linking error. Installing EdSurvey Package Restricted-Use Data Computer provides guidance install EdSurvey restricted-use data (RUD) computer without Internet connection. Converting Text Data File(s) Companion SPSS Script SPSS Data File Format details process converting data file SPSS script SPSS Data File use EdSurvey. Using getData Function EdSurvey describes use EdSurvey package extensive data manipulation required analysis. Using EdSurvey Trend Analysis describes methods used EdSurvey package conduct analyses statistics change time large-scale educational studies. Exploratory Data Analysis NCES Data provides examples conducting exploratory data analysis NAEP data. Calculating Adjusted p-Values EdSurvey Results describes basics adjusting p-values account multiple comparisons. Producing  Tables edsurveyTable Results edsurveyTable2pdf details creation pdf summary tables summary results using edsurveyTable2pdf function.","code":""},{"path":"/articles/introduction.html","id":"methodology-resources","dir":"Articles","previous_headings":"Technical Papers","what":"Methodology Resources","title":"Introduction to Analyzing NCES Data Using EdSurvey","text":"Documents describe statistical methodology used EdSurvey package include following: Statistical Methods Used details estimation statistics lm.sdf, achievementLevel, edsurveyTable functions. Analyses Using Achievement Levels Based Plausible Values describes methodological approaches analyses using NAEP achievement levels. Gap Analysis covers methods comparing gap analysis results EdSurvey package NAEP Data Explorer. Estimating Percentiles describes methods used estimate percentiles. Estimating Mixed-Effects Models describes methods used estimate mixed-effects models plausible values survey weights, fit different types mixed-effects models using EdSurvey package. Multivariate Regression details estimation multivariate regression models using mvrlm.sdf. Running Wald Tests describes use Wald test jointly test regression coefficients estimated using lm.sdf glm.sdf. Weighted Unweighted Correlation Methods Large-Scale Educational Assessment: wCorr Formulas introduces methodology used wCorr R package computing Pearson, Spearman, polyserial, polyserial, polychoric tetrachoric correlations, without weights applied. Simulation evidence presented show correctness methods, including examination bias consistency.","code":""},{"path":"/articles/introduction.html","id":"software-requirements","dir":"Articles","previous_headings":"Technical Papers","what":"Software Requirements","title":"Introduction to Analyzing NCES Data Using EdSurvey","text":"Unless already R version 3.2.0 later, install latest R version—available online https://cran.r-project.org/. Users also may want install RStudio desktop, interface many find easier follow. RStudio available online https://posit.co/download/rstudio-desktop/.","code":""},{"path":[]},{"path":"/articles/introduction.html","id":"installing-and-loading-edsurvey","dir":"Articles","previous_headings":"Setting Up the Environment for Analyzing NCES Data","what":"Installing and Loading EdSurvey","title":"Introduction to Analyzing NCES Data Using EdSurvey","text":"Inside R, run following command install EdSurvey well package dependencies: package successfully installed, EdSurvey can loaded following command:","code":"install.packages(\"EdSurvey\") library(EdSurvey)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Bailey. Author, maintainer. Ahmad Emad. Author. Huade Huo. Author. Michael Lee. Author. Yuqi Liao. Author. Alex Lishinsku. Author. Trang Nguyen. Author. Qingshu Xie. Author. Jiao Yu. Author. Ting Zhang. Author. Eric Buehler. Author. Sun-joo Lee. Author. Blue Webb. Author. Emmanuel Sikali. Project director. Claire Kelley. Contributor. Jeppe Bundsgaard. Contributor. Ren C'deBaca. Contributor. Anders Christensen. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bailey P, Emad , Huo H, Lee M, Liao Y, Lishinsku , Nguyen T, Xie Q, Yu J, Zhang T, Buehler E, Lee S, Webb B (2023). EdSurvey: Analysis NCES Education Survey Assessment Data. R package version 4.0.0, https://www.air.org/project/nces-data-r-project-edsurvey.","code":"@Manual{,   title = {EdSurvey: Analysis of NCES Education Survey and Assessment Data},   author = {Paul Bailey and Ahmad Emad and Huade Huo and Michael Lee and Yuqi Liao and Alex Lishinsku and Trang Nguyen and Qingshu Xie and Jiao Yu and Ting Zhang and Eric Buehler and Sun-joo Lee and Blue Webb},   year = {2023},   note = {R package version 4.0.0},   url = {https://www.air.org/project/nces-data-r-project-edsurvey}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Analysis of NCES Education Survey and Assessment Data","text":"Read analyze functions education survey assessment data National Center Education Statistics (NCES) https://nces.ed.gov/, including National Assessment Educational Progress (NAEP) data https://nces.ed.gov/nationsreportcard/ data International Assessment Database: Organisation Economic Co-operation Development (OECD) https://www.oecd.org/, including Programme International Student Assessment (PISA), Teaching Learning International Survey (TALIS), Programme International Assessment Adult Competencies (PIAAC), International Association Evaluation Educational Achievement (IEA) https://www.iea.nl/, including Trends International Mathematics Science Study (TIMSS), TIMSS Advanced, Progress International Reading Literacy Study (PIRLS), International Civic Citizenship Study (ICCS), International Computer Information Literacy Study (ICILS), Civic Education Study (CivEd).","code":""},{"path":"/index.html","id":"pre-release-installation","dir":"","previous_headings":"","what":"Pre-release Installation","title":"Analysis of NCES Education Survey and Assessment Data","text":"","code":"# You can install the development version from GitHub with: install.packages(\"devtools\") devtools::install_github(\"American-Institutes-for-Research/edsurvey\")"},{"path":"/index.html","id":"cran-release-installation","dir":"","previous_headings":"","what":"CRAN-release Installation","title":"Analysis of NCES Education Survey and Assessment Data","text":"","code":"# You can install the released version of EdSurvey from CRAN with: install.packages(\"EdSurvey\")"},{"path":"/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Analysis of NCES Education Survey and Assessment Data","text":"Contributions external collaborators considered inclusion package.","code":""},{"path":"/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"Analysis of NCES Education Survey and Assessment Data","text":"project funded least part Federal funds U.S. Department Education contract numbers ED-IES-12-D-0002/0004 91990022C0053. content publication necessarily reflect views policies U.S. Department Education mention trade names,commercial products, organizations imply endorsement U.S. Government.","code":""},{"path":"/reference/achievementLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Achievement Levels — achievementLevels","title":"Achievement Levels — achievementLevels","text":"Returns achievement levels using weights variance estimates appropriate edsurvey.data.frame.","code":""},{"path":"/reference/achievementLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Achievement Levels — achievementLevels","text":"","code":"achievementLevels(   achievementVars = NULL,   aggregateBy = NULL,   data,   cutpoints = NULL,   returnDiscrete = TRUE,   returnCumulative = FALSE,   weightVar = NULL,   jrrIMax = 1,   dropOmittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   returnNumberOfPSU = FALSE,   returnVarEstInputs = FALSE,   omittedLevels = deprecated() )"},{"path":"/reference/achievementLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Achievement Levels — achievementLevels","text":"achievementVars character vector indicating variables included achievement levels table, potentially subject scale subscale. subject scale subscale omitted, default subject scale subscale used. can find default composite scale subscales using function showPlausibleValues. aggregateBy character vector specifying variables aggregate achievement levels. percentage column sums 100 levels variables specified . set default NULL, percentage column sums 100 levels variables specified achievementVars. data edsurvey.data.frame cutpoints numeric vector indicating cutpoints. Set standard NAEP cutpoints Basic, Proficient, Advanced default. returnDiscrete logical indicating discrete achievement levels returned. Defaults TRUE. returnCumulative logical indicating cumulative achievement levels returned. Defaults FALSE. first last categories defined discrete levels. weightVar character string indicating weight variable use. name weight variable needs included , replicate weights automatically included. argument NULL, function uses default. Use showWeights find default. jrrIMax numeric value. using jackknife variance estimation method, default estimation option, jrrIMax=1, uses sampling variance first plausible value component sampling variance estimation. \\(V_{jrr}\\) term (see Statistical Methods Used EdSurvey definition \\(V_{jrr}\\)) can estimated number plausible values, values larger number plausible values survey (including Inf) result plausible values used. Higher values jrrIMax lead longer computing times accurate variance estimates. dropOmittedLevels logical value. set default value (TRUE), drops levels factor variables specified achievementVars aggregateBy. Use print edsurvey.data.frame see omitted levels. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode = list(var1= list(=c(\"\", \"b\", \"c\"), =\"d\")). See Examples. returnNumberOfPSU logical value set TRUE return number primary sampling units (PSUs) returnVarEstInputs logical value set TRUE return inputs jackknife imputation variance estimates, allows computation covariances estimates. omittedLevels argument deprecated. Use dropOmittedLevels.","code":""},{"path":"/reference/achievementLevels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Achievement Levels — achievementLevels","text":"list containing two data frames, one discrete achievement levels (returnDiscrete TRUE) one cumulative achievement levels (returnCumulative TRUE). data.frame contains following columns: Level one row level specified achievement cutpoints Variables achievementVars one column variable achievementVars one row level variable achievementVars Percent percentage students achievement level aggregated specified aggregateBy StandardError standard error percentage, accounting survey sampling methodology.                             See vignette titled Statistical Methods Used EdSurvey. N number observations incoming data (                 number rows omittedLevels                  defaultConditions set FALSE) wtdN weighted number observations data nPSU number PSUs achievement level aggregated specified aggregateBy. returned returnNumberOfPSU=TRUE.","code":""},{"path":"/reference/achievementLevels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Achievement Levels — achievementLevels","text":"achievementLevels function applies appropriate weights          variance estimation method          edsurvey.data.frame, several arguments customizing          aggregation output analysis          results. Namely, using optional arguments, users can choose          generate percentage students          performing achievement level (discrete), generate          percentage students performing achievement level          (cumulative),          calculate percentage distribution students achievement          level (discrete cumulative)          selected characteristics (specified aggregateBy),          compute percentage distribution students          selected characteristics within specific achievement level.","code":""},{"path":"/reference/achievementLevels.html","id":"calculation-of-percentages","dir":"Reference","previous_headings":"","what":"Calculation of percentages","title":"Achievement Levels — achievementLevels","text":"details methods shown vignette titled Statistical Methods Used EdSurvey          “Estimation Weighted Percentages Plausible Values Present” used calculate          cumulative discrete probabilities. requested achievement levels discrete (returnDiscrete = TRUE),          percentage \\(\\mathcal{}\\) percentage students (within categories specified aggregateBy)          whose scores lie range  \\([cutPoints_i, cutPoints_{+1}), = 0,1,...,n\\).          cutPoints score thresholds provided user \\(cutPoints_0\\) taken          0. cutPoints set NAEP standard cutpoints achievement levels default.          aggregate specific variable, example, dsex, specify dsex aggregateBy          variables achievementVars. aggregate subscale, specify          name subscale (e.g., num_oper) aggregateBy variables          achievementVars. requested achievement levels cumulative (returnCumulative = TRUE),          percentage \\(\\mathcal{}\\) percentage students (within categories specified aggregateBy)          whose scores lie range  [\\(cutPoints_i\\), \\(\\infty\\)), \\(= 1, 2, ..., n-1\\).          first last categories defined discrete levels.","code":""},{"path":"/reference/achievementLevels.html","id":"calculation-of-standard-error-of-percentages","dir":"Reference","previous_headings":"","what":"Calculation of standard error of percentages","title":"Achievement Levels — achievementLevels","text":"method used calculate standard error percentages described vignette titled          Statistical Methods Used EdSurvey          sections “Estimation Standard Error Weighted Percentages Plausible Values Present, Using Jackknife Method”          “Estimation Standard Error Weighted Percentages Plausible Values Present, Using Taylor Series Method.”          “Estimation Standard Error Weighted Percentages Plausible Values Present, Using Jackknife Method,”         value jrrIMax sets value \\(m^*\\).","code":""},{"path":"/reference/achievementLevels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Achievement Levels — achievementLevels","text":"Rubin, D. B. (1987). Multiple imputation nonresponse surveys. New York, NY: Wiley.","code":""},{"path":"/reference/achievementLevels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Achievement Levels — achievementLevels","text":"Huade Huo, Ahmad Emad, Trang Nguyen","code":""},{"path":"/reference/achievementLevels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Achievement Levels — achievementLevels","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # discrete achievement levels achievementLevels(achievementVars=c(\"composite\"), aggregateBy=NULL, data=sdf)  # discrete achievement levels with a different subscale achievementLevels(achievementVars=c(\"num_oper\"), aggregateBy=NULL, data=sdf)  # cumulative achievement levels achievementLevels(achievementVars=c(\"composite\"), aggregateBy=NULL, data=sdf,                    returnCumulative=TRUE)   # cumulative achievement levels with a different subscale achievementLevels(achievementVars=c(\"num_oper\"), aggregateBy=NULL, data=sdf,                    returnCumulative=TRUE)   # achievement levels as independent variables, by sex aggregated by composite achievementLevels(achievementVars=c(\"composite\", \"dsex\"), aggregateBy=\"composite\",                   data=sdf, returnCumulative=TRUE)   # achievement levels as independent variables, by sex aggregated by sex achievementLevels(achievementVars=c(\"composite\", \"dsex\"), aggregateBy=\"dsex\",                    data=sdf, returnCumulative=TRUE)   # achievement levels as independent variables, by race aggregated by race achievementLevels(achievementVars=c(\"composite\", \"sdracem\"),                   aggregateBy=\"sdracem\", data=sdf, returnCumulative=TRUE)   # use customized cutpoints achievementLevels(achievementVars=c(\"composite\"), aggregateBy=NULL, data=sdf,                    cutpoints = c(\"Customized Basic\" = 200,                                  \"Customized Proficient\" = 300,                                  \"Customized Advanced\" = 400))  # use recode to change values for specified variables: achievementLevels(achievementVars=c(\"composite\", \"dsex\", \"b017451\"),                   aggregateBy = \"dsex\", sdf,                   recode=list(b017451=list(from=c(\"Never or hardly ever\",                                                   \"Once every few weeks\",                                                   \"About once a week\"),                                            to=\"Infrequently\"),                               b017451=list(from=c(\"2 or 3 times a week\",                                                   \"Every day\"),                                            to=\"Frequently\"))) }"},{"path":"/reference/as.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a Data Frame — as.data.frame","title":"Coerce to a Data Frame — as.data.frame","text":"Function coerce light.edsurvey.data.frame data.frame.","code":""},{"path":"/reference/as.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a Data Frame — as.data.frame","text":"","code":"# S3 method for light.edsurvey.data.frame as.data.frame(x, ...)"},{"path":"/reference/as.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a Data Frame — as.data.frame","text":"x light.edsurvey.data.frame ... arguments passed .data.frame","code":""},{"path":"/reference/as.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to a Data Frame — as.data.frame","text":"data.frame","code":""},{"path":"/reference/as.data.frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce to a Data Frame — as.data.frame","text":"Trang Nguyen","code":""},{"path":"/reference/bind-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine R Objects by Rows or Columns — cbind","title":"Combine R Objects by Rows or Columns — cbind","text":"Implements cbind rbind light.edsurvey.data.frame class.              takes sequence vector, matrix, data.frame, light.edsurvey.data.frame arguments combines              columns rows, respectively.","code":""},{"path":"/reference/bind-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine R Objects by Rows or Columns — cbind","text":"","code":"cbind(..., deparse.level = 1)  rbind(..., deparse.level = 1)"},{"path":"/reference/bind-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine R Objects by Rows or Columns — cbind","text":"... one objects class vector, data.frame, matrix, light.edsurvey.data.frame deparse.level integer determining circumstances column row names built actual arguments. See cbind.","code":""},{"path":"/reference/bind-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine R Objects by Rows or Columns — cbind","text":"matrix-like object like matrix data.frame. Returns light.edsurvey.data.frame          least one light.edsurvey.data.frame list arguments.","code":""},{"path":"/reference/bind-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine R Objects by Rows or Columns — cbind","text":"cbind rbind standard generic functions use method dispatch, set function generic,          means overwrites base::cbind base::rbind loading. none specified elements class light.edsurvey.data.frame,          function revert standard base method. However, safe, might want explicitly use base::cbind needed loading package. returned object contain attributes first light.edsurvey.data.frame object call          cbind.light.edsurvey.data.frame.","code":""},{"path":[]},{"path":"/reference/bind-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine R Objects by Rows or Columns — cbind","text":"Trang Nguyen, Michael Lee, Paul Bailey","code":""},{"path":"/reference/checkIdVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Give warning if idVar is null on on light edsurvey dataframe. — checkIdVar","title":"Give warning if idVar is null on on light edsurvey dataframe. — checkIdVar","text":"Give warning idVar null light edsurvey dataframe.","code":""},{"path":"/reference/checkIdVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give warning if idVar is null on on light edsurvey dataframe. — checkIdVar","text":"","code":"checkIdVar(data, idVar)"},{"path":"/reference/checkIdVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give warning if idVar is null on on light edsurvey dataframe. — checkIdVar","text":"data edsurvey.data.frame, light.edsurvey.data.frame, data.frame look idVar idVar variable look Without idVar users able merge PVs back data running mml.  idVar, default chosen.","code":""},{"path":"/reference/checkPsuStrata.html","id":null,"dir":"Reference","previous_headings":"","what":"Give error if Strata and PSU var not present on light edsurvey data frame. — checkPsuStrata","title":"Give error if Strata and PSU var not present on light edsurvey data frame. — checkPsuStrata","text":"Give error Strata PSU var present light edsurvey data frame.","code":""},{"path":"/reference/checkPsuStrata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give error if Strata and PSU var not present on light edsurvey data frame. — checkPsuStrata","text":"","code":"checkPsuStrata(data)"},{"path":"/reference/checkPsuStrata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give error if Strata and PSU var not present on light edsurvey data frame. — checkPsuStrata","text":"data edsurvey.data.frame light.edsurvey.data.frame check PSU Strata variables","code":""},{"path":"/reference/contourPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Overlaid Scatter and Contour Plots — contourPlot","title":"Overlaid Scatter and Contour Plots — contourPlot","text":"Diagnostic plots regressions can become dense interpret.              function helps adding contour plot points              allow density points seen, even area entirely covered points.","code":""},{"path":"/reference/contourPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overlaid Scatter and Contour Plots — contourPlot","text":"","code":"contourPlot(   x,   y,   m = 30L,   xrange,   yrange,   xkernel,   ykernel,   nlevels = 9L,   densityColors = heat.colors(nlevels),   pointColors = \"gray\",   ... )"},{"path":"/reference/contourPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overlaid Scatter and Contour Plots — contourPlot","text":"x numeric vector x data plotted y numeric vector y data plotted m integer value number x y grid points xrange numeric vector length two indicating x-range plot; defaults range(x) yrange numeric vector length two indicating y-range plot; defaults range(y) xkernel numeric indicating standard deviation Normal x kernel use generating contour plot ykernel numeric indicating standard deviation Normal y kernel use generating contour plot nlevels integer number levels contour plot densityColors colors use, specified par. Defaults heat.colors nlevels. specified, colors overrides nlevels. pointColors color plot points ... additional arguments passed plot call generates scatter plot contour plot","code":""},{"path":"/reference/contourPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Overlaid Scatter and Contour Plots — contourPlot","text":"Yuqi Liao Paul Bailey","code":""},{"path":"/reference/contourPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Overlaid Scatter and Contour Plots — contourPlot","text":"","code":"if (FALSE) { sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\")) lm1 <- lm.sdf(composite ~ pared * dsex + sdracem, sdf) # plot the results contourPlot(x=lm1$fitted.values,             y=lm1$residuals[,1], # use only the first plausible value             m=30,             xlab=\"fitted values\",             ylab=\"residuals\",             main=\"Figure 1\") # add a line indicating where the residual is zero abline(0,0) }"},{"path":"/reference/cor.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Bivariate Correlation — cor.sdf","title":"Bivariate Correlation — cor.sdf","text":"Computes correlation two variables edsurvey.data.frame,              light.edsurvey.data.frame, edsurvey.data.frame.list.              correlation accounts plausible values survey design.","code":""},{"path":"/reference/cor.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bivariate Correlation — cor.sdf","text":"","code":"cor.sdf(   x,   y,   data,   method = c(\"Pearson\", \"Spearman\", \"Polychoric\", \"Polyserial\"),   weightVar = \"default\",   reorder = NULL,   dropOmittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   condenseLevels = TRUE,   fisherZ = if (match.arg(method) %in% \"Pearson\") {      TRUE  } else {      FALSE  },   jrrIMax = Inf,   verbose = TRUE,   omittedLevels = deprecated() )"},{"path":"/reference/cor.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bivariate Correlation — cor.sdf","text":"x character variable name data correlated y y character variable name data correlated x data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list method character string indicating correlation coefficient (covariance) computed. One Pearson (default), Spearman, Polychoric, Polyserial. Polyserial, continuous argument must x. weightVar character indicating weight variable use. See Details section lm.sdf. reorder list variables reorder. Defaults NULL (variables reordered). Can set reorder = list(var1 = c(\"\",\"b\",\"c\"), var2 = c(\"4\", \"3\", \"2\", \"1\")). See Examples. dropOmittedLevels logical value. set default value TRUE, drops levels factor variables specified edsurvey.data.frame. Use print edsurvey.data.frame see omitted levels. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode = list(var1 = list(= c(\"\",\"b\",\"c\"), = \"d\")). See Examples. condenseLevels logical value. set default value TRUE either x y categorical variable, function drop unused levels rank levels variable calculating correlation. set FALSE, numeric levels variable remain codebook. See Examples. fisherZ standard error mean calculations, set TRUE use Fisher Z-transformation (see details), FALSE use transformation data. fisherZ argument defaults Fisher Z-transformation Pearson transformation correlation types. jrrIMax numeric value; using jackknife variance estimation method, default estimation option, jrrIMax=Inf, uses                   sampling variance plausible values component sampling variance estimation. Vjrr                   term (see Statistical Methods Used EdSurvey)                   can estimated number plausible values, values larger number                   plausible values survey (including Inf) result plausible values used.                   Higher values jrrIMax lead longer computing times accurate variance estimates. verbose logical value. Set FALSE avoid messages variable conversion. omittedLevels argument deprecated. Use dropOmittedLevels.","code":""},{"path":"/reference/cor.sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bivariate Correlation — cor.sdf","text":"edsurvey.cor print summary methods. class includes following elements: correlation numeric estimated correlation coefficient Zse standard error correlation (Vimp + Vjrr). case Pearson, calculated linear atanh space standard error usual sense. correlates vector length two showing columns correlation coefficient calculated variables correlates discrete order list shows order variable method type correlation estimated Vjrr jackknife component variance estimate. Pearson, atanh space. Vimp imputation component variance estimate. Pearson, atanh space. weight weight variable used npv number plausible values used njk number jackknife replicates used n0 original number observations nUsed number observations used analysis---conditions listwise deletion missings applied se standard error correlation, correlation ([-1,1]) space ZconfidenceInterval confidence interval correlation transformation space confidenceInterval confidence interval correlation correlation ([-1,1]) space transformation name transformation used calculating standard errors","code":""},{"path":"/reference/cor.sdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bivariate Correlation — cor.sdf","text":"getData arguments recode.sdf may useful. (See Examples.) correlation methods calculated described documentation wCorr package---see browseVignettes(package=\"wCorr\"). method set polyserial, x arguments assumed continuous y assumed discrete. Therefore, mindful variable selection may result calculations taking long time complete. Fisher Z-transformation variance stabilizing  normalizing transformation Pearson correlation coefficient (Fisher, 1915). transformation takes inverse hyberbolic tangent correlation coefficients calculates variances confidence intervals. transformed back correlation space (values -1 1, inclusive) using hyperbolic tangent function. Taylor series approximation (delta method) applied standard errors.","code":""},{"path":"/reference/cor.sdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bivariate Correlation — cor.sdf","text":"Fisher, R. . (1915). Frequency distribution values correlation coefficient samples indefinitely large population. Biometrika, 10(4), 507--521.","code":""},{"path":[]},{"path":"/reference/cor.sdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bivariate Correlation — cor.sdf","text":"Paul Bailey; relies heavily wCorr package, written Ahmad Emad Paul Bailey","code":""},{"path":"/reference/cor.sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bivariate Correlation — cor.sdf","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # for two categorical variables any of the following work c1_pears <- cor.sdf(x=\"b017451\", y=\"b003501\", data=sdf, method=\"Pearson\",                     weightVar=\"origwt\") c1_spear <- cor.sdf(x=\"b017451\", y=\"b003501\", data=sdf, method=\"Spearman\",                     weightVar=\"origwt\") c1_polyc <- cor.sdf(x=\"b017451\", y=\"b003501\", data=sdf, method=\"Polychoric\",                     weightVar=\"origwt\")  c1_pears c1_spear c1_polyc  # for categorical variables, users can either keep the original numeric levels of the variables # or condense the levels (default) # the following call condenses the levels of the variable 'c046501' cor.sdf(x=\"c046501\", y=\"c044006\", data=sdf)  # the following call keeps the original levels of the variable 'c046501' cor.sdf(x=\"c046501\", y=\"c044006\", data=sdf, condenseLevels = FALSE)  # these take awhile to calculate for large datasets, so limit to a subset sdf_dnf <- subset(sdf, b003601 == 1)  # for a categorical variable and a scale score any of the following work c2_pears <- cor.sdf(x=\"composite\", y=\"b017451\", data=sdf_dnf, method=\"Pearson\",                     weightVar=\"origwt\") c2_spear <- cor.sdf(x=\"composite\", y=\"b017451\", data=sdf_dnf, method=\"Spearman\",                     weightVar=\"origwt\") c2_polys <- cor.sdf(x=\"composite\", y=\"b017451\", data=sdf_dnf, method=\"Polyserial\",                     weightVar=\"origwt\")  c2_pears c2_spear c2_polys  # recode two variables cor.sdf(x=\"c046501\", y=\"c044006\", data=sdf, method=\"Spearman\", weightVar=\"origwt\",         recode=list(c046501=list(from=\"0%\",to=\"None\"),                     c046501=list(from=c(\"1-5%\", \"6-10%\", \"11-25%\", \"26-50%\",                                         \"51-75%\", \"76-90%\", \"Over 90%\"),                                  to=\"Between 0% and 100%\"),                     c044006=list(from=c(\"1-5%\", \"6-10%\", \"11-25%\", \"26-50%\",                                         \"51-75%\", \"76-90%\", \"Over 90%\"),                                  to=\"Between 0% and 100%\")))  # reorder two variables cor.sdf(x=\"b017451\", y=\"sdracem\", data=sdf, method=\"Spearman\", weightVar=\"origwt\",          reorder=list(sdracem=c(\"White\", \"Hispanic\", \"Black\", \"Asian/Pacific Island\",                                \"Amer Ind/Alaska Natv\", \"Other\"),                      b017451=c(\"Every day\", \"2 or 3 times a week\", \"About once a week\",                                \"Once every few weeks\", \"Never or hardly ever\")))  # recode two variables and reorder cor.sdf(x=\"pared\", y=\"b013801\", data=subset(sdf, !pared %in% \"I Don\\'t Know\"),         method=\"Spearman\", weightVar = \"origwt\",         recode=list(pared=list(from=\"Some ed after H.S.\", to=\"Graduated H.S.\"),                      pared=list(from=\"Graduated college\", to=\"Graduated H.S.\"),                     b013801=list(from=\"0-10\", to=\"Less than 100\"),                      b013801=list(from=\"11-25\", to=\"Less than 100\"),                     b013801=list(from=\"26-100\", to=\"Less than 100\")),         reorder=list(b013801=c(\"Less than 100\", \">100\"))) }"},{"path":"/reference/dim.edsurvey.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of an edsurvey.data.frame or an edsurvey.data.frame.list — dim.edsurvey.data.frame","title":"Dimensions of an edsurvey.data.frame or an edsurvey.data.frame.list — dim.edsurvey.data.frame","text":"Returns dimensions edsurvey.data.frame              edsurvey.data.frame.list.","code":""},{"path":"/reference/dim.edsurvey.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of an edsurvey.data.frame or an edsurvey.data.frame.list — dim.edsurvey.data.frame","text":"","code":"# S3 method for edsurvey.data.frame dim(x)"},{"path":"/reference/dim.edsurvey.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of an edsurvey.data.frame or an edsurvey.data.frame.list — dim.edsurvey.data.frame","text":"x edsurvey.data.frame edsurvey.data.frame.list","code":""},{"path":"/reference/dim.edsurvey.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of an edsurvey.data.frame or an edsurvey.data.frame.list — dim.edsurvey.data.frame","text":"edsurvey.data.frame, returns         numeric vector length two, first element number         rows second element number columns. edsurvey.data.frame.list, returns list length         two, first element named nrow         numeric vector containing number rows element  edsurvey.data.frame.list. second element named  ncol number columns element.         done nrow ncol functions         return meaningful results, even nonstandard.","code":""},{"path":"/reference/dim.edsurvey.data.frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dimensions of an edsurvey.data.frame or an edsurvey.data.frame.list — dim.edsurvey.data.frame","text":"Paul Bailey","code":""},{"path":"/reference/DoFCorrection.html","id":null,"dir":"Reference","previous_headings":"","what":"Degrees of Freedom — DoFCorrection","title":"Degrees of Freedom — DoFCorrection","text":"Calculates degrees freedom statistic              (contrast two statistics) based              jackknife imputation variance estimates.","code":""},{"path":"/reference/DoFCorrection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Degrees of Freedom — DoFCorrection","text":"","code":"DoFCorrection(   varEstA,   varEstB = varEstA,   varA,   varB = varA,   method = c(\"WS\", \"JR\") )"},{"path":"/reference/DoFCorrection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Degrees of Freedom — DoFCorrection","text":"varEstA varEstInput object returned certain functions, lm.sdf returnVarEstInputs=TRUE). variable varA must dataset. See Examples. varEstB similar varEstA argument. left blank, assumed come varEstA. set, degrees freedom contrast varA varB, varB values taken varEstB. varA character names statistic varEstA argument degrees freedom calculation required. varB character names statistic varEstB argument covariance required. varB specified, returns degrees freedom contrast varA varB. method character either WS Welch-Satterthwaite formula JR Johnson-Rust correction Welch-Satterthwaite formula","code":""},{"path":"/reference/DoFCorrection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Degrees of Freedom — DoFCorrection","text":"numeric; estimated degrees freedom","code":""},{"path":"/reference/DoFCorrection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Degrees of Freedom — DoFCorrection","text":"calculation happens notion statistics little variance within strata, strata contribute fewer full degree freedom. functions vectorized, varA varB must contain exactly one variable name. method used compute degrees freedom vignette titled Statistical Methods Used EdSurvey section “Estimation Degrees Freedom.”","code":""},{"path":"/reference/DoFCorrection.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Degrees of Freedom — DoFCorrection","text":"Johnson, E. G., & Rust, K. F. (1992). Population inferences variance estimation NAEP data. Journal Educational Statistics, 17, 175--190.","code":""},{"path":"/reference/DoFCorrection.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Degrees of Freedom — DoFCorrection","text":"Paul Bailey","code":""},{"path":"/reference/DoFCorrection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Degrees of Freedom — DoFCorrection","text":"","code":"if (FALSE) { sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\")) lm1 <- lm.sdf(composite ~ dsex + b017451, sdf, returnVarEstInputs=TRUE) summary(lm1) # this output agrees with summary of lm1 coefficient for dsex DoFCorrection(lm1$varEstInputs,               varA=\"dsexFemale\",               method=\"JR\") # second example, a covariance term requires more work # first, estimate the covariance between two regression coefficients # note that the variable names are parallel to what they are called in lm1 output covFEveryDay <- varEstToCov(lm1$varEstInputs,                             varA=\"dsexFemale\",                             varB=\"b017451Every day\",                             jkSumMultiplier=EdSurvey:::getAttributes(sdf, \"jkSumMultiplier\")) # second, find the difference and the SE of the difference se <- lm1$coefmat[\"dsexFemale\",\"se\"] + lm1$coefmat[\"b017451Every day\",\"se\"] +       -2*covFEveryDay # third, calculate the t-statistic tv <- (coef(lm1)[\"dsexFemale\"] - coef(lm1)[\"b017451Every day\"])/se # fourth, calculate the p-value, which requires the estimated degrees of freedom dofFEveryDay <- DoFCorrection(lm1$varEstInputs,                               varA=\"dsexFemale\",                               varB=\"b017451Every day\",                               method=\"JR\") # finally, the p-value 2*(1-pt(abs(tv), df=dofFEveryDay)) }"},{"path":"/reference/downloadCivEDICCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Instructions for Downloading and Unzipping CivED or ICCS Files — downloadCivEDICCS","title":"Instructions for Downloading and Unzipping CivED or ICCS Files — downloadCivEDICCS","text":"Provides instructions download CivED ICCS data processed readCivEDICCS.","code":""},{"path":"/reference/downloadCivEDICCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instructions for Downloading and Unzipping CivED or ICCS Files — downloadCivEDICCS","text":"","code":"downloadCivEDICCS(years = c(1999, 2009, 2016))"},{"path":"/reference/downloadCivEDICCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instructions for Downloading and Unzipping CivED or ICCS Files — downloadCivEDICCS","text":"years integer vector indicating study year. Valid years 1999, 2009, 2016.","code":""},{"path":[]},{"path":"/reference/downloadCivEDICCS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Instructions for Downloading and Unzipping CivED or ICCS Files — downloadCivEDICCS","text":"Tom Fink","code":""},{"path":"/reference/downloadCivEDICCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Instructions for Downloading and Unzipping CivED or ICCS Files — downloadCivEDICCS","text":"","code":"if (FALSE) { # view instructions to manually download study data downloadCivEDICCS() }"},{"path":"/reference/downloadECLS_K.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip ECLS_K Files — downloadECLS_K","title":"Download and Unzip ECLS_K Files — downloadECLS_K","text":"Uses Internet connection download ECLS_K data.              Data come nces.ed.gov zip files.              function works 1998 2011 data.","code":""},{"path":"/reference/downloadECLS_K.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip ECLS_K Files — downloadECLS_K","text":"","code":"downloadECLS_K(root, years = c(1998, 2011), cache = FALSE, verbose = TRUE)"},{"path":"/reference/downloadECLS_K.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip ECLS_K Files — downloadECLS_K","text":"root character string indicating directory ECLS_K data stored. Files placed subdirectory named ECLS_K/[year]. years integer vector assessment years download. Valid years 1998 2011. cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/downloadECLS_K.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Unzip ECLS_K Files — downloadECLS_K","text":"Beginning ECLS_K 2011 Study Grade 5 data files, ChildK5p.zip source data file DEFLATE64 compressed zip file. means user must manually extract contained childK5p.dat file using external zip program capable handling DEFLATE64 zip format. existing R functions unable handle zip format natively.","code":""},{"path":[]},{"path":"/reference/downloadECLS_K.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip ECLS_K Files — downloadECLS_K","text":"Tom Fink","code":""},{"path":"/reference/downloadECLS_K.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip ECLS_K Files — downloadECLS_K","text":"","code":"if (FALSE) { # root argument will vary by operating system conventions downloadECLS_K(years=c(1998, 2011), root = \"~/\")  # cache=TRUE will download then process the datafiles downloadECLS_K(years=c(1998, 2011), root = \"~/\", cache = TRUE)  # set verbose=FALSE for silent output # if year not specified, download all years downloadECLS_K(root=\"~/\", verbose = FALSE) }"},{"path":"/reference/downloadELS.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip ELS Files — downloadELS","title":"Download and Unzip ELS Files — downloadELS","text":"Uses Internet connection download ELS data.              Data come nces.ed.gov zip files.              function works 2002 data.","code":""},{"path":"/reference/downloadELS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip ELS Files — downloadELS","text":"","code":"downloadELS(root, years = c(2002), cache = FALSE, verbose = TRUE)"},{"path":"/reference/downloadELS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip ELS Files — downloadELS","text":"root character string indicating directory ELS data stored. Files placed subdirectory named ELS/[year]. years integer vector assessment years download. Valid year 2002 . cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":[]},{"path":"/reference/downloadELS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip ELS Files — downloadELS","text":"Tom Fink","code":""},{"path":"/reference/downloadELS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip ELS Files — downloadELS","text":"","code":"if (FALSE) { # root argument will vary by operating system conventions downloadELS(years=2002, root = \"~/\")  # cache=TRUE will download then process the datafiles downloadELS(years=2002, root = \"~/\", cache = TRUE)  # set verbose=FALSE for silent output # if year not specified, download all years downloadELS(root=\"~/\", verbose = FALSE) }"},{"path":"/reference/downloadHSLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip HSLS Files — downloadHSLS","title":"Download and Unzip HSLS Files — downloadHSLS","text":"Uses Internet connection download HSLS data.              Data come nces.ed.gov zip files.              function works 2009 data.","code":""},{"path":"/reference/downloadHSLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip HSLS Files — downloadHSLS","text":"","code":"downloadHSLS(root, years = c(2009), cache = FALSE, verbose = TRUE)"},{"path":"/reference/downloadHSLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip HSLS Files — downloadHSLS","text":"root character string indicating directory HSLS data stored. Files placed subdirectory named HSLS/[year]. years integer vector assessment years download. Valid year 2009 . cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":[]},{"path":"/reference/downloadHSLS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip HSLS Files — downloadHSLS","text":"Tom Fink","code":""},{"path":"/reference/downloadHSLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip HSLS Files — downloadHSLS","text":"","code":"if (FALSE) { # root argument will vary by operating system conventions downloadHSLS(root = \"~/\", years=2009)  # set verbose=FALSE for silent output # if year not specified, download all years downloadHSLS(root=\"~/\", verbose = FALSE) }"},{"path":"/reference/downloadICILS.html","id":null,"dir":"Reference","previous_headings":"","what":"Instructions for Downloading and Unzipping ICILS Files — downloadICILS","title":"Instructions for Downloading and Unzipping ICILS Files — downloadICILS","text":"Provides instructions download ICILS data processed readICILS.","code":""},{"path":"/reference/downloadICILS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instructions for Downloading and Unzipping ICILS Files — downloadICILS","text":"","code":"downloadICILS(years = c(2013, 2018))"},{"path":"/reference/downloadICILS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instructions for Downloading and Unzipping ICILS Files — downloadICILS","text":"years integer vector indicating study year. Valid year 2013 .","code":""},{"path":[]},{"path":"/reference/downloadICILS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Instructions for Downloading and Unzipping ICILS Files — downloadICILS","text":"Tom Fink","code":""},{"path":"/reference/downloadICILS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Instructions for Downloading and Unzipping ICILS Files — downloadICILS","text":"","code":"if (FALSE) { # view instructions to manually download study data downloadICILS() }"},{"path":"/reference/downloadNHES.html","id":null,"dir":"Reference","previous_headings":"","what":"Instructions for Downloading and Unzipping NHES Files — downloadNHES","title":"Instructions for Downloading and Unzipping NHES Files — downloadNHES","text":"Provides instructions download public-use National Household Education Survey (NHES) data SPSS (*.sav) format              use readNHES function.              data originates NCES Online Codebook zip files.              function works data years              1991, 1993, 1995, 1996, 1999, 2001, 2003, 2005, 2007, 2012, 2016, 2019.","code":""},{"path":"/reference/downloadNHES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instructions for Downloading and Unzipping NHES Files — downloadNHES","text":"","code":"downloadNHES(   years = c(1991, 1993, 1995, 1996, 1999, 2001, 2003, 2005, 2007, 2012, 2016, 2019) )"},{"path":"/reference/downloadNHES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instructions for Downloading and Unzipping NHES Files — downloadNHES","text":"years integer vector assessment years. Valid years 1991, 1993, 1995, 1996, 1999, 2001, 2003, 2005, 2007, 2012, 2016, 2019. instructions year, used reference .","code":""},{"path":"/reference/downloadNHES.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Instructions for Downloading and Unzipping NHES Files — downloadNHES","text":"NHES data files additionally available NHES data product page.  However,       data files provided page include available years data, contain inconsistent data file formats.","code":""},{"path":[]},{"path":"/reference/downloadNHES.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Instructions for Downloading and Unzipping NHES Files — downloadNHES","text":"Tom Fink","code":""},{"path":"/reference/downloadNHES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Instructions for Downloading and Unzipping NHES Files — downloadNHES","text":"","code":"if (FALSE) { #view instructions to manually download NHES data downloadNHES() }"},{"path":"/reference/downloadPIAAC.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip PIAAC Files — downloadPIAAC","title":"Download and Unzip PIAAC Files — downloadPIAAC","text":"Uses Internet connection download PIAAC data              computer. Data come OECD website.","code":""},{"path":"/reference/downloadPIAAC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip PIAAC Files — downloadPIAAC","text":"","code":"downloadPIAAC(root, cycle = 1, cache = FALSE, verbose = TRUE)"},{"path":"/reference/downloadPIAAC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip PIAAC Files — downloadPIAAC","text":"root character string indicating directory PIAAC data stored. Files placed folder named PIAAC/cycle [cycle number]. cycle numeric value indicating assessment cycle download. Valid cycle 1 . cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/downloadPIAAC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip PIAAC Files — downloadPIAAC","text":"Eric Buehler, Paul Bailey, Trang Nguyen","code":""},{"path":"/reference/downloadPIAAC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip PIAAC Files — downloadPIAAC","text":"","code":"if (FALSE) { # download all available data for PIAAC round 1 to \"~/PIAAC/Round 1\" folder # root argument will vary by operating system conventions downloadPIAAC(root=\"~/\") }"},{"path":"/reference/downloadPIRLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip PIRLS Files — downloadPIRLS","title":"Download and Unzip PIRLS Files — downloadPIRLS","text":"Uses Internet connection download PIRLS data.              Data come timssandpirls.bc.edu zip files.              function works 2001, 2006, 2011, 2016 data.","code":""},{"path":"/reference/downloadPIRLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip PIRLS Files — downloadPIRLS","text":"","code":"downloadPIRLS(   root,   years = c(2001, 2006, 2011, 2016),   cache = FALSE,   verbose = TRUE )"},{"path":"/reference/downloadPIRLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip PIRLS Files — downloadPIRLS","text":"root character string indicating directory PIRLS data stored. Files placed subdirectory named PIRLS/[year]. years integer vector assessment years download. Valid years 2001, 2006, 2011, 2016. cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":[]},{"path":"/reference/downloadPIRLS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip PIRLS Files — downloadPIRLS","text":"Tom Fink","code":""},{"path":"/reference/downloadPIRLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip PIRLS Files — downloadPIRLS","text":"","code":"if (FALSE) { # root argument will vary by operating system conventions downloadPIRLS(year=c(2006, 2011), root = \"~/\")  # cache=TRUE will download then process the datafiles downloadPIRLS(year=2011, root = \"~/\", cache = TRUE)  # set verbose=FALSE for silent output # if year not specified, download all years downloadPIRLS(root=\"~/\", verbose = FALSE) }"},{"path":"/reference/downloadPISA.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip PISA Files — downloadPISA","title":"Download and Unzip PISA Files — downloadPISA","text":"Uses Internet connection download PISA data              computer. Data come OECD website.","code":""},{"path":"/reference/downloadPISA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip PISA Files — downloadPISA","text":"","code":"downloadPISA(   root,   years = c(2000, 2003, 2006, 2009, 2012, 2015, 2018),   database = c(\"INT\", \"CBA\", \"FIN\"),   cache = FALSE,   verbose = TRUE )"},{"path":"/reference/downloadPISA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip PISA Files — downloadPISA","text":"root character string indicating directory PISA data stored. Files placed folder named PISA/[year]. years integer vector assessment years download. Valid years 2000, 2003, 2006, 2009, 2012, 2015, 2018. database character vector indicate database download . 2012, three databases available (INT = International, CBA = Computer-Based Assessment, FIN = Financial Literacy). years, INT available (example, PISA 2015 financial literacy downloaded, database argument set INT). Defaults INT. cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/downloadPISA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Unzip PISA Files — downloadPISA","text":"function uses download.file download files provided URLs. machines might require different user agent HTTP(S) requests. downloading gives error behaves unexpectedly (e.g., zip file unzipped data file significantly smaller expected), users can toggle HTTPUserAgent options find one works machines. One common alternative option options(HTTPUserAgent=\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0\") Beginning 2018 data files, SPSS_STU_COG.zip source data file DEFLATE64 compressed zip file. means user must manually extract contained CY07_MSU_STU_COG.sav file using external zip program capable handling DEFLATE64 zip format, existing R functions unable handle zip format natively.","code":""},{"path":[]},{"path":"/reference/downloadPISA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip PISA Files — downloadPISA","text":"Yuqi Liao, Paul Bailey, Trang Nguyen","code":""},{"path":"/reference/downloadPISA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip PISA Files — downloadPISA","text":"","code":"if (FALSE) { # download PISA 2012 data (for all three databases) downloadPISA(years = 2012, database = c(\"INT\",\"CBA\",\"FIN\"), root=\"~/\")  # download PISA 2009, 2012, and 2015 data (International Database only)  # to C:/PISA/2009, C:/PISA/2012, and C:/PISA/2015 folders, respectively downloadPISA(years = c(2009,2012,2015), root=\"~/\")   }"},{"path":"/reference/downloadPISA_YAFS.html","id":null,"dir":"Reference","previous_headings":"","what":"Instructions for Downloading and Unzipping PISA YAFS Files — downloadPISA_YAFS","title":"Instructions for Downloading and Unzipping PISA YAFS Files — downloadPISA_YAFS","text":"Provides instructions download PISA YAFS data processed readPISA_YAFS.","code":""},{"path":"/reference/downloadPISA_YAFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instructions for Downloading and Unzipping PISA YAFS Files — downloadPISA_YAFS","text":"","code":"downloadPISA_YAFS(years = c(2016))"},{"path":"/reference/downloadPISA_YAFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instructions for Downloading and Unzipping PISA YAFS Files — downloadPISA_YAFS","text":"years integer vector indicating study year. Valid year 2016 .","code":""},{"path":[]},{"path":"/reference/downloadPISA_YAFS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Instructions for Downloading and Unzipping PISA YAFS Files — downloadPISA_YAFS","text":"Tom Fink","code":""},{"path":"/reference/downloadPISA_YAFS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Instructions for Downloading and Unzipping PISA YAFS Files — downloadPISA_YAFS","text":"","code":"if (FALSE) { # view instructions to manually download study data downloadPISA_YAFS() }"},{"path":"/reference/downloadSSOCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Instructions for Downloading and Unzipping SSOCS Files — downloadSSOCS","title":"Instructions for Downloading and Unzipping SSOCS Files — downloadSSOCS","text":"Provides instructions download School Survey Crime Safety (SSOCS) data SAS (*.sas7bdat) format              use readSSOCS function.              data originates SSOCS Data Products website nces.ed.gov.              function works following school year datasets: 2000 (1999--2000), 2004 (2003--2004), 2006 (2005--2006),              2008 (2007--2008), 2010 (2009--2010), 2016 (2015--2016), 2018 (2017--2018).","code":""},{"path":"/reference/downloadSSOCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instructions for Downloading and Unzipping SSOCS Files — downloadSSOCS","text":"","code":"downloadSSOCS(years = c(2000, 2004, 2006, 2008, 2010, 2016, 2018))"},{"path":"/reference/downloadSSOCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instructions for Downloading and Unzipping SSOCS Files — downloadSSOCS","text":"years integer vector study years download. Valid years follows: 2000, 2004, 2006, 2008, 2010, 2016, 2018 (see description).  instructions year, reference .","code":""},{"path":"/reference/downloadSSOCS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Instructions for Downloading and Unzipping SSOCS Files — downloadSSOCS","text":"year parameter value shortened ending year school year (e.g., 2006 refers 2005--2006 school year data). Manually downloading data files required fulfill data usage agreement.","code":""},{"path":[]},{"path":"/reference/downloadSSOCS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Instructions for Downloading and Unzipping SSOCS Files — downloadSSOCS","text":"Tom Fink","code":""},{"path":"/reference/downloadSSOCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Instructions for Downloading and Unzipping SSOCS Files — downloadSSOCS","text":"","code":"if (FALSE) { #see instructions for downloading SSOCS Data downloadSSOCS() }"},{"path":"/reference/downloadTALIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip TALIS Files — downloadTALIS","title":"Download and Unzip TALIS Files — downloadTALIS","text":"Uses Internet connection download TALIS data.              Data come OECD TALIS site international zip files.              function works 2008, 2013,2018 data.","code":""},{"path":"/reference/downloadTALIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip TALIS Files — downloadTALIS","text":"","code":"downloadTALIS(root, years = c(2008, 2013, 2018), cache = FALSE, verbose = TRUE)"},{"path":"/reference/downloadTALIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip TALIS Files — downloadTALIS","text":"root character string indicating directory TALIS data stored. Files placed subdirectory named TALIS/[year]. years numeric value indicating assessment year. Available years 2008, 2013, 2018. cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":[]},{"path":"/reference/downloadTALIS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip TALIS Files — downloadTALIS","text":"Tom Fink Trang Nguyen","code":""},{"path":"/reference/downloadTALIS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip TALIS Files — downloadTALIS","text":"","code":"if (FALSE) { # root argument will vary by operating system conventions downloadTALIS(root = \"~/\", years = 2018)    # cache=TRUE will download then process the datafiles downloadTALIS(root = \"~/\", years = 2015, cache = TRUE)    # set verbose=FALSE for silent output # if year not specified, download all years downloadTALIS(root=\"~/\", verbose = FALSE) }"},{"path":"/reference/downloadTIMSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip TIMSS Files — downloadTIMSS","title":"Download and Unzip TIMSS Files — downloadTIMSS","text":"Uses Internet connection download TIMSS data.              Data come timssandpirls.bc.edu zip files.              function works 2003, 2007, 2011, 2015, 2019 data.","code":""},{"path":"/reference/downloadTIMSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip TIMSS Files — downloadTIMSS","text":"","code":"downloadTIMSS(   root,   years = c(2003, 2007, 2011, 2015, 2019),   cache = FALSE,   verbose = TRUE )"},{"path":"/reference/downloadTIMSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip TIMSS Files — downloadTIMSS","text":"root character string indicating directory TIMSS data stored. Files placed subdirectory named TIMSS/[year]. years integer vector assessment years download. Valid years 2003, 2007, 2011, 2015, 2019. cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":[]},{"path":"/reference/downloadTIMSS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip TIMSS Files — downloadTIMSS","text":"Tom Fink","code":""},{"path":"/reference/downloadTIMSS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip TIMSS Files — downloadTIMSS","text":"","code":"if (FALSE) { # root argument will vary by operating system conventions downloadTIMSS(year=c(2019, 2015, 2011), root = \"~/\")  # cache=TRUE will download then process the datafiles downloadTIMSS(year=2015, root = \"~/\", cache = TRUE)  # set verbose=FALSE for silent output # if year not specified, download all years downloadTIMSS(root=\"~/\", verbose = FALSE) }"},{"path":"/reference/downloadTIMSSAdv.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip TIMSS Advanced Files — downloadTIMSSAdv","title":"Download and Unzip TIMSS Advanced Files — downloadTIMSSAdv","text":"Uses Internet connection download TIMSS Advanced data.              Data come timssandpirls.bc.edu zip files.              function works 1995, 2008, 2015 data.","code":""},{"path":"/reference/downloadTIMSSAdv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip TIMSS Advanced Files — downloadTIMSSAdv","text":"","code":"downloadTIMSSAdv(   root,   years = c(1995, 2008, 2015),   cache = FALSE,   verbose = TRUE )"},{"path":"/reference/downloadTIMSSAdv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip TIMSS Advanced Files — downloadTIMSSAdv","text":"root character string indicating directory TIMSS Advanced data stored. Files placed subdirectory named TIMSSAdv/[year]. years integer vector assessment years download. Valid years 1995, 2008, 2015. cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":[]},{"path":"/reference/downloadTIMSSAdv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip TIMSS Advanced Files — downloadTIMSSAdv","text":"Tom Fink","code":""},{"path":"/reference/downloadTIMSSAdv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip TIMSS Advanced Files — downloadTIMSSAdv","text":"","code":"if (FALSE) { # root argument will vary by operating system conventions downloadTIMSSAdv(year=c(2008, 2015), root = \"~/\")  # cache=TRUE will download then process the datafiles downloadTIMSSAdv(year=2015, root = \"~/\", cache = TRUE)  # set verbose=FALSE for silent output # if year not specified, download all years downloadTIMSSAdv(root=\"~/\", verbose = FALSE) }"},{"path":"/reference/download_ePIRLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Unzip ePIRLS Files — download_ePIRLS","title":"Download and Unzip ePIRLS Files — download_ePIRLS","text":"Uses Internet connection download ePIRLS data.              Data come timssandpirls.bc.edu zip files.              function works 2016 data.","code":""},{"path":"/reference/download_ePIRLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Unzip ePIRLS Files — download_ePIRLS","text":"","code":"download_ePIRLS(root, years = c(2016), cache = FALSE, verbose = TRUE)"},{"path":"/reference/download_ePIRLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Unzip ePIRLS Files — download_ePIRLS","text":"root character string indicating directory ePIRLS data stored. Files placed subdirectory named ePIRLS/[year]. years integer vector assessment years download. Valid year 2016 . cache logical value set process cache text (.txt) version files. takes long time saves time future uses data. Default value FALSE. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":[]},{"path":"/reference/download_ePIRLS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Unzip ePIRLS Files — download_ePIRLS","text":"Tom Fink","code":""},{"path":"/reference/download_ePIRLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Unzip ePIRLS Files — download_ePIRLS","text":"","code":"if (FALSE) { # root argument will vary by operating system conventions download_ePIRLS(years=2016, root = \"~/\")  # cache=TRUE will download then process the datafiles download_ePIRLS(years=2016, root = \"~/\", cache = TRUE)  # set verbose=FALSE for silent output # if year not specified, download all years download_ePIRLS(root=\"~/\", verbose = FALSE) }"},{"path":"/reference/drawPVs.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw plausible values from an mml fit — drawPVs.sdf","title":"Draw plausible values from an mml fit — drawPVs.sdf","text":"Draw plausible values mml fit","code":""},{"path":"/reference/drawPVs.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw plausible values from an mml fit — drawPVs.sdf","text":"","code":"# S3 method for sdf drawPVs(   x,   npv = 5L,   pvVariableNameSuffix = \"_dire\",   data,   stochasticBeta = FALSE,   construct = NULL,   ... )"},{"path":"/reference/drawPVs.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw plausible values from an mml fit — drawPVs.sdf","text":"x fit call mml.sdf, summary.mml.sdf,  summary mml.sdf call. npv integer indicating number plausible values draw pvVariableNameSuffix suffix append name new plausible values data edsurvey.data.frame light.edsurvey.data.frame plausible values added covariates item responses taken generate stochasticBeta logical TRUE regressopm coefficients drawn posterior distribution. Can also data frame values (see Details). construct construct draw PVs ... additional parameters","code":""},{"path":"/reference/edsurvey-class.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","title":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","text":"Two new classes EdSurvey described section: edsurvey.data.frame              light.edsurvey.data.frame. edsurvey.data.frame              class stores metadata survey data, data stored              disk (via LaF package), allowing gigabytes data used easily machine otherwise              inappropriate manipulating large datasets.              light.edsurvey.data.frame typically generated              getData function stores data              data.frame.              classes use attributes manage metadata allow              correct statistics used calculating results;              getAttributes acts accessor attributes, whereas              setAttributes acts mutator attributes.              convenience, edsurvey.data.frame              implements $ function extract variable.","code":""},{"path":"/reference/edsurvey-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","text":"","code":"edsurvey.data.frame(   userConditions,   defaultConditions,   dataList = list(),   weights,   pvvars,   subject,   year,   assessmentCode,   dataType,   gradeLevel,   achievementLevels,   omittedLevels,   survey,   country,   psuVar,   stratumVar,   jkSumMultiplier,   recodes = NULL,   validateFactorLabels = FALSE,   forceLower = TRUE,   reqDecimalConversion = TRUE,   fr2Path = NULL,   dim0 = NULL,   cacheDataLevelName = NULL )  # S3 method for edsurvey.data.frame $(x, i)  # S3 method for edsurvey.data.frame $(x, name) <- value  # S4 method for edsurvey.data.frame,ANY %in%(x, table)  # S4 method for edsurvey.data.frame.list,ANY %in%(x, table)  getAttributes(data, attribute = NULL, errorCheck = TRUE)  setAttributes(data, attribute, value)  getPSUVar(   data,   weightVar = attributes(getAttributes(data, \"weights\"))[[\"default\"]] )  getStratumVar(   data,   weightVar = attributes(getAttributes(data, \"weights\"))[[\"default\"]] )"},{"path":"/reference/edsurvey-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","text":"userConditions list user conditions includes subsetting recoding conditions defaultConditions list default conditions often set survey dataList list dataListItem objects model data structure survey weights list stores information regarding weight variables. See Details. pvvars list stores information regarding plausible values. See Details. subject character indicates subject domain given data year character numeric indicates year given data assessmentCode character indicates code assessment. Can National International. dataType character indicates unit level main data. Examples include Student, teacher, school, Adult Data. gradeLevel character indicates grade level given data achievementLevels list achievement-level categories cutpoints omittedLevels list default omitted levels given data survey character indicates name survey country character indicates country given data psuVar character indicates PSU sampling unit variable. Ignored weights psuVar defined. stratumVar character indicates stratum variable. Ignored weights stratumVar defined. jkSumMultiplier numeric value jackknife coefficient (used calculating jackknife replication estimation) recodes list variable recodes given data validateFactorLabels Boolean indicates whether getData function needs validate factor variables forceLower Boolean; set TRUE, automatically lowercase variable names reqDecimalConversion Boolean; set TRUE, getData call multiply raw file value decimal multiplier fr2Path character file location NAEP assessments identify location codebook file fr2 format dim0 numeric vector length two. speed construction, dimensions data can provided cacheDataLevelName character value set match named element dataList utilize data caching scheme.  See details. x edsurvey.data.frame character, column name extract name character vector column edit value outside assignment context, new value given attribute table edsurvey.data.frame edsurvey.data.frame.list x searched data edsurvey.data.frame attribute character, name attribute get set errorCheck logical; see Details weightVar character indicating full sample weights. Required getPSUVar getStratumVar default weight.","code":""},{"path":"/reference/edsurvey-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","text":"object class edsurvey.data.frame following elements: Elements store data connections data codebooks dataList list object containing surveys dataListItem objects Elements store sample design default subsetting information given survey data userConditions list containing user conditions, set using subset.edsurvey.data.frame method defaultConditions default subsample conditions weights list containing weights. See Details. stratumVar character indicates default strata identification variable name data. Often used Taylor series estimation. psuVar character indicates default PSU (sampling unit) identification variable name data. Often used Taylor series estimation. pvvars list containing plausible values. See Details. achievementLevels default achievement cutoff scores names. See Details. omittedLevels levels factor variables omitted edsurvey.data.frame Elements store descriptive information survey survey type survey data subject subject data year year assessment assessmentCode assessment code dataType type data (e.g., student school) gradeLevel grade dataset contained edsurvey.data.frame Elements used mml.sdf dichotParamTab IRT item parameters dichotomous items data frame polyParamTab IRT item parameters polytomous items data frame adjustedData IRT item parameter adjustment information data frame testData IRT transformation constants data frame scoreCard item scoring information data frame scoreDict generic scoring information data frame scoreFunction function turns variables items numeric scores","code":""},{"path":"/reference/edsurvey-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","text":"weight list element named weight variable name list elements jkbase jksuffixes. jkbase variable single character indicating jackknife replicate weight base name, whereas jksuffixes vector one element jackknife replicate weight. two pasted together, form complete set jackknife replicate weights. weights argument also can attribute default weight. primary sampling unit stratum variables change weight, also can defined weight list psuVar stratumVar. option used, overrides psuVar stratumVar edsurvey.data.frame, can left blank. weight must define one psuVar stratumVar. pvvars list element subject subscale score plausible values. element list varnames element indicates column names plausible values achievementLevel argument named vector achievement-level cutpoints. edsurvey.data.frame implements unique data caching mechanism allows users create merge data columns flexibility. cache object single data.frame element edsurvey.data.frame. accommodate studies complex data models cache can support one data level time. cacheDataLevelName parameter indicates named element dataList cache indicated. default value cacheDataLevelName = NULL set first item dataList cache level edsurvey.data.frame.","code":""},{"path":"/reference/edsurvey-class.html","id":"edsurvey-classes","dir":"Reference","previous_headings":"","what":"EdSurvey Classes","title":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","text":"edsurvey.data.frame object stores connection data disk along important survey sample design information. edsurvey.data.frame.list list edsurvey.data.frame objects. often used trend cross-regional analysis gap function. See edsurvey.data.frame.list information create edsurvey.data.frame.list. Users also can refer vignette titled Using EdSurvey Trend Analysis examples. Besides edsurvey.data.frame class, EdSurvey package also implements light.edsurvey.data.frame class, can used EdSurvey non-EdSurvey functions. particularly, light.edsurvey.data.frame data.frame basic survey sample design information (.e., plausible values weights), used variance estimation analytical functions. also base R data.frame, users can apply base R functions data manipulation. See vignette titled Using getData Function EdSurvey examples. Many functions remove attributes data frame, light.edsurvey.data.frame, rebindAttributes function can add back. Users can get light.edsurvey.data.frame object using getData method addAttributes=TRUE.","code":""},{"path":"/reference/edsurvey-class.html","id":"basic-methods-for-edsurvey-classes","dir":"Reference","previous_headings":"","what":"Basic Methods for EdSurvey Classes","title":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","text":"Extracting column edsurvey.data.frame Users can extract column edsurvey.data.frame object using $ [] like normal data frame. Extracting updating attributes object class edsurvey.data.frame light.edsurvey.data.frame Users can use getAttributes method extract attribute edsurvey.data.frame light.edsurvey.data.frame. errorCheck parameter default value ofTRUE, throws error attribute found. Setting errorCheck = FALSE suppress error checking, return NULL attribute found. light.edsurvey.data.frame attributes related data connection data already read memory. users want update attribute (.e., omittedLevels), can use setAttributes method.","code":""},{"path":[]},{"path":"/reference/edsurvey-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","text":"Tom Fink, Trang Nguyen, Paul Bailey","code":""},{"path":"/reference/edsurvey-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Class Constructors and Helpers — edsurvey.data.frame","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # run a base R function on a column of edsurvey.data.frame table(sdf$dsex) # assignment table(sdf$b013801) sdf$books <- ifelse(sdf$b013801 %in% c(\"0-10\", \"11-25\"), \"0-25 books\", \"26+ books\") table(sdf$books, sdf$b013801)  # extract default omitted levels of NAEP primer data getAttributes(sdf, \"omittedLevels\") #[1] \"Multiple\" NA         \"Omitted\"  # update default omitted levels of NAEP primer data sdf <- setAttributes(sdf, \"omittedLevels\", c(\"Multiple\", \"Omitted\", NA, \"(Missing)\")) getAttributes(sdf, \"omittedLevels\") #[1] \"Multiple\"  \"Omitted\"   NA          \"(Missing)\" }"},{"path":"/reference/EdSurvey-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of NCES Education Survey and Assessment Data — EdSurvey-package","title":"Analysis of NCES Education Survey and Assessment Data — EdSurvey-package","text":"EdSurvey package uses appropriate methods analyzing NCES datasets small memory footprint. Existing system control files, included data, used read format data processing.","code":""},{"path":"/reference/EdSurvey-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis of NCES Education Survey and Assessment Data — EdSurvey-package","text":"get started using EdSurvey, see vignettes tutorials statistical methodologies. Use vignette(\"introduction\", package=\"EdSurvey\") see vignettes. package provides functions called readNAEP, readCivEDICCS, readICILS, readPIAAC, readPIRLS, read_ePIRLS, readPISA, readTALIS, readTIMSS, readTIMSSAdv, readECLS_K2011 read NCES datasets. functions achievementLevels, cor.sdf, edsurveyTable, summary2, lm.sdf, logit.sdf, mixed.sdf, rq.sdf, percentile, gap can used analyze data. advanced users, getData extracts data interest data frame processing.","code":""},{"path":"/reference/edsurvey.data.frame.list.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Dataset Vectorization — edsurvey.data.frame.list","title":"EdSurvey Dataset Vectorization — edsurvey.data.frame.list","text":"edsurvey.data.frame.list function creates              edsurvey.data.frame.list object series              edsurvey.data.frame objects.              append.edsurvey.data.frame.list creates              edsurvey.data.frame.list two              edsurvey.data.frame edsurvey.data.frame.list objects. edsurvey.data.frame.list useful looking              data, example, across time graphically, reduces              repetition function calls.              user may specify variable varies across              edsurvey.data.frame objects              included output.","code":""},{"path":"/reference/edsurvey.data.frame.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Dataset Vectorization — edsurvey.data.frame.list","text":"","code":"edsurvey.data.frame.list(datalist, cov = NULL, labels = NULL)  append.edsurvey.data.frame.list(sdfA, sdfB, labelsA = NULL, labelsB = NULL)"},{"path":"/reference/edsurvey.data.frame.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Dataset Vectorization — edsurvey.data.frame.list","text":"datalist list edsurvey.data.frames combined cov character vector indicates varies across edsurvey.data.frame objects. Guessed supplied. example, several edsurvey.data.frames several different countries supplied, cov set country. labels character vector specifies labels. Must length datalist. needed cov exists can guessed. See Examples. sdfA edsurvey.data.frame edsurvey.data.frame.list combined sdfB edsurvey.data.frame edsurvey.data.frame.list combined labelsA character vector specifies labels sdfA creating new edsurvey.data.frame.list. labelsB character vector specifies labels sdfB creating new edsurvey.data.frame.list.","code":""},{"path":"/reference/edsurvey.data.frame.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Dataset Vectorization — edsurvey.data.frame.list","text":"edsurvey.data.frame.list returns edsurvey.data.frame.list elements datalist list edsurvey.data.frame objects covs character vector key variables vary within                    edsurvey.data.frame.list.                    labels included, included                    covs. unusual circumstance sdfA sdfB                    edsurvey.data.frame.list                    covs, labels supplied, covs                    simply pasted together colons . append.edsurvey.data.frame.list returns edsurvey.data.frame.list elements datalist list edsurvey.data.frame objects covs character vector key variables vary within                    edsurvey.data.frame.list.                    labels included, included                    covs.","code":""},{"path":"/reference/edsurvey.data.frame.list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Dataset Vectorization — edsurvey.data.frame.list","text":"edsurvey.data.frame.list can used place edsurvey.data.frame function calls, results returned component edsurvey.data.frames, organization results varying particular method. edsurvey.data.frame.list can created several edsurvey.data.frame objects related; example, NAEP mathematics assessments one differences (e.g.,  different years). Another example data multiple countries international assessment. cov labels missing, edsurvey.data.frame.list attempts guess variables may varying uses . varying covariates, generic labels automatically generated.","code":""},{"path":"/reference/edsurvey.data.frame.list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Dataset Vectorization — edsurvey.data.frame.list","text":"Paul Bailey, Huade Huo","code":""},{"path":"/reference/edsurvey.data.frame.list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Dataset Vectorization — edsurvey.data.frame.list","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # NOTE: the following code would not normally have to be run but is used here # to generate demo data. # Specifically, make subsets of sdf by the scrpsu variable, # \"Scrambled PSU and school code\" sdfA <- subset(sdf, scrpsu %in% c(5,45,56)) sdfB <- subset(sdf, scrpsu %in% c(75,76,78)) sdfC <- subset(sdf, scrpsu %in% 100:200) sdfD <- subset(sdf, scrpsu %in% 201:300)  # construct an edsurvey.data.frame.list from these four data sets sdfl <- edsurvey.data.frame.list(list(sdfA, sdfB, sdfC, sdfD),                                  labels=c(\"A locations\",                                           \"B locations\",                                           \"C locations\",                                           \"D locations\"))  # alternative method of building sdfl2 <- sdfA + sdfB + sdfC  # check contents sdfA %in% sdfl # note %in% checks by survey (NAEP 2005 Math for sdf, # sdfA, sdfB, sdfC, and sdfD) not by subset, so this also return TRUE sdfD %in% sdfl2  # this shows how these datasets will be described sdfl$covs  # get the gaps between Male and Female for each data set gap1 <- gap(\"composite\", sdfl, dsex==\"Male\", dsex==\"Female\") gap1  # make combine sdfA and sdfB sdfl1a <- edsurvey.data.frame.list(list(sdfA, sdfB),                                    labels=c(\"A locations\",                                             \"B locations\"))  # combine sdfC and sdfD sdfl1b <- edsurvey.data.frame.list(list(sdfC, sdfD),                                    labels=c(\"C locations\",                                             \"D locations\"))  # append to make sdf3 the same as sdfl sdfl3 <- append.edsurvey.data.frame.list(sdfl1a, sdfl1b) identical(sdfl, sdfl3) #TRUE  # append to make sdf4 the same as sdfl sdfl4 <- append.edsurvey.data.frame.list(   append.edsurvey.data.frame.list(sdfl1a, sdfC, labelsB = \"C locations\"),   sdfD,   labelsB = \"D locations\") identical(sdfl, sdfl4) #TRUE  # show label deconflicting downloadTIMSS(root=\"~/\", years=c(2011, 2015)) t11 <- readTIMSS(\"~/TIMSS/2011\", countries = c(\"fin\", \"usa\"), gradeLvl = 4) t15 <- readTIMSS(\"~/TIMSS/2015\", countries = c(\"fin\", \"usa\"), gradeLvl = 4) # these would not be unique t11$covs t15$covs # resulting values includes year now t11_15 <- append.edsurvey.data.frame.list(t11, t15) t11_15$covs  }"},{"path":"/reference/edsurveyTable.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Tables With Conditional Means — edsurveyTable","title":"EdSurvey Tables With Conditional Means — edsurveyTable","text":"Returns summary table (data.frame) shows number students, percentage students, mean value outcome (left-hand side) variable predictor (right-hand side) variable(s).","code":""},{"path":"/reference/edsurveyTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Tables With Conditional Means — edsurveyTable","text":"","code":"edsurveyTable(   formula,   data,   weightVar = NULL,   jrrIMax = 1,   pctAggregationLevel = NULL,   returnMeans = TRUE,   returnSepct = TRUE,   varMethod = c(\"jackknife\", \"Taylor\"),   drop = FALSE,   dropOmittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   returnVarEstInputs = FALSE,   omittedLevels = deprecated() )"},{"path":"/reference/edsurveyTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Tables With Conditional Means — edsurveyTable","text":"formula object class formula, potentially subject scale subscale left-hand side variables tabulate right-hand side. left-hand side formula omitted returnMeans TRUE, default subject scale subscale used. can find default composite scale subscales using function showPlausibleValues. Note order right-hand side variables affects output. data object class edsurvey.data.frame. See readNAEP generate edsurvey.data.frame. weightVar character string indicating weight variable use. Note name weight variable needs included , replicate weights automatically included. argument NULL, function uses default. Use showWeights find default. jrrIMax numeric value; using jackknife variance estimation method, default estimation option, jrrIMax=1, uses   sampling variance first plausible value component sampling variance estimation. \\(V_{jrr}\\)   term (see Details section lm.sdf see definition \\(V_{jrr}\\)) can estimated number plausible values, values larger number   plausible values survey (including Inf) result plausible values used.   Higher values jrrIMax lead longer computing times accurate variance estimates. pctAggregationLevel percentage variable sums 100 first pctAggregationLevel columns. , set 0, PCT column adds 1 across entire sample. set 1, PCT column adds 1 within level first variable right-hand side formula; set 2, percentage adds 100 within interaction first second variable, . Default NULL, result lowest feasible aggregation level. See Examples section. returnMeans logical value; set TRUE (default) get MEAN SE(MEAN) columns returned table described Value section. returnSepct set TRUE (default) get SEPCT column returned table described Value section. varMethod character set jackknife Taylor indicates variance estimation method used. drop logical value. set default value FALSE, single column returned, still represented data.frame converted vector. dropOmittedLevels logical value. set default value TRUE, drops levels factor variables specified edsurvey.data.frame. Use print edsurvey.data.frame see omitted levels. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode = list(var1 = list(= c(\"\", \"b\", \"c\"), = \"c\")). returnVarEstInputs logical value set TRUE return inputs jackknife imputation variance estimates, allows computation covariances estimates. omittedLevels argument deprecated. Use dropOmittedLevels.","code":""},{"path":"/reference/edsurveyTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Tables With Conditional Means — edsurveyTable","text":"table following columns: RHS levels one column right-hand side variable. row                      regards students levels shown row. N count number students survey RHS levels WTD_N weighted N count students survey RHS levels PCT percentage students aggregation level specified pctAggregationLevel (see Arguments).                      See vignette titled         Statistical Methods Used EdSurvey             section “Estimation Weighted Percentages” first subsection “Estimation Weighted Percentages Plausible Values Present.” SE(PCT) standard  error percentage, accounting                          survey sampling methodology. varMethod                          jackknife, calculation column                          described vignette titled Statistical Methods Used EdSurvey  section “Estimation Standard Error Weighted Percentages Plausible Values Present, Using Jackknife Method.”                       varMethod set Taylor, calculation column described “Estimation Standard Error Weighted Percentages Plausible Values Present, Using Taylor Series Method.” MEAN mean assessment score units RHS levels, calculated according  vignette titled Statistical Methods Used EdSurvey section “Estimation Weighted Means Plausible Values Present.” SE(MEAN) standard error MEAN column (mean assessment score units RHS levels), calculated according vignette titled Statistical Methods Used EdSurvey sections “Estimation Standard Errors Weighted Means Plausible Values Present, Using Jackknife Method” “Estimation Standard Errors Weighted Means Plausible Values Present, Using Taylor Series Method,” depending value varMethod. returnVarEstInputs TRUE, two additional elements  returned. meanVarEstInputs pctVarEstInputs  regard MEAN PCT columns, respectively. two  objects can used calculating covariances  varEstToCov.","code":""},{"path":"/reference/edsurveyTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Tables With Conditional Means — edsurveyTable","text":"method can used generate simple one-way, two-way, n-way table unweighted weighted n values percentages. also can calculate average subject scale subscale students level cross-tabulation table. detailed description statistics given vignette titled Statistical Methods Used EdSurvey.","code":""},{"path":"/reference/edsurveyTable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EdSurvey Tables With Conditional Means — edsurveyTable","text":"Binder, D. . (1983). variances asymptotically normal estimators complex surveys. International Statistical Review, 51(3), 279--292. Rubin, D. B. (1987). Multiple imputation nonresponse surveys. New York, NY: Wiley.","code":""},{"path":"/reference/edsurveyTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Tables With Conditional Means — edsurveyTable","text":"Paul Bailey Ahmad Emad","code":""},{"path":"/reference/edsurveyTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Tables With Conditional Means — edsurveyTable","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data)  sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # create a table that shows only the breakdown of dsex edsurveyTable(composite ~ dsex, data=sdf, returnMeans=FALSE, returnSepct=FALSE)  # create a table with composite scores by dsex edsurveyTable(composite ~ dsex, data=sdf)  # add a second variable edsurveyTable(composite ~ dsex + b017451, data=sdf)  # add a second variable, do not omit any levels edsurveyTable(composite ~ dsex + b017451 + b003501, data=sdf, omittedLevels=FALSE)  # add a second variable, do not omit any levels, change aggregation level edsurveyTable(composite ~ dsex + b017451 + b003501, data=sdf, omittedLevels=FALSE,               pctAggregationLevel=0)  edsurveyTable(composite ~ dsex + b017451 + b003501, data=sdf, omittedLevels=FALSE,               pctAggregationLevel=1)  edsurveyTable(composite ~ dsex + b017451 + b003501, data=sdf, omittedLevels=FALSE,               pctAggregationLevel=2)  # variance estimation using the Taylor series  edsurveyTable(composite ~ dsex + b017451 + b003501, data=sdf, varMethod=\"Taylor\") }"},{"path":"/reference/edsurveyTable2pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"PDF File From an edsurveyTable — edsurveyTable2pdf","title":"PDF File From an edsurveyTable — edsurveyTable2pdf","text":"Produces LaTeX code compiles PDF file edsurveyTable results.","code":""},{"path":"/reference/edsurveyTable2pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PDF File From an edsurveyTable — edsurveyTable2pdf","text":"","code":"edsurveyTable2pdf(   data,   formula,   caption = NULL,   filename = \"\",   toCSV = \"\",   returnMeans = TRUE,   estDigits = 2,   seDigits = 3 )"},{"path":"/reference/edsurveyTable2pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PDF File From an edsurveyTable — edsurveyTable2pdf","text":"data result call edsurveyTable formula formula form LHS ~ RHS cast edsurveyTable results long format wide format. formula takes form LHS ~ RHS (e.g., var1 + var2 ~ var3). order entries formula essential. caption character vector length one two containing table's caption title. length two, second item “short caption” used LaTeX generates List Tables. Set NULL suppress caption. Default value NULL. filename character string containing filenames paths. default (filename = \"\"), table saved working directory (getwd()). Use filename = \"CONSOLE\" print LaTeX code R console without generating PDF file. toCSV character string containing filenames paths .csv table output. \"\" indicates .csv output. toCSV independent filename, csv file PDF file generated filename toCSV specified. returnMeans logical value set TRUE (default) generate PDF MEAN SE(MEAN). set FALSE generate PDF PCT SE(PCT). See Value edsurveyTable. estDigits integer indicating number decimal places used estimates. Negative values allowed. See Details. seDigits integer indicating number decimal places used standard errors. Negative values allowed.","code":""},{"path":"/reference/edsurveyTable2pdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PDF File From an edsurveyTable — edsurveyTable2pdf","text":"Rounding negative number digits means rounding power 10, , example, estDigits = -2 rounds estimates nearest hundred.","code":""},{"path":"/reference/edsurveyTable2pdf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"PDF File From an edsurveyTable — edsurveyTable2pdf","text":"details, see vignette titled Producing LaTeX Tables edsurveyTable Results edsurveyTable2pdf.","code":""},{"path":"/reference/edsurveyTable2pdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PDF File From an edsurveyTable — edsurveyTable2pdf","text":"Huade Huo","code":""},{"path":"/reference/edsurveyTable2pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PDF File From an edsurveyTable — edsurveyTable2pdf","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # create a table with composite scores by dsex and b017451 est1 <- edsurveyTable(composite ~ dsex + b017451, sdf)  # create a table with csv output edsurveyTable2pdf(data = est1,                    formula = b017451~dsex,                    toCSV = \"C:/example table.csv\",                   filename = \"C:/example table.pdf\",                   returnMeans = FALSE)  # create a pdf file using the default subject scale or subscale # and keep two digits for estimates and three digits for SE after decimal point edsurveyTable2pdf(est1, b017451~dsex,                    returnMeans = TRUE, estDigits = 2, seDigits = 3)  # create a pdf file using the percentage of students at the  # aggregation level specified by \\code{pctAggregationLevel} # output will be saved as \"C:/example table.pdf\" edsurveyTable2pdf(est1,                    b017451~dsex,                    \"C:/example table.pdf\",                   returnMeans = FALSE) }"},{"path":"/reference/gap.html","id":null,"dir":"Reference","previous_headings":"","what":"Gap Analysis — gap","title":"Gap Analysis — gap","text":"Compares average levels variable two groups              potentially share members.","code":""},{"path":"/reference/gap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gap Analysis — gap","text":"","code":"gap(   variable,   data,   groupA = \"default\",   groupB = \"default\",   percentiles = NULL,   achievementLevel = NULL,   achievementDiscrete = FALSE,   stDev = FALSE,   targetLevel = NULL,   weightVar = NULL,   jrrIMax = 1,   varMethod = c(\"jackknife\"),   dropOmittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   referenceDataIndex = 1,   returnVarEstInputs = FALSE,   returnSimpleDoF = FALSE,   returnSimpleN = FALSE,   returnNumberOfPSU = FALSE,   noCov = FALSE,   pctMethod = c(\"unbiased\", \"symmetric\", \"simple\"),   includeLinkingError = FALSE,   omittedLevels = deprecated() )"},{"path":"/reference/gap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gap Analysis — gap","text":"variable character indicating variable compared, potentially subject scale subscale data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list groupA expression character expression defines condition subset. subset compared groupB. specified, define whole sample data. groupB expression character expression defines condition subset. subset compared groupA. specified, define whole sample data. set NULL, estimates second group dropped. percentiles numeric vector. gap function calculates mean argument omitted set NULL. Otherwise, gap percentile given calculated. achievementLevel achievement level(s) percentages calculated achievementDiscrete logical indicating achievement level specified achievementLevel argument interpreted discrete just percentage particular achievement level included. Defaults FALSE percentage achievement level included percentage. stDev logical, set TRUE calculate gap standard deviations. targetLevel character string. specified, calculates gap percentage students targetLevel variable argument. useful comparing gap percentage students survey response level. weightVar character indicating weight variable use. See Details. jrrIMax numeric value; using jackknife variance estimation method, default estimation option, jrrIMax=1, uses sampling variance first plausible value component sampling variance estimation. Vjrr term, sampling variance term, can estimated number plausible values, values larger number plausible values survey (including Inf) result plausible values used. Higher values jrrIMax lead longer computing times accurate variance estimates. varMethod deprecated parameter, gap always uses jackknife variance estimation dropOmittedLevels logical value. set default value TRUE, drops levels factor variables. Use print edsurvey.data.frame see omitted levels. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode = list(var1 = list(= c(\"\", \"b\", \"c\"), = \"d\")). referenceDataIndex numeric used data argument edsurvey.data.frame.list, indicating dataset reference dataset datasets compared . Defaults 1. returnVarEstInputs logical value; set TRUE return inputs jackknife imputation variance estimates allows computation covariances estimates. returnSimpleDoF logical value set TRUE return degrees freedom statistics (see Value section) t-test; useful primarily computation returnSimpleN logical value set TRUE add count (n-size) observations included groups B percentage object returnNumberOfPSU logical value set TRUE return number PSUs used calculation noCov set covariances zero result pctMethod character one unbiased simple. See help percentile information. includeLinkingError logical value set TRUE include linking error variance estimation. Standard errors (e.g., diffAAse, diffBBse, diffABABse) p-values (e.g., diffAApValue, diffBBpValue, diffABABpValue) adjusted comparisons digitally based assessments (DBA) paper-based assessments (PBA) data. option supported NAEP data. omittedLevels argument deprecated. Use dropOmittedLevels.","code":""},{"path":"/reference/gap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gap Analysis — gap","text":"return type depends class data argument edsurvey.data.frame edsurvey.data.frame.list. include call (called call), list called labels, object named percentage shows percentage groupA groupB, object shows gap called results. labels include following elements: definition definitions groups nFullData n-size full dataset (applying definition) nUsed n-size data group subsetted                restrictions (omitted values) applied nPSU number PSUs used calculation--returned               returnNumberOfPSU = TRUE percentages computed according vignette titled Statistical Methods Used EdSurvey section “Estimation Weighted Percentages Plausible Values Present.” standard errors calculated according “Estimation Standard Error Weighted Percentages Plausible Values Present, Using Jackknife Method.” Standard errors differences calculated square root typical variance formula $$Var(-B) = Var() + Var(B) - 2 Cov(,B)$$ covariance term calculated described vignette titled Statistical Methods Used EdSurvey section “Estimation Covariances.” degrees freedom available jackknife variance estimation. degrees freedom used hypothesis testing always set number jackknife replicates data. data argument edsurvey.data.frame data argument edsurvey.data.frame,  gap returns S3 object class gap. percentage object numeric vector following elements: pctA percentage respondents groupA compared whole sample data pctAse standard error percentage respondents                       groupA dofA degrees freedom appropriate t-test involving pctA.                 value returned                 returnSimpleDoF=TRUE. pctB percentage respondents groupB. pctBse standard error percentage respondents                       groupB dofB degrees freedom appropriate t-test involving pctA.                 value returned                 returnSimpleDoF=TRUE. diffAB value pctA minus pctB covAB covariance pctA pctB; used                  calculating diffABse. diffABse standard error pctA                            minus pctB diffABpValue p-value associated t-test used                         hypothesis test diffAB                         zero dofAB degrees freedom used calculating                       diffABpValue results object numeric data frame following elements: estimateA mean estimate groupA (percentage estimate                      achievementLevel targetLevel specified) estimateAse standard error estimateA dofA degrees freedom appropriate t-test involving meanA.                 value returned                 returnSimpleDoF=TRUE. estimateB mean estimate groupB (percentage estimate                      achievementLevel targetLevel specified) estimateBse standard error estimateB dofB degrees freedom appropriate t-test involving meanB.                 value returned                 returnSimpleDoF=TRUE. diffAB value estimateA minus estimateB covAB covariance estimateA estimateB. Used                  calculating diffABse. diffABse standard error diffAB diffABpValue p-value associated t-test used                         hypothesis test diffAB                         zero. dofAB degrees freedom used t-test diffAB gap  achievement levels percentiles   one percentile achievement level requested,   additional column   labeled percentiles achievementLevel included   results object. results single row returnVarEstInputs TRUE, additional elements varEstInputs  pctVarEstInputs also returned. can used calculating   covariances varEstToCov. data argument edsurvey.data.frame.list data argument edsurvey.data.frame.list,  gap returns S3 object class gapList. results object edsurveyResultList   data.frame. row regards particular dataset  edsurvey.data.frame, reference dataset dictated   referenceDataIndex argument. percentage object data.frame following elements: covs data frame column column covs. See previous                 section details. ... elements percentage object                previous section diffAA difference pctA reference data                   dataset. Set NA                   reference dataset. covAA covariance pctA reference data                  pctA row. Used                  calculating diffAAse. diffAAse standard error diffAA diffAApValue p-value associated t-test used                         hypothesis test diffAA                         zero diffBB difference pctB reference data                   dataset. Set NA                   reference dataset. covBB covariance pctB reference data                  pctB row. Used                  calculating diffAAse. diffBBse standard error diffBB diffBBpValue p-value associated t-test used                         hypothesis test diffBB                         zero diffABAB value diffAB reference dataset                            minus value diffAB dataset. Set                            NA reference dataset. covABAB covariance diffAB reference data                    diffAB row. Used                    calculating diffABABse. diffABABse standard error diffABAB diffABABpValue p-value associated t-test used                         hypothesis test diffABAB                         zero results object data.frame following elements: ... elements results object                previous section diffAA value groupA reference dataset minus                          value dataset. Set NA                          reference dataset. covAA covariance meanA reference data                  meanA row. Used                  calculating diffAAse. diffAAse standard error diffAA diffAApValue p-value associated t-test used                         hypothesis test diffAA                         zero diffBB value groupB reference dataset minus                          value dataset. Set NA                          reference dataset. covBB covariance meanB reference data                  meanB row. Used                  calculating diffBBse. diffBBse standard error diffBB diffBBpValue p-value associated t-test used                         hypothesis test diffBB                         zero diffABAB value diffAB reference dataset                            minus value diffAB                            dataset. Set                            NA reference dataset. covABAB covariance diffAB reference data                    diffAB row. Used                    calculating diffABABse. diffABABse standard error diffABAB diffABABpValue p-value associated t-test used                         hypothesis test diffABAB                         zero sameSurvey logical value indicating line uses                       survey reference line. Set NA                       reference line.","code":""},{"path":"/reference/gap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gap Analysis — gap","text":"function calculates gap groupA groupB (may omitted indicate full sample). gap calculated one four statistics: gap means mean score gap (score      variable) identified variable argument.      default. means standard errors      calculated using methods      described lm.sdf function documentation. gap percentiles gap respondents      percentiles specified percentiles argument.      returned percentiles argument      defined. mean standard error computed described      percentile function documentation. gap achievement levels gap percentage      students (achievementDiscrete TRUE)      (achievementDiscrete FALSE)      particular achievement level. used      achievementLevel argument defined. mean standard error      calculated described achievementLevels      function documentation. gap survey response gap percentage      respondents responding targetLevel      variable. used targetLevel      defined. mean standard deviation calculated described      edsurveyTable function documentation.","code":""},{"path":"/reference/gap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gap Analysis — gap","text":"Paul Bailey, Trang Nguyen, Huade Huo","code":""},{"path":"/reference/gap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gap Analysis — gap","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # find the mean score gap in the primer data between males and females gap(\"composite\", sdf, dsex==\"Male\", dsex==\"Female\")  # find the score gap of the quartiles in the primer data between males and females gap(\"composite\", sdf, dsex==\"Male\", dsex==\"Female\", percentile=50) gap(\"composite\", sdf, dsex==\"Male\", dsex==\"Female\", percentile=c(25, 50, 75))  # find the percent proficient (or higher) gap in the primer data between males and females gap(\"composite\", sdf, dsex==\"Male\", dsex==\"Female\",      achievementLevel=c(\"Basic\", \"Proficient\", \"Advanced\"))  # find the discrete achievement level gap--this is harder to interpret gap(\"composite\", sdf, dsex==\"Male\", dsex==\"Female\",     achievementLevel=\"Proficient\", achievementDiscrete=TRUE)  # find the percent talk about studies at home (b017451) never or hardly # ever gap in the primer data between males and females gap(\"b017451\", sdf, dsex==\"Male\", dsex==\"Female\",      targetLevel=\"Never or hardly ever\")  # example showing how to compare multiple levels gap(\"b017451\",sdf, dsex==\"Male\", dsex==\"Female\", targetLevel=\"Infrequently\",     recode=list(b017451=list(from=c(\"Never or hardly ever\",                                     \"Once every few weeks\",                                     \"About once a week\"),                              to=c(\"Infrequently\"))))  # make subsets of sdf by scrpsu, \"Scrambled PSU and school code\" sdfA <- subset(sdf, scrpsu %in% c(5,45,56)) sdfB <- subset(sdf, scrpsu %in% c(75,76,78)) sdfC <- subset(sdf, scrpsu %in% 100:200) sdfD <- subset(sdf, scrpsu %in% 201:300)  sdfl <- edsurvey.data.frame.list(list(sdfA, sdfB, sdfC, sdfD),                                  labels=c(\"A locations\", \"B locations\",                                           \"C locations\", \"D locations\"))  gap(\"composite\", sdfl, dsex==\"Male\", dsex==\"Female\", percentile=c(50)) }  if (FALSE) { # example showing using linking error with gap # load Grade 4 math data # requires NAEP RUD license with these files in the folder the user is currectly in g4math2015 <- readNAEP(\"M46NT1AT.dat\") g4math2017 <- readNAEP(\"M48NT1AT.dat\") g4math2019 <- readNAEP(\"M50NT1AT.dat\")  # make an edsurvey.data.frame.list from math grade 4 2015, 2017, and 2019 data g4math <- edsurvey.data.frame.list(list(g4math2019, g4math2017, g4math2015),                                    labels = c(\"2019\", \"2017\", \"2015\"))  # gap analysis with linking error in variance estimation across surveys gap(\"composite\", g4math, dsex == \"Male\", dsex == \"Female\", includeLinkingError=TRUE) gap(\"composite\", g4math, dsex == \"Male\", dsex == \"Female\", percentiles = c(10, 25),      includeLinkingError=TRUE) gap(\"composite\", g4math, dsex == \"Male\", dsex == \"Female\",      achievementDiscrete = TRUE, achievementLevel=c(\"Basic\", \"Proficient\", \"Advanced\"),      includeLinkingError=TRUE) }"},{"path":"/reference/getAllItems.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve IRT Item Variable Names — getAllItems","title":"Retrieve IRT Item Variable Names — getAllItems","text":"Retrieves IRT item variable names associated construct names use mml.sdf function.","code":""},{"path":"/reference/getAllItems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve IRT Item Variable Names — getAllItems","text":"","code":"getAllItems(sdf, construct = NULL)"},{"path":"/reference/getAllItems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve IRT Item Variable Names — getAllItems","text":"sdf edsurvey.data.frame light.edsurvey.data.frame containing IRT information. Supports NAEP TIMSS 2011, 2015, 2019 studies . construct character value (vector) return associated item variable names. Default value NULL returns IRT item variable names. Use showPlausibleValues function view construct details.","code":""},{"path":"/reference/getAllItems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve IRT Item Variable Names — getAllItems","text":"character vector items names associated values construct.","code":""},{"path":"/reference/getAllItems.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Retrieve IRT Item Variable Names — getAllItems","text":"construct vector, item names returned constructs. Use getAllItems getData creating light.edsurvey.data.frame, see example use.","code":""},{"path":[]},{"path":"/reference/getAllItems.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve IRT Item Variable Names — getAllItems","text":"Tom Fink, Sun-Joo Lee, Eric Buehler, Paul Bailey","code":""},{"path":"/reference/getAllItems.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve IRT Item Variable Names — getAllItems","text":"","code":"if (FALSE) {   #TIMSS Example   t15 <- readTIMSS(\"~/TIMSS/2015\", \"usa\", 4)      showPlausibleValues(t15) #view constructs in console      #ensure we have all data needed for mml.sdf on light.edsurvey.data.frame   #must be specified ahead of time.  the 'getAllItems' function makes this easy   mathItems <- getAllItems(t15, \"mmat\") #get mathematics items   sciItems <- getAllItems(t15, \"ssci\") #get science items   allItems <- getAllItems(t15, construct = \"NULL\")      wgtVar <- \"totwgt\"   psustr <- c(getPSUVar(t15, wgtVar), getStratumVar(t15, wgtVar))   lsdf <- getData(data = t15,                   varnames = c(\"ROWID\", \"mmat\", mathItems, psustr, wgtVar),                   omittedLevels = FALSE,                   addAttributes = TRUE) #builds light.edsurvey.data.frame      #as a light.edsurvey.data.frame all elements must be present   mml.sdf(mmat ~ 1, lsdf, weightVar = \"totwgt\")      #as edsurvey.data.frame elements retrieved automatically for user   mml.sdf(mmat ~ 1, t15, weightVar = \"totwgt\")       #NAEP example   sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))      allItems <- getAllItems(sdf, construct = NULL)   algebraItems <- getAllItems(sdf, construct = \"algebra\") }"},{"path":"/reference/getData.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data to a Data Frame — getData","title":"Read Data to a Data Frame — getData","text":"Reads selected columns data.frame              light.edsurvey.data.frame. edsurvey.data.frame,              data stored disk.","code":""},{"path":"/reference/getData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data to a Data Frame — getData","text":"","code":"getData(   data,   varnames = NULL,   drop = FALSE,   dropUnusedLevels = TRUE,   dropOmittedLevels = TRUE,   defaultConditions = TRUE,   formula = NULL,   recode = NULL,   includeNaLabel = FALSE,   addAttributes = FALSE,   returnJKreplicates = TRUE,   omittedLevels = deprecated() )"},{"path":"/reference/getData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data to a Data Frame — getData","text":"data edsurvey.data.frame light.edsurvey.data.frame varnames character vector variable names returned. varnames formula specified, variables associated returned. Set NULL default. drop logical value. set default value FALSE, single column returned, still represented data.frame converted vector. dropUnusedLevels logical value. set default value TRUE, drops unused levels factor variables. dropOmittedLevels logical value. set default value TRUE, drops levels factor variables specified edsurvey.data.frame. Use print edsurvey.data.frame see omitted levels. omitted levels also can adjusted setAttributes; see Examples. defaultConditions logical value. set default value TRUE, uses default conditions stored  edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. formula formula. included, getData returns data associated variables formula. varnames formula specified, variables associated returned. Set NULL default. recode list lists recode variables. Defaults NULL. Can set recode = list(var1 = list(= c(\"\",\"b\",\"c\"), = \"d\")). See Examples. includeNaLabel logical value indicate NA (missing) values returned literal NA values factor levels coded NA addAttributes logical value set TRUE get data.frame can used calls functions usually take edsurvey.data.frame. data.frame also called light.edsurvey.data.frame. See Description section edsurvey.data.frame information light.edsurvey.data.frame. returnJKreplicates logical value indicating JK replicate weights returned. Defaults TRUE. omittedLevels argument deprecated. Use dropOmittedLevels.","code":""},{"path":"/reference/getData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data to a Data Frame — getData","text":"addAttributes FALSE, getData returns data.frame containing data associated requested variables. addAttributes TRUE, getData returns light.edsurvey.data.frame.","code":""},{"path":"/reference/getData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Data to a Data Frame — getData","text":"default, edsurvey.data.frame data read memory getData called returns data frame. structure allows EdSurvey minimal memory footprint. keep footprint small, need limit varnames just necessary variables. two methods attaching survey attributes data.frame make usable functions EdSurvey package (e.g., lm.sdf): () setting addAttributes argument TRUE call getData (b) appending attributes data frame rebindAttributes. getData called, returns data frame. Setting addAttributes argument TRUE adds survey attributes changes resultant data.frame light.edsurvey.data.frame. Alternatively, data.frame can coerced light.edsurvey.data.frame using rebindAttributes. See Examples rebindAttributes documentation. formula varnames populated, variables included. See vignette titled Using getData Function EdSurvey long-form documentation function.","code":""},{"path":[]},{"path":"/reference/getData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Data to a Data Frame — getData","text":"Tom Fink, Paul Bailey, Ahmad Emad","code":""},{"path":"/reference/getData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data to a Data Frame — getData","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # get two variables, without weights df <- getData(data=sdf, varnames=c(\"dsex\", \"b017451\")) table(df)  # example of using recode df2 <- getData(data=sdf, varnames=c(\"dsex\", \"t088301\"),                recode=list(t088301=list(from=c(\"Yes, available\",\"Yes, I have access\"),                                         to=c(\"Yes\")),                            t088301=list(from=c(\"No, have no access\"),                                         to=c(\"No\")))) table(df2)  # when readNAEP is called on a data file, it appends a default  # condition to the edsurvey.data.frame. You can see these conditions # by printing the sdf sdf  # As per the default condition specified, getData restricts the data to only # Reporting Sample. This behavior can be changed as follows: df2 <- getData(data=sdf, varnames=c(\"dsex\", \"b017451\"), defaultConditions = FALSE) table(df2)  # similarly, the default behavior of omitting certain levels specified # in the edsurvey.data.frame can be changed as follows: df2 <- getData(data=sdf, varnames=c(\"dsex\", \"b017451\"), omittedLevels = FALSE) table(df2)  # omittedLevels can also be edited with setAttributes() # here, the omitted level \"Multiple\" is removed from the list sdfIncludeMultiple <- setAttributes(sdf, \"omittedLevels\", c(NA, \"Omitted\")) # check that it was set getAttributes(sdfIncludeMultiple, \"omittedLevels\") # notice that omittedLevels is TRUE, removing NA and \"Omitted\" still dfIncludeMultiple <- getData(data=sdfIncludeMultiple, varnames=c(\"dsex\", \"b017451\")) table(dfIncludeMultiple)  # the variable \"c052601\" is from the school-level data file; merging is handled automatically. # returns a light.edsurvey.data.frame using addAttributes=TRUE argument gddat <- getData(data=sdf,                   varnames=c(\"composite\", \"dsex\", \"b017451\",\"c052601\"),                  addAttributes = TRUE) class(gddat) # look at the first few lines head(gddat)  # get a selection of variables, recode using ifelse, and reappend attributes # with rebindAttributes so that it can be used with EdSurvey analysis functions df0 <- getData(sdf, c(\"composite\", \"dsex\", \"b017451\", \"origwt\")) df0$sex <- ifelse(df0$dsex==\"Male\", \"boy\", \"girl\") df0 <- rebindAttributes(df0, sdf)  # getting all the data can use up all the memory and is generally a bad idea df0 <- getData(sdf, varnames=colnames(sdf),                omittedLevels=FALSE, defaultConditions=FALSE) }"},{"path":"/reference/getNHES_SurveyInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NHES Survey Code Definitions and Survey Meta-data — getNHES_SurveyInfo","title":"Get NHES Survey Code Definitions and Survey Meta-data — getNHES_SurveyInfo","text":"function returns data.frame object defines NHES Survey Codes survey parameters compatible readNHES function use.              resulting data.frame object useful user reference advanced techniques.","code":""},{"path":"/reference/getNHES_SurveyInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NHES Survey Code Definitions and Survey Meta-data — getNHES_SurveyInfo","text":"","code":"getNHES_SurveyInfo()"},{"path":"/reference/getNHES_SurveyInfo.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get NHES Survey Code Definitions and Survey Meta-data — getNHES_SurveyInfo","text":"changes modifications data.frame object change behavior readNHES.       function treated read-source information.","code":""},{"path":[]},{"path":"/reference/getNHES_SurveyInfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get NHES Survey Code Definitions and Survey Meta-data — getNHES_SurveyInfo","text":"Tom Fink","code":""},{"path":"/reference/getNHES_SurveyInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NHES Survey Code Definitions and Survey Meta-data — getNHES_SurveyInfo","text":"","code":"if (FALSE) {   #retrieves the NHES survey meta-data to a data.frame   surveyInfo <- getNHES_SurveyInfo()      #View the survey data where the year is equal to 2016 in RStudio   View(subset(surveyInfo, surveyInfo$Year==2016)) }"},{"path":"/reference/getPlausibleValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Plausible Value Variables — getPlausibleValue","title":"Get Plausible Value Variables — getPlausibleValue","text":"Gets set variables edsurvey.data.frame, light.edsurvey.data.frame,              edsurvey.data.frame.list associated given subject subscale.","code":""},{"path":"/reference/getPlausibleValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Plausible Value Variables — getPlausibleValue","text":"","code":"getPlausibleValue(var, data)"},{"path":"/reference/getPlausibleValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Plausible Value Variables — getPlausibleValue","text":"var character vector naming subject scale subscale data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list","code":""},{"path":"/reference/getPlausibleValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Plausible Value Variables — getPlausibleValue","text":"character vector set variable names plausible values","code":""},{"path":"/reference/getPlausibleValue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Plausible Value Variables — getPlausibleValue","text":"function return set plausible value names variables hasPlausibleValue returns true.","code":""},{"path":[]},{"path":"/reference/getPlausibleValue.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Plausible Value Variables — getPlausibleValue","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/getPlausibleValue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Plausible Value Variables — getPlausibleValue","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  getPlausibleValue(var=\"composite\", data=sdf) }"},{"path":"/reference/getWeightJkReplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the Jackknife Replicate Weights — getWeightJkReplicates","title":"Retrieve the Jackknife Replicate Weights — getWeightJkReplicates","text":"Returns jackknife replicate weights edsurvey.data.frame, light.edsurvey.data.frame,              edsurvey.data.frame.list associated weight variable.","code":""},{"path":"/reference/getWeightJkReplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the Jackknife Replicate Weights — getWeightJkReplicates","text":"","code":"getWeightJkReplicates(var, data)"},{"path":"/reference/getWeightJkReplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the Jackknife Replicate Weights — getWeightJkReplicates","text":"var character indicating name weight variable jackknife replicate weights desired data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list","code":""},{"path":"/reference/getWeightJkReplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the Jackknife Replicate Weights — getWeightJkReplicates","text":"character vector jackknife replicate weights","code":""},{"path":"/reference/getWeightJkReplicates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve the Jackknife Replicate Weights — getWeightJkReplicates","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/getWeightJkReplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the Jackknife Replicate Weights — getWeightJkReplicates","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  getWeightJkReplicates(var=\"origwt\", data=sdf) }"},{"path":"/reference/glm.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Generalized Linear Models — glm.sdf","title":"EdSurvey Generalized Linear Models — glm.sdf","text":"Fits logit probit              uses weights variance estimates              appropriate edsurvey.data.frame,              light.edsurvey.data.frame, edsurvey.data.frame.list.","code":""},{"path":"/reference/glm.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Generalized Linear Models — glm.sdf","text":"","code":"glm.sdf(formula, family = binomial(link = \"logit\"), data,   weightVar = NULL, relevels = list(),   varMethod=c(\"jackknife\", \"Taylor\"), jrrIMax = 1,   dropOmittedLevels = TRUE, defaultConditions = TRUE, recode = NULL,   returnNumberOfPSU=FALSE, returnVarEstInputs = FALSE,   omittedLevels = deprecated())  logit.sdf(   formula,   data,   weightVar = NULL,   relevels = list(),   varMethod = c(\"jackknife\", \"Taylor\"),   jrrIMax = 1,   omittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   returnNumberOfPSU = FALSE,   returnVarEstInputs = FALSE )  probit.sdf(   formula,   data,   weightVar = NULL,   relevels = list(),   varMethod = c(\"jackknife\", \"Taylor\"),   jrrIMax = 1,   omittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   returnVarEstInputs = FALSE )"},{"path":"/reference/glm.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Generalized Linear Models — glm.sdf","text":"formula formula linear model. See glm. logit probit, recommend using () function define level used success. (See Examples.) family glm.sdf function currently fits binomial outcome models, logit probit, although link functions available binomial models. See link argument help family. data edsurvey.data.frame weightVar character indicating weight variable use (see Details). weightVar must one weights edsurvey.data.frame. NULL, uses default edsurvey.data.frame. relevels list; used change contrasts default treatment contrasts treatment contrasts chosen omitted group. name element variable name, value group omitted. varMethod character set “jackknife” “Taylor” indicates variance estimation method used. See Details. jrrIMax Vjrr sampling variance term (see Statistical Methods Used EdSurvey)                   can estimated                   positive number plausible values estimated                   lower                   number available plausible values jrrIMax.                   jrrIMax set Inf, plausible values used.                   Higher values jrrIMax lead longer computing times                   accurate variance estimates. dropOmittedLevels logical value. set default value TRUE, drops levels factor variables specified edsurvey.data.frame. Use print edsurvey.data.frame see omitted levels. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode= list(var1= list(= c(\"\", \"b\", \"c\"), =\"d\")). returnNumberOfPSU logical value set TRUE return number primary sampling units (PSUs) returnVarEstInputs logical value set TRUE return inputs jackknife imputation variance estimates, allow computation covariances estimates. omittedLevels argument deprecated. Use dropOmittedLevels","code":""},{"path":"/reference/glm.sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Generalized Linear Models — glm.sdf","text":"edsurveyGlm following elements: call function call formula formula used fit model coef estimates coefficients se standard error estimates coefficients Vimp estimated variance caused uncertainty scores (plausible value variables) Vjrr estimated variance sampling M number plausible values nPSU number PSUs used calculation varm variance estimates various plausible values coefm values coefficients various plausible values coefmat coefficient matrix (typically produced summary model) weight name weight variable npv number plausible values njk number jackknife replicates used varMethod always jackknife varEstInputs returnVarEstInputs TRUE,                        element returned.                        used calculating covariances                        varEstToCov.","code":""},{"path":"/reference/glm.sdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Generalized Linear Models — glm.sdf","text":"function implements estimator correctly handles left-hand side variables logical, allows survey sampling weights, estimates variances using jackknife replication Taylor series. vignette titled Statistical Methods Used EdSurvey describes estimation reported statistics depends varMethod. coefficients estimated using sample weights according section “Estimation Weighted Means Plausible Values Present” section “Estimation Weighted Means Plausible Values Present,” depending assessment variables variables plausible values . standard errors coefficients estimated depends presence plausible values (assessment variables), obtained, t statistic given $$t=\\frac{\\hat{\\beta}}{\\sqrt{\\mathrm{var}(\\hat{\\beta})}}$$ \\( \\hat{\\beta} \\) estimated coefficient \\(\\mathrm{var}(\\hat{\\beta})\\) variance estimate. logit.sdf probit.sdf included convenience ; give results call glm.sdf binomial family link function named function call (logit probit). default, glm fits logistic regression family set, two expected give results case. types generalized linear models supported.","code":""},{"path":"/reference/glm.sdf.html","id":"variance-estimation-of-coefficients","dir":"Reference","previous_headings":"","what":"Variance estimation of coefficients","title":"EdSurvey Generalized Linear Models — glm.sdf","text":"variance estimation methods shown vignette titled Statistical Methods Used EdSurvey.   predicted   value plausible values varMethod set   jackknife, variance coefficients   estimated according section “Estimation Standard Errors Weighted Means         Plausible Values Present, Using Jackknife Method.” plausible values present varMethod set   jackknife,   variance coefficients estimated according section “Estimation Standard Errors Weighted Means         Plausible Values Present, Using Jackknife Method.” predicted   value plausible values varMethod set   Taylor, variance coefficients   estimated according section “Estimation Standard Errors Weighted Means         Plausible Values Present, Using Taylor Series Method.” plausible values present varMethod set   Taylor,   variance coefficients estimated according section “Estimation Standard Errors Weighted Means         Plausible Values Present, Using Taylor Series Method.”","code":""},{"path":"/reference/glm.sdf.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"EdSurvey Generalized Linear Models — glm.sdf","text":"common hypothesis tests joint parameter testing, Wald test widely used plausible values sample weights. , replaces, imperfectly, Akaike Information Criteria (AIC), likelihood ratio test, chi-squared, analysis variance (ANOVA, including F-tests). See waldTest vignette titled Methods Overview Using EdSurvey Running Wald Tests.","code":""},{"path":[]},{"path":"/reference/glm.sdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Generalized Linear Models — glm.sdf","text":"Paul Bailey","code":""},{"path":"/reference/glm.sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Generalized Linear Models — glm.sdf","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # by default uses the jackknife variance method using replicate weights table(sdf$b013801) logit1 <- logit.sdf(I(b013801 %in% c(\"26-100\", \">100\")) ~ dsex + b017451, data=sdf) # use summary to get detailed results summary(logit1)  # Taylor series variance estimation logit1t <- logit.sdf(I(b013801 %in% c(\"26-100\", \">100\")) ~ dsex + b017451, data=sdf,                      varMethod=\"Taylor\") summary(logit1t)  logit2 <- logit.sdf(I(composite >= 300) ~ dsex + b013801, data=sdf) summary(logit2)  logit3 <- glm.sdf(I(composite >= 300) ~ dsex + b013801, data=sdf,                    family=quasibinomial(link=\"logit\"))  # Wald test for joint hypothesis that all coefficients in b013801 are zero waldTest(logit3, \"b013801\")  summary(logit3) }"},{"path":"/reference/hasPlausibleValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Plausible Value Test — hasPlausibleValue","title":"Plausible Value Test — hasPlausibleValue","text":"Returns value indicating variable associated plausible values edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list.","code":""},{"path":"/reference/hasPlausibleValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plausible Value Test — hasPlausibleValue","text":"","code":"hasPlausibleValue(var, data)"},{"path":"/reference/hasPlausibleValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plausible Value Test — hasPlausibleValue","text":"var character indicating variable question data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list","code":""},{"path":"/reference/hasPlausibleValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plausible Value Test — hasPlausibleValue","text":"Boolean (vector var vector) indicating element var         plausible values associated ","code":""},{"path":"/reference/hasPlausibleValue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plausible Value Test — hasPlausibleValue","text":"function returns TRUE variable passed name set plausible values          individual plausible value set. Thus, NAEP Primer, composite plausible          values (TRUE returned function), plausible values variable names defined          actual data (\"mrpcm1\" \"dsex\") .","code":""},{"path":"/reference/hasPlausibleValue.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plausible Value Test — hasPlausibleValue","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/hasPlausibleValue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plausible Value Test — hasPlausibleValue","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # TRUE hasPlausibleValue(var=\"composite\", data=sdf)  # FALSE hasPlausibleValue(var=\"dsex\", data=sdf) }"},{"path":"/reference/isWeight.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight Test — isWeight","title":"Weight Test — isWeight","text":"Returns logical values indicating whether vector variables weight edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list.","code":""},{"path":"/reference/isWeight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weight Test — isWeight","text":"","code":"isWeight(var, data)"},{"path":"/reference/isWeight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weight Test — isWeight","text":"var character vector variables data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list","code":""},{"path":"/reference/isWeight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weight Test — isWeight","text":"logical vector values indicating element var weight","code":""},{"path":"/reference/isWeight.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weight Test — isWeight","text":"Note function returns TRUE var element name weight used          making estimates one individual jackknife replicates.","code":""},{"path":"/reference/isWeight.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weight Test — isWeight","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/isWeight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weight Test — isWeight","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # TRUE isWeight(var=\"origwt\", data=sdf)  # FALSE isWeight(var=\"dsex\", data=sdf) }"},{"path":"/reference/levelsSDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Levels and Labels — levelsSDF","title":"Print Levels and Labels — levelsSDF","text":"Retrieve levels labels variable edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list.","code":""},{"path":"/reference/levelsSDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Levels and Labels — levelsSDF","text":"","code":"levelsSDF(varnames, data, showOmitted = TRUE, showN = TRUE)"},{"path":"/reference/levelsSDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Levels and Labels — levelsSDF","text":"varnames vector character strings search database connection object (data) data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list showOmitted Boolean indicating omitted levels shown showN Boolean indicating (unweighted) n-sizes shown response level","code":""},{"path":"/reference/levelsSDF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Levels and Labels — levelsSDF","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/levelsSDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Levels and Labels — levelsSDF","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # search variables in the sdf levelsSDF(varnames=\"pared\", data=sdf)  # search multiple variables levelsSDF(varnames=c(\"pared\",\"ell3\"), data=sdf)  # search multiple variables in a light.edsurvey.data.frame with recodes df2 <- getData(data=sdf, varnames=c(\"dsex\", \"t088301\"),                recode=list(t088301=list(from=c(\"Yes, available\",\"Yes, I have access\"),                                         to=c(\"Yes\")),                            t088301=list(from=c(\"No, have no access\"),                                         to=c(\"No\"))),                addAttributes=TRUE) levelsSDF(varnames=c(\"dsex\",\"t088301\"), data=df2) }"},{"path":"/reference/lm.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Linear Models — lm.sdf","title":"EdSurvey Linear Models — lm.sdf","text":"Fits linear model uses weights variance estimates appropriate data.","code":""},{"path":"/reference/lm.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Linear Models — lm.sdf","text":"","code":"lm.sdf(formula, data, weightVar = NULL, relevels = list(),               varMethod = c(\"jackknife\", \"Taylor\"), jrrIMax = 1,               dropOmittedLevels = TRUE, defaultConditions = TRUE, recode = NULL,               returnVarEstInputs = FALSE, returnNumberOfPSU = FALSE,               standardizeWithSamplingVar = FALSE, verbose=TRUE,               omittedLevels = deprecated())"},{"path":"/reference/lm.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Linear Models — lm.sdf","text":"formula formula linear model. See lm. y left blank, default subject scale subscale variable used. (can find default using showPlausibleValues.) y variable subject scale subscale (one names shown showPlausibleValues), subject scale subscale used. data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list weightVar character indicating weight variable use (see Details). weightVar must one weights edsurvey.data.frame. NULL,  uses default edsurvey.data.frame. relevels list. Used change contrasts default treatment contrasts treatment contrasts chosen omitted group (reference group). name element variable name, value group omitted (reference group). varMethod character set “jackknife” “Taylor” indicates variance estimation method used. See Details. jrrIMax numeric value; using jackknife variance estimation method, default estimation option, jrrIMax=1, uses                   sampling variance first plausible value component sampling variance estimation. Vjrr                   term (see Statistical Methods Used EdSurvey)                   can estimated number plausible values, values larger number                   plausible values survey (including Inf) result plausible values used.                   Higher values jrrIMax lead longer computing times accurate variance estimates. dropOmittedLevels logical value. set default value TRUE, drops levels factor variables specified edsurvey.data.frame. Use print edsurvey.data.frame see omitted levels. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode=list(var1 = list(= c(\"\", \"b\", \"c\"), = \"d\")). See Examples. returnVarEstInputs logical value set TRUE return inputs jackknife imputation variance estimates, allow computation covariances estimates. returnNumberOfPSU logical value set TRUE return number primary sampling units (PSUs) standardizeWithSamplingVar logical value indicating standardized coefficients variance regressors outcome measured sampling variance. Defaults FALSE. verbose logical; indicates whether detailed printout display execution omittedLevels argument deprecated. Use dropOmittedLevels","code":""},{"path":"/reference/lm.sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Linear Models — lm.sdf","text":"edsurvey.lm following elements: call function call formula formula used fit model coef estimates coefficients se standard error estimates coefficients Vimp estimated variance uncertainty scores (plausible value variables) Vjrr estimated variance sampling M number plausible values varm variance estimates various plausible values coefm values coefficients various plausible values coefmat coefficient matrix (typically produced summary model) r.squared coefficient determination weight name weight variable npv number plausible values jrrIMax jrrIMax value used computation njk number jackknife replicates used; set NA               Taylor series variance estimates used varMethod one Taylor series jackknife residuals residuals average regression coefficients PV.residuals residuals plausible value coefficients PV.fitted.values fitted values plausible value coefficients B imputation variance covariance matrix, multiplication (M+1)/M U sampling variance covariance matrix rbar average relative increase variance; see van Buuren (2012, eq. 2.29) nPSU number PSUs used calculation n0 number rows edsurvey.data.frame conditions applied nUsed number observations valid data weights larger zero data data used computation Xstdev standard deviations regressors, used computing standardized                  regression coefficients standardizeWithSamplingVar set                  FALSE (default) varSummary result running summary2 (unweighted) variable                      regression varEstInputs returnVarEstInputs TRUE,                        element returned.                        used calculating covariances                        varEstToCov. standardizeWithSamplingVar standardizeWithSamplingVar                                      set TRUE, element                                      returned. Calculates standard deviation                                      standardized                                      regression coefficients like                                      variable.","code":""},{"path":"/reference/lm.sdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Linear Models — lm.sdf","text":"function implements estimator correctly handles left-hand side variables either numeric plausible values allows survey sampling weights estimates variances using jackknife replication method. vignette titled Statistical Methods Used EdSurvey  describes estimation reported statistics. Regardless variance estimation, coefficients estimated using sample weights according sections “Estimation Weighted Means Plausible Values Present” “Estimation Weighted Means Plausible Values Present,” depending assessment variables variables plausible values . standard errors coefficients estimated depends value varMethod presence plausible values (assessment variables), obtained, t statistic given $$t=\\frac{\\hat{\\beta}}{\\sqrt{\\mathrm{var}(\\hat{\\beta})}}$$ \\( \\hat{\\beta} \\) estimated coefficient \\(\\mathrm{var}(\\hat{\\beta})\\) variance estimate. coefficient determination (R-squared value) similarly estimated finding average R-squared using average across plausible values.","code":""},{"path":"/reference/lm.sdf.html","id":"standardized-regression-coefficients","dir":"Reference","previous_headings":"","what":"Standardized regression coefficients","title":"EdSurvey Linear Models — lm.sdf","text":"Standardized regression coefficients can returned call summary,   setting argument src TRUE. See Examples. default, standardized coefficients calculated using standard   deviations variables , including averaging standard   deviation across plausible values. standardizeWithSamplingVar   set TRUE, variance standardized coefficient   calculated similar regression coefficient therefore includes   sampling variance variance estimate outcome variable.","code":""},{"path":"/reference/lm.sdf.html","id":"variance-estimation-of-coefficients","dir":"Reference","previous_headings":"","what":"Variance estimation of coefficients","title":"EdSurvey Linear Models — lm.sdf","text":"variance estimation methods shown vignette titled Statistical Methods Used EdSurvey.   varMethod set jackknife predicted   value plausible values, variance coefficients   estimated according section “Estimation Standard Errors Weighted Means         Plausible Values Present, Using Jackknife Method.” plausible values present varMethod jackknife,   variance coefficients estimated according section “Estimation Standard Errors Weighted Means         Plausible Values Present, Using Jackknife Method.” plausible values present varMethod Taylor,   variance coefficients estimated according section “Estimation Standard Errors Weighted Means Plausible         Values Present, Using Taylor Series Method.” plausible values present varMethod Taylor,   variance coefficients estimated according section “Estimation Standard Errors Weighted Means Plausible         Values Present, Using Taylor Series Method.”","code":""},{"path":"/reference/lm.sdf.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"EdSurvey Linear Models — lm.sdf","text":"common hypothesis tests joint parameter testing, Wald test widely used plausible values sample weights. , replaces, imperfectly, Akaike Information Criteria (AIC), likelihood ratio test, chi-squared, analysis variance (ANOVA, including F-tests). See waldTest vignette titled Methods Overview Using EdSurvey Running Wald Tests.","code":""},{"path":"/reference/lm.sdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EdSurvey Linear Models — lm.sdf","text":"Binder, D. . (1983). variances asymptotically normal estimators complex surveys. International Statistical Review, 51(3), 279--292. Rubin, D. B. (1987). Multiple imputation nonresponse surveys. New York, NY: Wiley. van Buuren, S. (2012). Flexible imputation missing data. New York, NY: CRC Press. Weisberg, S. (1985). Applied linear regression (2nd ed.). New York, NY: Wiley.","code":""},{"path":[]},{"path":"/reference/lm.sdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Linear Models — lm.sdf","text":"Paul Bailey","code":""},{"path":"/reference/lm.sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Linear Models — lm.sdf","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # by default uses jackknife variance method using replicate weights lm1 <- lm.sdf(composite ~ dsex + b017451, data=sdf) lm1  # the summary function displays detailed results summary(lm1)  # to show standardized regression coefficients summary(lm1, src=TRUE)  # to specify a variance method, use varMethod lm2 <- lm.sdf(composite ~ dsex + b017451, data=sdf, varMethod=\"Taylor\") lm2 summary(lm2)  # use relevel to set a new omitted category lm3 <- lm.sdf(composite ~ dsex + b017451, data=sdf, relevels=list(dsex=\"Female\")) summary(lm3) # test of a simple joint hypothesis waldTest(lm3, \"b017451\")  # use recode to change values for specified variables lm4 <- lm.sdf(composite ~ dsex + b017451, data=sdf,               recode=list(b017451=list(from=c(\"Never or hardly ever\",                                               \"Once every few weeks\",                                               \"About once a week\"),                                        to=c(\"Infrequently\")),                           b017451=list(from=c(\"2 or 3 times a week\",\"Every day\"),                                        to=c(\"Frequently\")))) # Note: \"Infrequently\" is the dropped level for the recoded b017451 summary(lm4) }"},{"path":"/reference/merge.edsurvey.data.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Merge — merge.edsurvey.data","title":"EdSurvey Merge — merge.edsurvey.data","text":"Takes data.frame light.edsurvey.data.frame merges edsurvey.data.frame internal data cache.","code":""},{"path":"/reference/merge.edsurvey.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Merge — merge.edsurvey.data","text":"","code":"# S3 method for edsurvey.data.frame merge(x, y, by = \"id\", by.x = by, by.y = by, ...)"},{"path":"/reference/merge.edsurvey.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Merge — merge.edsurvey.data","text":"x edsurvey.data.frame. x object retained y values stored internal cache memory. x also supports light.edusrvey.data.frame objects y data.frame light.edsurvey.data.frame object. y either light.edsurvey.data.frame data.frame column name(s) perform data merge operation.  differing column names x y objects, use .x .y arguments. .x column name(s) perform data merge operation x object.  Defaults value. .y column name(s) perform data merge operation y object.  Defaults value. ... arguments passed merge, note .x always TRUE (data edsurvey.data.frame always kept) .y always FALSE avoid adding data edsurvey.data.frame.","code":""},{"path":"/reference/merge.edsurvey.data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Merge — merge.edsurvey.data","text":"merged data set object type x. edsurvey.data.frame objects resulting merged data stored objects internal data cache.","code":""},{"path":[]},{"path":"/reference/merge.edsurvey.data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Merge — merge.edsurvey.data","text":"Tom Fink","code":""},{"path":"/reference/merge.edsurvey.data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Merge — merge.edsurvey.data","text":"","code":"if (FALSE) { # read in NAEP primer data sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\")) lsdf <- getData(data=sdf, varnames=c(\"dsex\", \"b017451\"), addAttributes = TRUE) df <- data.frame(dsex = c(\"Male\",\"Female\"), dsex2 = c(\"Boy\",\"Girl\"))  #merging an edsurvey.data.frame with a data.frame/light.edsurvey.data.frame #returns an edsurvey.data.frame object sdf2 <- merge(sdf, df, by = \"dsex\") table(sdf2$dsex2)  # merging a light.edsurvey.data.frame with a data.frame # returns a light.edsurvey.data.frame object merged_lsdf <- merge(lsdf,df, by = \"dsex\") class(merged_lsdf) #  \"light.edsurvey.data.frame\" \"data.frame\" head(merged_lsdf) # shows merge results  # merging behaves similarly to base::merge df2 <- data.frame(dsex = c(\"Male\",\"Female\"), b017451 = c(1,2)) merged_lsdf2 <- merge(lsdf,df2, by = \"dsex\") names(merged_lsdf2) # \"dsex\"      \"b017451.x\" \"b017451.y\" head(merged_lsdf2) # shows merge results }"},{"path":"/reference/mergev.html","id":null,"dir":"Reference","previous_headings":"","what":"mergev — mergev","title":"mergev — mergev","text":"verbose merge function","code":""},{"path":"/reference/mergev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mergev — mergev","text":"","code":"mergev(   x,   y,   by = NULL,   by.x = NULL,   by.y = NULL,   all.x = NULL,   all.y = NULL,   all = FALSE,   order = c(\"sort\", \"unsorted\", \"x\", \"y\"),   fast = FALSE,   merge.type.colname = \"merge.type\",   return.list = FALSE,   verbose = TRUE,   showWarnings = TRUE,   ... )"},{"path":"/reference/mergev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mergev — mergev","text":"x first data.frame merge, merge. y second data.frame merge, merge. character vector column names merge . used, column names must x y. Silently overrides .x .y .x character vector column names x merge . resulting file names. .y character vector column names y merge . .x logical value indicating unmerged rows x included output. .y logical value indicating unmerged rows y included output. logical value indicating unmerged rows x y included output. Silently overrides .x .y. order character string \"sort\", \"unsorted\", \"x\", \"y\". Specifies order output. Setting \"sort\" gives result merge sort=TRUE. unsorted gives result sort=FALSE. \"x\" \"y\" sort incoming sort order x y, respectively. fast logical value indicating data.table used merge. merge.type.colname character indicating column name resulting merge type column. See description. return.list logical value indicating merged data.frame verbose output returned elements list. Defaults FALSE function simply returns data.frame. verbose logical value indicating output reported. Defaults TRUE. Useful testing. showWarnings logical value output warning messages (TRUE) suppress (FALSE).  Defaults TRUE. ... additional parameters passed merge.","code":""},{"path":"/reference/mergev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mergev — mergev","text":"depends value return.list. return.list FALSE, returns data.frame. return.list TRUE, returns list two elements. first data.frame result. second list values printed . Elements include merge.type two elements, \"one\" \"many\" indicating merge type x y, respectively; inBoth, list column names merged data.frames; merge.matrix matrix printed function.","code":""},{"path":"/reference/mergev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mergev — mergev","text":"wrapper base package merge function prints verbose information merge, including merge type (one/many one/many), overlapping column names suffixes applied, number rows number unique keys dataset resulting dataset. Also gives detailed errors , e.g. columns named argument x y data.frames.","code":""},{"path":"/reference/mixed.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Mixed-Effects Model — mixed.sdf","title":"EdSurvey Mixed-Effects Model — mixed.sdf","text":"Fits linear weighted mixed-effects model.","code":""},{"path":"/reference/mixed.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Mixed-Effects Model — mixed.sdf","text":"","code":"mixed.sdf(   formula,   data,   weightVars = NULL,   weightTransformation = TRUE,   recode = NULL,   defaultConditions = TRUE,   tolerance = 0.01,   nQuad = NULL,   verbose = 0,   family = NULL,   centerGroup = NULL,   centerGrand = NULL,   fast = FALSE,   ... )"},{"path":"/reference/mixed.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Mixed-Effects Model — mixed.sdf","text":"formula formula multilevel regression mixed model. See Examples vignette titled Methods Used Estimating Mixed-Effects Models EdSurvey details specify mixed model. y left blank, default subject scale subscale variable used. (can find default using showPlausibleValues.) y variable subject scale subscale (one names shown showPlausibleValues), subject scale subscale used. data edsurvey.data.frame light.edsurvey.data.frame weightVars character vector indicating weight variables corresponding levels use. weightVar must weights edsurvey.data.frame. weight variables must order level (lowest highest level). weightTransformation logical value indicate whether function standardize weights using multilevel model. set TRUE, function look standard weight transformation methods often used specific survey. Weight transformation can found vignette titled Methods Used Estimating Mixed-Effects Models EdSurvey. set FALSE survey specified data standard weight transformation method, raw weights used. recode list lists recode variables. Defaults NULL. Can set recode=list(var1 = list(= c(\"\", \"b\", \"c\"), = \"d\")). See Examples lm.sdf. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. tolerance depreciated, effect nQuad depreciated, effect verbose integer; set 1, print brief progress function mix.sdf. Users can use traced messages diagnosis. set 2, print detailed progress, including temporary estimates    optimization. Defaults 0,    run function without output. family argument depreciated; please use WeMix package's mix function directly binomial models. centerGroup list name element name aggregation level, element formula variable names group mean centered. example, group mean center  gender age within group student: list(\"student\"= ~gender+age). Defaults NULL, means  predictors adjusted group centering. See Examples WeMix function mix. centerGrand formula variable names grand mean centered. example, center variable education overall mean education: ~education. Defaults NULL, means predictors adjusted grand centering. fast depreciated, effect ... potential arguments used mix","code":""},{"path":"/reference/mixed.sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Mixed-Effects Model — mixed.sdf","text":"mixedSdfResults object following elements: call original call used mixed.sdf formula formula used fit model coef vector coefficient estimates se vector standard error estimates coefficients standard error variance components vars estimated variance components model levels number levels model ICC intraclass correlation coefficient model npv number plausible values ngroups data.frame includes number observations group n0 number observations original data nused number observations used analysis model.frame data used model formula involve plausible values, function return following additional elements: lnlf likelihood function lnl log-likelihood model formula involves plausible values, function return following additional elements: Vimp estimated variance uncertainty scores Vjrr estimated variance sampling","code":""},{"path":"/reference/mixed.sdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Mixed-Effects Model — mixed.sdf","text":"function uses mix call WeMix package fit mixed models. outcome plausible values, variance estimator directly mix function used; account covariance top level model specified user. outcome plausible values, coefficients estimated way lm.sdf, , averaged across plausible values. addition, variance coefficients estimated sum variance estimate mix function imputation variance. formula imputation variance , , lm.sdf, estimators vignette titled Statistical Methods Used EdSurvey. section “Estimation Standard Errors Weighted Means Plausible Values Present, Using Jackknife Method” formula \\(V_{imp}\\), variance estimates variance components estimated formulas regression coefficients.","code":""},{"path":"/reference/mixed.sdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EdSurvey Mixed-Effects Model — mixed.sdf","text":"Rabe-Hesketh, S., & Skrondal, . (2006). Multilevel modeling complex survey data. Journal Royal Statistical Society: Series (Statistics Society), 169(4), 805--827.","code":""},{"path":[]},{"path":"/reference/mixed.sdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Mixed-Effects Model — mixed.sdf","text":"Paul Bailey, Trang Nguyen, Claire Kelley","code":""},{"path":"/reference/mixed.sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Mixed-Effects Model — mixed.sdf","text":"","code":"if (FALSE) { # save TIMSS 2015 data to ~/TIMSS/2015 downloadTIMSS(root=\"~/\", years=2015) fin <- readTIMSS(\"~/TIMSS/2015\", countries=\"fin\", gradeLvl=4) # uses all plausible values mix1 <- mixed.sdf(mmat ~ itsex + (1|idschool), data = fin,                   weightVar=c(\"totwgt\",\"schwgt\"), weightTransformation=FALSE) summary(mix1) # uses only one plausible value mix2 <- mixed.sdf(asmmat01 ~ itsex + (1|idschool), data = fin,                   weightVar=c(\"totwgt\",\"schwgt\"), weightTransformation=FALSE) summary(mix2) }"},{"path":"/reference/mml.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Direct Estimation — mml.sdf","title":"EdSurvey Direct Estimation — mml.sdf","text":"Prepare IRT parameters score items estimate linear model direct estimation.","code":""},{"path":"/reference/mml.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Direct Estimation — mml.sdf","text":"","code":"mml.sdf(   formula,   data,   weightVar = NULL,   dropOmittedLevels = TRUE,   composite = TRUE,   verbose = 0,   multiCore = FALSE,   numberOfCores = NULL,   minNode = -4,   maxNode = 4,   Q = 34,   idVar = NULL,   returnMmlCall = FALSE,   omittedLevels = deprecated() )"},{"path":"/reference/mml.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Direct Estimation — mml.sdf","text":"formula formula model. data edsurvey.data.frame National Assessment Educational Progress (NAEP) Trends International Mathematics Science Study (TIMSS). attributes dichotParamTab, polyParamTab, testData, scoreCard (NAEP), scoreDict (TIMSS) must NULL. Use function setNAEPScoreCard setAttributes set attributes. weightVar character indicating weight variable use. weightVar must one weights edsurvey.data.frame. NULL,  uses default edsurvey.data.frame. dropOmittedLevels logical value. set value TRUE, drops levels factor variables specified edsurvey.data.frame. Use print edsurvey.data.frame see omitted levels. draw plausible values full dataset, user must set FALSE. composite logical; NAEP composite, setting FALSE fits model items , single construct, whereas setting TRUE fits model NAEP composite (.e., weighted average subscales). argument applicable TIMSS always fit overall (non-composite). verbose logical; indicates whether detailed printout display execution, NAEP data. multiCore allows foreach package used. function setup take cluster. numberOfCores number cores used using multiCore. Defaults 75% available cores. Users can check available cores detectCores(). minNode numeric; minimum integration point direct estimation; see mml. maxNode numeric; maximum integration point direct estimation; see mml. Q integer; number integration points per student used integrating levels latent outcome construct. idVar variable used explicitly define name student identifier variable used data. Defaults NULL, sid used student identifier. returnMmlCall logical; TRUE, process mml call instead return user edit calling omittedLevels argument deprecated. Use dropOmittedLevels","code":""},{"path":"/reference/mml.sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Direct Estimation — mml.sdf","text":"mml.sdf object, outcome mml.sdf, following elements: mml object containing information mml procedure.    ?mml can used information. scoreDict scoring used mml procedure . itemMapping item mapping used mml procedure .","code":""},{"path":"/reference/mml.sdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Direct Estimation — mml.sdf","text":"Typically, models fit NAEP data using plausible values integrate uncertainty measurement individual student outcomes. direct estimation used, measurement error integrated explicitly using Q quadrature points. See documentation mml Dire package. scoreDict helps turn response categories simple item responses, Reached Multiple, something coded inputs mml function Dire. mml treats values depends test. NAEP, dichotomous item, 8 scored proportion correct guessing parameter item, 0 incorrect response, NA change student's score, 1 correct. TIMSS require scoreDict.","code":""},{"path":"/reference/mml.sdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EdSurvey Direct Estimation — mml.sdf","text":"Cohen, J., & Jiang, T. (1999). Comparison partially measured latent traits across nominal subgroups.    Journal American Statistical Association, 94(448), 1035--1044. https://doi.org/10.2307/2669917","code":""},{"path":"/reference/mml.sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Direct Estimation — mml.sdf","text":"","code":"if (FALSE) { ## Direct Estimation with NAEP  # Load data  sdfNAEP <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # Inspect scoring guidelines defaultNAEPScoreCard()  # example output:  #          resCat pointMult pointConst # 1     Multiple         8          0 # 2  Not Reached        NA         NA # 3      Missing        NA         NA # 4      Omitted         8          0 # 5    Illegible         0          0 # 6 Non-Rateable         0          0 # 7     Off Task         0          0  # Run NAEP model, warnings are about item codings mmlNAEP <- mml.sdf(algebra ~ dsex + b013801, sdfNAEP, weightVar='origwt')  # Call with Taylor summary(mmlNAEP, varType=\"Taylor\", strataVar=\"repgrp1\", PSUVar=\"jkunit\")  ## Direct Estimation with TIMSS  # Load data  downloadTIMSS(\"~/\", year=2015) sdfTIMSS <- readTIMSS(\"~/TIMSS/2015\", countries=\"usa\", grade = \"4\")  # Run TIMSS model, warnings are about item codings  mmlTIMSS <- mml.sdf(mmat ~ itsex + asbg04, sdfTIMSS, weightVar='totwgt')  # Call with Taylor summary(mmlTIMSS, varType=\"Taylor\", strataVar=\"jkzone\", PSUVar=\"jkrep\") }"},{"path":"/reference/mvrlm.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate Regression — mvrlm.sdf","title":"Multivariate Regression — mvrlm.sdf","text":"Fits multivariate linear model uses weights variance              estimates appropriate edsurvey.data.frame.","code":""},{"path":"/reference/mvrlm.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate Regression — mvrlm.sdf","text":"","code":"mvrlm.sdf(   formula,   data,   weightVar = NULL,   relevels = list(),   jrrIMax = 1,   dropOmittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   returnVarEstInputs = FALSE,   estMethod = \"OLS\",   verbose = TRUE,   omittedLevels = deprecated() )"},{"path":"/reference/mvrlm.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate Regression — mvrlm.sdf","text":"formula Formula linear model. See Formula; left-hand side variables separated vertical pipes (|). See Examples. data edsurvey.data.frame edsurvey.data.frame.list weightVar character indicating weight variable use (see Details). weightVar must one weights edsurvey.data.frame. NULL, uses default edsurvey.data.frame. relevels list. Used change contrasts default treatment contrasts treatment contrasts chosen omitted group (reference group). , user puts element list name variable change contrasts make value list element equal value omitted group (reference group). jrrIMax numeric value; using jackknife variance estimation method, default estimation option, jrrIMax=1, uses                   sampling variance first plausible value component sampling variance estimation. \\(V_{jrr}\\)                   term (see Statistical Methods Used EdSurvey)                   can estimated number plausible values, values larger number                   plausible values survey (including Inf) result plausible values used.                   Higher values jrrIMax lead longer computing times accurate variance estimates. dropOmittedLevels logical value. set default value TRUE, drops levels factor variables specified edsurvey.data.frame. Use print edsurvey.data.frame see omitted levels. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode = list(var1= list(=c(\"\",\"b\",\"c\"), =\"d\")). returnVarEstInputs logical value. Set TRUE return inputs jackknife imputation variance estimates, allow computation covariances estimates. estMethod character value indicating estimation method use. Default OLS; option GLS. verbose logical; indicates whether detailed printout display execution omittedLevels argument deprecated. Use dropOmittedLevels","code":""},{"path":"/reference/mvrlm.sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate Regression — mvrlm.sdf","text":"edsurvey.mvrlm elements: call function call formula formula used fit model coef estimates coefficients se standard error estimates coefficients Vimp estimated variance caused uncertainty scores (plausible value variables) Vjrr estimated variance caused sampling M number plausible values varm variance estimates various plausible values coefm values coefficients various plausible values coefmat coefficient matrix (typically produced summary model) r.squared coefficient determination weight name weight variable npv number plausible values njk number jackknife replicates used varEstInputs returnVarEstInputs TRUE,                        element returned.                        used calculating covariances                        varEstToCov. residuals residuals PV models fitted.values model fitted values residCov residual covariance matrix dependent variables residPV residuals dependent variable inputs coefficient estimation input matrices n0 full data n nUsed n used model B imputation variance-covariance matrix, multiplication (M+1)/M U sampling variance-covariance matrix","code":""},{"path":"/reference/mvrlm.sdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multivariate Regression — mvrlm.sdf","text":"function implements estimator correctly handles multiple left-hand side variables either numeric plausible values, allows survey sampling weights, estimates variances using jackknife replication method. vignette titled Statistical Methods Used EdSurvey describes estimation reported statistics. coefficients estimated using sample weights according section “Estimation Weighted Means Plausible Values Present” section “Estimation Weighted Means Plausible Values Present,” depending assessment variables variables plausible values . coefficient determination (R-squared value) similarly estimated finding average R-squared using sample weights set plausible values. information specifics multivariate regression, see vignette titled Methods Overview Using EdSurvey Multivariate Regression.","code":""},{"path":"/reference/mvrlm.sdf.html","id":"variance-estimation-of-coefficients","dir":"Reference","previous_headings":"","what":"Variance estimation of coefficients","title":"Multivariate Regression — mvrlm.sdf","text":"variance estimation methods shown vignette titled   Statistical Methods Used EdSurvey. predicted value plausible values, variance coefficients   estimated according section “Estimation Standard Errors   Weighted Means Plausible Values Present, Using Jackknife Method.” plausible values present, variance coefficients estimated according section “Estimation Standard Errors Weighted Means         Plausible Values Present, Using Jackknife Method.”","code":""},{"path":[]},{"path":"/reference/mvrlm.sdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multivariate Regression — mvrlm.sdf","text":"Alex Lishinski Paul Bailey","code":""},{"path":"/reference/mvrlm.sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate Regression — mvrlm.sdf","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # use | symbol to separate dependent variables in the left-hand side of formula mvrlm.fit <- mvrlm.sdf(algebra | geometry ~ dsex + m072801, jrrIMax = 5, data = sdf)  # print method returns coefficients, as does coef method mvrlm.fit coef(mvrlm.fit)  # for more detailed results, use summary: summary(mvrlm.fit)  # details of model can also be accessed through components of the returned object; for example:  # coefficients (one column per dependent variable) mvrlm.fit$coef # coefficient table with standard errors and p-values (1 table per dependent variable) mvrlm.fit$coefmat # R-squared values (one per dependent variable) mvrlm.fit$r.squared # residual covariance matrix mvrlm.fit$residCov  # model residuals and other details are available as well  # show the structure of the residuals objects str(mvrlm.fit$residuals) str(mvrlm.fit$residPV)  # dependent variables can have plausible values or not (or a combination)  mvrlm.fit <- mvrlm.sdf(composite | mrps22 ~ dsex + m072801, data = sdf, jrrIMax = 5) summary(mvrlm.fit)  mvrlm.fit <- mvrlm.sdf(algebra | geometry | measurement ~ dsex + m072801, data = sdf, jrrIMax = 5) summary(mvrlm.fit)  mvrlm.fit <- mvrlm.sdf(mrps51 | mrps22 ~ dsex + m072801, data = sdf, jrrIMax = 5) summary(mvrlm.fit)  # hypotheses about coefficient restrictions can also be tested using the Wald test  mvr <- mvrlm.sdf(algebra | geometry ~ dsex + m072801, data = sdf)  hypothesis <- c(\"geometry_dsexFemale = 0\", \"algebra_dsexFemale = 0\")  # test statistics based on the F and chi-squared distribution are available linearHypothesis(mvr, hypothesis = hypothesis, test = \"F\") linearHypothesis(mvr, hypothesis = hypothesis, test = \"Chisq\") }"},{"path":"/reference/oddsRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Odds Ratios for edsurveyGlm Models — oddsRatio","title":"Odds Ratios for edsurveyGlm Models — oddsRatio","text":"Converts coefficients edsurveyGlm logit regression model odds ratios.","code":""},{"path":"/reference/oddsRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Odds Ratios for edsurveyGlm Models — oddsRatio","text":"","code":"oddsRatio(model, alpha = 0.05)"},{"path":"/reference/oddsRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Odds Ratios for edsurveyGlm Models — oddsRatio","text":"model edsurveyGlm model alpha alpha level confidence level","code":""},{"path":"/reference/oddsRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Odds Ratios for edsurveyGlm Models — oddsRatio","text":"oddsRatio.edsurveyGlm object following elements: odds ratio coefficient estimates 2.5% lower bound 95% confidence interval 97.5% upper bound 95% confidence interval","code":""},{"path":"/reference/parseNAEPdct.html","id":null,"dir":"Reference","previous_headings":"","what":"Format AM dct File for Use with DirectEstimation — parseNAEPdct","title":"Format AM dct File for Use with DirectEstimation — parseNAEPdct","text":"Takes dct file formats use mml method paramTab.","code":""},{"path":"/reference/parseNAEPdct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format AM dct File for Use with DirectEstimation — parseNAEPdct","text":"","code":"parseNAEPdct(dct, mml = TRUE)"},{"path":"/reference/parseNAEPdct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format AM dct File for Use with DirectEstimation — parseNAEPdct","text":"dct file location read dct file mml logical paramTab used mml.sdf","code":""},{"path":"/reference/parseNAEPdct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format AM dct File for Use with DirectEstimation — parseNAEPdct","text":"data.frame format suitable use mml paramTab.","code":""},{"path":"/reference/parseNAEPdct.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format AM dct File for Use with DirectEstimation — parseNAEPdct","text":"Sun-Joo Lee","code":""},{"path":"/reference/parseScript_SPSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse SPSS Syntax Script for Fixed-Width Data Files — parseScript_SPSS","title":"Parse SPSS Syntax Script for Fixed-Width Data Files — parseScript_SPSS","text":"Parses SPSS Syntax Script (.sps) file return information relating fixed-width data files.","code":""},{"path":"/reference/parseScript_SPSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse SPSS Syntax Script for Fixed-Width Data Files — parseScript_SPSS","text":"","code":"parseScript_SPSS(   spsFilePath,   verbose = FALSE,   outputFormat = c(\"data.frame\"),   encoding = getOption(\"encoding\") )"},{"path":"/reference/parseScript_SPSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse SPSS Syntax Script for Fixed-Width Data Files — parseScript_SPSS","text":"spsFilePath character value file path SPSS script parse. verbose logic value indicate user wishes print parsing activity console. Default value FALSE. outputFormat named argument indicate output format resulting object .  See details information format. Currently, data.frame format supported. encoding character value indicate encoding specification used readLines base function spsFilePath parameter. adjust parameter original file encoding file known, producing correct string values, errors occur. See ?readLines help details use file encoding, additional details.","code":""},{"path":"/reference/parseScript_SPSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse SPSS Syntax Script for Fixed-Width Data Files — parseScript_SPSS","text":"returns object containing information specified outputFormat argument.","code":""},{"path":"/reference/parseScript_SPSS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse SPSS Syntax Script for Fixed-Width Data Files — parseScript_SPSS","text":"CURRENTLY EXPORTED!  Future potentially made separate R package parseScript_SPSS function used 100 Old/Previous SPSS script parsers slowly transitioned utilize function possible maximize code use. SPSS syntax script parser focused gathering details use fixed-width data files.  function scans following SPSS commands: FILE HANDLE DATA LIST VARIABLE LABEL VALUE LABEL MISSING VALUE outputFormat specified determine result object returned.  function currently supports following formats. data.frame variableName - variable name defined script Start - start number index variable defined fixed-width format layout End - end number index variable defined fixed-width format layout Width - length many columns variable uses fixed-width format layout Attributes - SPSS attributes defined DATA LIST command.  typically field formatting. RecordNumber - fixed-width data files considered \"multi-line\" one record data can span multiple rows file.                RecordNumber indicates line variable assigned. Labels - descriptive label associated variable name give detail context. labelValues - categorical variables stored value typically assigned longer label/definition. string identifies mappings.                '^' symbol used delimit individual label value. additionally, '=' used split value left side '=' symbol,                remaining right-hand side '=' text label value. dataType - best-guess data type (either 'numeric' 'character') without actually examining data-file. missingValues - MISSING VALUE clause included script list values considered 'Missing'.                multiple values specified, delimited ';' (semi-colon) symbol.","code":""},{"path":"/reference/parseScript_SPSS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse SPSS Syntax Script for Fixed-Width Data Files — parseScript_SPSS","text":"Tom Fink","code":""},{"path":"/reference/percentile.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Percentiles — percentile","title":"EdSurvey Percentiles — percentile","text":"Calculates percentiles numeric variable              edsurvey.data.frame, light.edsurvey.data.frame,              edsurvey.data.frame.list.","code":""},{"path":"/reference/percentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Percentiles — percentile","text":"","code":"percentile(   variable,   percentiles,   data,   weightVar = NULL,   jrrIMax = 1,   varMethod = c(\"jackknife\", \"Taylor\"),   alpha = 0.05,   dropOmittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   returnVarEstInputs = FALSE,   returnNumberOfPSU = FALSE,   pctMethod = c(\"symmetric\", \"unbiased\", \"simple\"),   confInt = TRUE,   dofMethod = c(\"JR\", \"WS\"),   omittedLevels = deprecated() )"},{"path":"/reference/percentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Percentiles — percentile","text":"variable character name variable percentiles computed, typically subject scale subscale percentiles numeric vector percentiles range 0 100 (inclusive) data edsurvey.data.frame edsurvey.data.frame.list weightVar character indicating weight variable use. jrrIMax numeric value; using jackknife variance estimation method, default estimation option, jrrIMax=1, uses                   sampling variance first plausible value component sampling variance estimation. \\(V_{jrr}\\)                   term (see Statistical Methods Used EdSurvey)                   can estimated number plausible values, values larger number                   plausible values survey (including Inf) result plausible values used.                   Higher values jrrIMax lead longer computing times accurate variance estimates. varMethod character set jackknife Taylor indicates variance estimation method used constructing confidence intervals. jackknife variance estimation method always used calculate standard error. alpha numeric value 0 1 indicating confidence level. alpha value 0.05 indicate 95% confidence interval default. dropOmittedLevels logical value. set default value TRUE, drops levels factor variables specified achievementVars aggregatBy. Use print edsurvey.data.frame see omitted levels. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode=list(var1= list(= c(\"\", \"b\", \"c\"), = \"d\")). returnVarEstInputs logical value set TRUE return inputs jackknife imputation variance estimates allows computation covariances estimates. returnNumberOfPSU logical value set TRUE return number primary sampling units (PSUs) pctMethod one “unbiased”, “symmetric”, “simple”; unbiased produces weighted median unbiased percentile estimate, whereas simple uses basic formula matches previously published results. Symmetric uses basic formula requires percentile symmetric multiplying quantity negative one. confInt Boolean indicating confidence interval returned dofMethod passed DoFCorrection method argument omittedLevels argument deprecated. Use dropOmittedLevels","code":""},{"path":"/reference/percentile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Percentiles — percentile","text":"return type depends whether class data argument edsurvey.data.frame edsurvey.data.frame.list. data argument edsurvey.data.frame data argument edsurvey.data.frame,  percentile returns S3 object class percentile.   data.frame typical attributes (names,  row.names, class) additional attributes follows: n0 number rows edsurvey.data.frame conditions applied nUsed number observations valid data weights larger zero nPSU number PSUs used calculation call call used generate results columns data.frame follows: percentile percentile row estimate estimated value percentile se jackknife standard error estimated percentile df degrees freedom confInt.ci_lower lower bound                      confidence interval confInt.ci_upper upper bound                      confidence interval nsmall number units extreme results, averaged                   across plausible values confInt argument set FALSE, confidence   intervals returned. data argument edsurvey.data.frame.list data argument edsurvey.data.frame.list,  percentile returns S3 object class percentileList.   data.frame call attribute.   columns data.frame identical previous   section, also columns edsurvey.data.frame.list. covs column column covs value                 edsurvey.data.frame.list.                 See Examples. returnVarEstInputs TRUE, attribute varEstInputs also returned includes variance estimate inputs used calculating covariances varEstToCov.","code":""},{"path":"/reference/percentile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Percentiles — percentile","text":"Percentiles, standard errors, confidence intervals calculated according vignette titled Statistical Methods Used EdSurvey. standard errors confidence intervals based separate formulas assumptions. Taylor series variance estimation procedure relevant percentiles percentiles continuously differentiable.","code":""},{"path":"/reference/percentile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EdSurvey Percentiles — percentile","text":"Hyndman, R. J., & Fan, Y. (1996). Sample quantiles statistical packages. American Statistician, 50, 361--365.","code":""},{"path":"/reference/percentile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Percentiles — percentile","text":"Paul Bailey","code":""},{"path":"/reference/percentile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Percentiles — percentile","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # get the median of the composite percentile(\"composite\", 50, sdf)  # get several percentiles percentile(\"composite\", c(0,1,25,50,75,99,100), sdf) # build an edsurvey.data.frame.list sdfA <- subset(sdf, scrpsu %in% c(5,45,56)) sdfB <- subset(sdf, scrpsu %in% c(75,76,78)) sdfC <- subset(sdf, scrpsu %in% 100:200) sdfD <- subset(sdf, scrpsu %in% 201:300)  sdfl <- edsurvey.data.frame.list(list(sdfA, sdfB, sdfC, sdfD),                                  labels=c(\"A locations\",                                            \"B locations\",                                            \"C locations\",                                            \"D locations\")) # this shows how these datasets will be described: sdfl$covs  percentile(\"composite\", 50, sdfl) percentile(\"composite\", c(25, 50, 75), sdfl) }"},{"path":"/reference/print.achievementLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Print AchievementLevels Results — print.achievementLevels","title":"Print AchievementLevels Results — print.achievementLevels","text":"Prints details discrete cumulative achievement levels  calculated using weights variance estimates appropriate edsurvey.data.frame.","code":""},{"path":"/reference/print.achievementLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print AchievementLevels Results — print.achievementLevels","text":"","code":"# S3 method for achievementLevels print(x, printCall = TRUE, printDiscrete = TRUE, printCumulative = TRUE, ...)"},{"path":"/reference/print.achievementLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print AchievementLevels Results — print.achievementLevels","text":"x achievementLevels object printCall logical value; default (TRUE), prints details plausible values weights used calculating achievement levels printDiscrete logical value; default (TRUE), prints discrete achievement levels present x printCumulative logical value; default (TRUE), prints cumulative achievement levels present x ... arguments passed anywhere included compatibility","code":""},{"path":"/reference/print.achievementLevels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print AchievementLevels Results — print.achievementLevels","text":"Huade Huo Ahmad Emad","code":""},{"path":"/reference/print.edsurvey.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Metadata Summary — print.edsurvey.data.frame","title":"EdSurvey Metadata Summary — print.edsurvey.data.frame","text":"Prints metadata regarding edsurvey.data.frame edsurvey.data.frame.list","code":""},{"path":"/reference/print.edsurvey.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Metadata Summary — print.edsurvey.data.frame","text":"","code":"# S3 method for edsurvey.data.frame print(x, printColnames = FALSE, ...)"},{"path":"/reference/print.edsurvey.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Metadata Summary — print.edsurvey.data.frame","text":"x edsurvey.data.frame edsurvey.data.frame.list printColnames logical value; set TRUE see column names edsurvey.data.frame edsurvey.data.frame.list ... arguments passed anywhere included compatibility","code":""},{"path":"/reference/print.edsurvey.data.frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Metadata Summary — print.edsurvey.data.frame","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/printGap.html","id":null,"dir":"Reference","previous_headings":"","what":"Gap Analysis Printing — print.gap","title":"Gap Analysis Printing — print.gap","text":"Prints labels results vector gap analysis.","code":""},{"path":"/reference/printGap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gap Analysis Printing — print.gap","text":"","code":"# S3 method for gap print(x, ..., printPercentage = TRUE)  # S3 method for gapList print(x, ..., printPercentage = TRUE)"},{"path":"/reference/printGap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gap Analysis Printing — print.gap","text":"x R object representing gap class gap gapList ... arguments passed anywhere included compatibility printPercentage logical value set TRUE request printing percentage groups. Defaults TRUE.","code":""},{"path":"/reference/printGap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gap Analysis Printing — print.gap","text":"Paul Bailey","code":""},{"path":"/reference/readBTLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to BTLS Data — readBTLS","title":"Connect to BTLS Data — readBTLS","text":"Opens connection Beginning Teacher Longitudinal Study (BTLS) waves 1 5 data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readBTLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to BTLS Data — readBTLS","text":"","code":"readBTLS(dat_FilePath, spss_FilePath, verbose = TRUE)"},{"path":"/reference/readBTLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to BTLS Data — readBTLS","text":"dat_FilePath character value full path BTLS fixed-width (.dat) data file spss_FilePath character value full path SPSS syntax file process dat_FilePath verbose logical value determine want verbose output readBTLS function running indicate processing progress (default value TRUE)","code":""},{"path":"/reference/readBTLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to BTLS Data — readBTLS","text":"edsurvey.data.frame BTLS waves 1 5 longitudinal dataset.","code":""},{"path":"/reference/readBTLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to BTLS Data — readBTLS","text":"Reads spss_FilePath file parse dat_FilePath edsurvey.data.frame.          cached data dat_FilePath format already fixed-width format.","code":""},{"path":[]},{"path":"/reference/readBTLS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to BTLS Data — readBTLS","text":"Tom Fink","code":""},{"path":"/reference/readBTLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to BTLS Data — readBTLS","text":"","code":"if (FALSE) {  fld <- \"~/EdSurveyData/BTLS\" datPath <- file.path(fld, \"ASCII Data File\", \"BTLS2011_12.dat\") spsPath <- file.path(fld, \"Input Syntax for Stata and SPSS\", \"BTLS2011_12.sps\")  #read in the data to an edsurvey.data.frame btls <- readBTLS(datPath, spsPath, verbose = TRUE)  dim(btls) }"},{"path":"/reference/readCivEDICCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to ICCS and CivED Data — readCivEDICCS","title":"Connect to ICCS and CivED Data — readCivEDICCS","text":"Opens connection ICCS (2009, 2016) CivEd (1999) data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readCivEDICCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to ICCS and CivED Data — readCivEDICCS","text":"","code":"readCivEDICCS(   path,   countries,   dataSet = c(\"student\", \"teacher\"),   gradeLvl = c(\"8\", \"9\", \"12\"),   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readCivEDICCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to ICCS and CivED Data — readCivEDICCS","text":"path character value full directory ICCS/CivED extracted SPSS (.sav) set data countries character vector country/countries include using three-digit International Organization Standardization (ISO) country code. list country codes can found Wikipedia https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes online sources. Consult ICCS/CivED User Guide help determine countries included within specific testing year ICCS/CivED. select countries, use wildcard value *. dataSet character value either student teacher indicate set data returned. student-level teacher-level datasets returned time, unlike IEA datasets. Note: CivED 1999 study also included student--teacher data Grade 8.  Specifying dataSet=\"student\" gradeLvl=8 include student teacher data resulting edsurvey.data.frame. gradeLvl character value grade level return 8 = eighth grade (default specified) 9 = ninth grade 12 = 12th grade (CivED 1999 ) forceReread logical value force rereading processed data. default value FALSE speed readCivEDICCS function using existing read-data already processed. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/readCivEDICCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to ICCS and CivED Data — readCivEDICCS","text":"edsurvey.data.frame single specified country edsurvey.data.frame.list multiple countries specified","code":""},{"path":"/reference/readCivEDICCS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to ICCS and CivED Data — readCivEDICCS","text":"Reads unzipped files downloaded international database(s) using IEA Study Data Repository.          Data files require SPSS data file (.sav) format using default filenames. using getData function CivED ICCS study edsurvey.data.frame,          requested data variables inspected, handles necessary data merges automatically.          school data always returned merged student          data, even school variables requested.          1999 CivED Grade 8 edsurvey.data.frame teacher data variables requested getData call,          cause teacher data merged.          Many students can linked many teachers, varies widely countries,          countries contain teacher data. Calling dim function CivED 1999 Grade 8 edsurvey.data.frame result row count teacher dataset merged.          row count considered full data N edsurvey.data.frame, even teacher data included analysis.          column count returned dim count unique column variables across data levels.","code":""},{"path":[]},{"path":"/reference/readCivEDICCS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to ICCS and CivED Data — readCivEDICCS","text":"Tom Fink","code":""},{"path":"/reference/readCivEDICCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to ICCS and CivED Data — readCivEDICCS","text":"","code":"if (FALSE) { eng <- readCivEDICCS(\"~/ICCS/2009/\", countries = c(\"eng\"),                      gradeLvl = 8, dataSet = \"student\") gg <- getData(eng, c(\"famstruc\", \"totwgts\", \"civ\")) head(gg) edsurveyTable(civ ~ famstruc, eng) }"},{"path":"/reference/readECLS_B.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to ECLS-B Data — readECLS_B","title":"Connect to ECLS-B Data — readECLS_B","text":"Opens connection ECLS-B data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readECLS_B.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to ECLS-B Data — readECLS_B","text":"","code":"readECLS_B(   path = getwd(),   filename,   layoutFilename,   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readECLS_B.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to ECLS-B Data — readECLS_B","text":"path character value full directory path(s) ECLS-B extracted fixed--format (.dat) set datafiles. filename character value name fixed-width-file (.dat) data file specificed path read. layoutFilename character value filename either ASCII text (.txt) layout file filename within specified path, character value  filename SPSS syntax (.sps) layout file filename within specified path forceReread logical value force rereading processed data. default value FALSE speed read function using existing read-data already processed. verbose logical value determine want verbose output readECLS-K2011 function running indicate processing progress. default value TRUE.","code":""},{"path":"/reference/readECLS_B.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to ECLS-B Data — readECLS_B","text":"edsurvey.data.frame ECLS-B longitudinal dataset.","code":""},{"path":"/reference/readECLS_B.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to ECLS-B Data — readECLS_B","text":"Reads unzipped files downloaded ECLS-B longitudinal Database.","code":""},{"path":[]},{"path":"/reference/readECLS_B.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to ECLS-B Data — readECLS_B","text":"Trang Nguyen","code":""},{"path":"/reference/readECLS_K1998.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to ECLS--K 1998 Data — readECLS_K1998","title":"Connect to ECLS--K 1998 Data — readECLS_K1998","text":"Opens connection ECLS--K 1998 data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readECLS_K1998.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to ECLS--K 1998 Data — readECLS_K1998","text":"","code":"readECLS_K1998(   path = getwd(),   filename = \"eclsk_98_99_k8_child_v1_0.dat\",   layoutFilename = \"Layout_k8_child.txt\",   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readECLS_K1998.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to ECLS--K 1998 Data — readECLS_K1998","text":"path character value full directory path(s) ECLS--K-extracted fixed-width-format (.dat) set data files filename character value name fixed-width (.dat) data file specified path read layoutFilename character value filename either ASCII (.txt) layout file filename within specified path character value  filename SPSS syntax (.sps) layout file filename within specified path forceReread logical value force rereading processed data. default value FALSE speed read function using existing read-data already processed. verbose logical value determine want verbose output readECLS-K1998 function running indicate processing progress. default value TRUE.","code":""},{"path":"/reference/readECLS_K1998.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to ECLS--K 1998 Data — readECLS_K1998","text":"edsurvey.data.frame ECLS--K 1998 longitudinal dataset","code":""},{"path":"/reference/readECLS_K1998.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to ECLS--K 1998 Data — readECLS_K1998","text":"Reads unzipped files downloaded ECLS--K 1998 longitudinal dataset(s) edsurvey.data.frame.  ECLS--K 1998--99 study consisted          three distinct separate datasets combined: (1) Child Grades K--8 Data, (2) School Base-Year Data, (3) Teacher Base-Year Data.          filename layoutFilename arguments default corresponding Child K--8 default filenames.","code":""},{"path":[]},{"path":"/reference/readECLS_K1998.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to ECLS--K 1998 Data — readECLS_K1998","text":"Tom Fink","code":""},{"path":"/reference/readECLS_K1998.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to ECLS--K 1998 Data — readECLS_K1998","text":"","code":"if (FALSE) { # read-in student file with defaults eclsk_df <- readECLS_K1998(path=\"~/ECLS_K/1998\") #using defaults d <- getData(eclsk_df, c(\"childid\", \"gender\", \"race\")) summary(d) }  if (FALSE) { # read-in with parameters specified eclsk_df <- readECLS_K1998(path = \"~/ECLS_K/1998\",                             filename = \"eclsk_98_99_k8_child_v1_0.dat\",                             layoutFilename = \"Layout_k8_child.txt\",                             verbose = TRUE,                             forceReread = FALSE) }"},{"path":"/reference/readECLS_K2011.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to ECLS--K 2011 Data — readECLS_K2011","title":"Connect to ECLS--K 2011 Data — readECLS_K2011","text":"Opens connection ECLS--K 2011 data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readECLS_K2011.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to ECLS--K 2011 Data — readECLS_K2011","text":"","code":"readECLS_K2011(   path = getwd(),   filename = \"childK5p.dat\",   layoutFilename = \"ECLSK2011_K5PUF.sps\",   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readECLS_K2011.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to ECLS--K 2011 Data — readECLS_K2011","text":"path character value full directory path(s) ECLS--K 2010--11 extracted fixed--format (.dat) set data files filename character value name fixed-width (.dat) data file specified path read layoutFilename character value filename either ASCII (.txt) layout file filename within specified path character value  filename SPSS syntax (.sps) layout file filename within specified path forceReread logical value force rereading processed data. default value FALSE speed read function using existing read-data already processed. verbose logical value determine want verbose output readECLS--K2011 function running indicate processing progress. default value TRUE.","code":""},{"path":"/reference/readECLS_K2011.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to ECLS--K 2011 Data — readECLS_K2011","text":"edsurvey.data.frame ECLS--K 2010--11 longitudinal dataset","code":""},{"path":"/reference/readECLS_K2011.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to ECLS--K 2011 Data — readECLS_K2011","text":"Reads unzipped files downloaded ECLS--K 2010--11 longitudinal dataset.","code":""},{"path":[]},{"path":"/reference/readECLS_K2011.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to ECLS--K 2011 Data — readECLS_K2011","text":"Tom Fink","code":""},{"path":"/reference/readECLS_K2011.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to ECLS--K 2011 Data — readECLS_K2011","text":"","code":"if (FALSE) { # read-in student file with defaults eclsk_df <- readECLS_K2011(path=\"~/ECLS_K/2011\") #using defaults d <- getData(eclsk_df, c(\"childid\", \"c1hgt1\", \"c1wgt1\")) summary(d) }  if (FALSE) { # read-in with parameters specified eclsk_df <- readECLS_K2011(path = \"~/ECLS_K/2011\",                            filename = \"childK5p.dat\",                            layoutFilename = \"ECLSK2011_K5PUF.sps\",                            forceReread = FALSE,                            verbose = TRUE)  }"},{"path":"/reference/readELS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to Education Longitudinal Study (ELS:2002) Data — readELS","title":"Connect to Education Longitudinal Study (ELS:2002) Data — readELS","text":"Opens connection ELS data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readELS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to Education Longitudinal Study (ELS:2002) Data — readELS","text":"","code":"readELS(   path = getwd(),   filename = \"els_02_12_byf3pststu_v1_0.sav\",   wgtFilename = ifelse(filename == \"els_02_12_byf3pststu_v1_0.sav\",     \"els_02_12_byf3stubrr_v1_0.sav\", NA),   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readELS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to Education Longitudinal Study (ELS:2002) Data — readELS","text":"path character value directory path extracted set data files layout files. filename character value name SPSS (.sav) data file specified path read. wgtFilename character value name associated balanced repeated replication (BRR) weight SPSS (.sav) data file specified path read. argument applicable student-level data, contains separate data file containing weight replicate information. using default filenames (recommended), need specify parameter inspect filename argument. data files BRR weight file associated, specify value NULL NA. forceReread logical value force rereading processed data. default value FALSE speed read function using existing read-data already processed. verbose logical value determine want verbose output readELS function running indicate processing progress. default value TRUE.","code":""},{"path":"/reference/readELS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to Education Longitudinal Study (ELS:2002) Data — readELS","text":"edsurvey.data.frame ELS longitudinal dataset","code":""},{"path":"/reference/readELS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to Education Longitudinal Study (ELS:2002) Data — readELS","text":"Reads unzipped files downloaded ELS longitudinal dataset(s) edsurvey.data.frame.  ELS 2002 study consisted four distinct separate datasets combined: Student: bas -year follow-three (default) School: base year follow-one Institution: follow-two Institution: follow-three","code":""},{"path":[]},{"path":"/reference/readELS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to Education Longitudinal Study (ELS:2002) Data — readELS","text":"Tom Fink","code":""},{"path":"/reference/readELS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to Education Longitudinal Study (ELS:2002) Data — readELS","text":"","code":"if (FALSE) { # read-in student file including weight file as default els_df <- readELS(\"~/ELS/2002\") #student level with weights) d <- getData(els_df, c(\"stu_id\", \"bysex\", \"bystlang\")) summary(d)    # read-in with parameters specified (student level with weights) els_wgt_df <- readELS(path = \"~/ELS/2002\",                        filename = \"els_02_12_byf3pststu_v1_0.sav\",                        wgtFilename = \"els_02_12_byf3stubrr_v1_0.sav\",                       verbose = TRUE,                        forceReread = FALSE)  # read-in with parameters specified (school level, no separate weight replicate file) els_sch_df <- readELS(path = \"~/ELS/2002\",                        filename = \"els_02_12_byf1sch_v1_0.sav\",                        wgtFilename = NA,                       verbose = TRUE,                        forceReread = FALSE) }"},{"path":"/reference/readHSB_Senior.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to HS&B Study Senior Data — readHSB_Senior","title":"Connect to HS&B Study Senior Data — readHSB_Senior","text":"Opens connection High School & Beyond 1980--1986 Senior cohort data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readHSB_Senior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to HS&B Study Senior Data — readHSB_Senior","text":"","code":"readHSB_Senior(   HSR8086_PRI_FilePath,   HSR8086_SASSyntax_Path,   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readHSB_Senior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to HS&B Study Senior Data — readHSB_Senior","text":"HSR8086_PRI_FilePath character value main study-derived analytical data file (HSR8086_REV.PRI). Located within REVISED_ASCII Folder. HSR8086_SASSyntax_Path character value SAS syntax file parsing HSR8086_REV.PRI data file. Located within SAS_EXTRACT_LOGIC Folder. forceReread logical value force rereading processed data. default value FALSE speed read function using existing read-data already processed. verbose logical value determine want verbose output readHSB_Senior function running indicate processing progress. default value TRUE.","code":""},{"path":"/reference/readHSB_Senior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to HS&B Study Senior Data — readHSB_Senior","text":"edsurvey.data.frame HS&B Senior 1980--1986 longitudinal dataset","code":""},{"path":"/reference/readHSB_Senior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to HS&B Study Senior Data — readHSB_Senior","text":"Reads specified HSR8086_SASSyntax_Path file parse HSR8086_PRI_FilePath file. cached data file metadata file saved directory filename HSR8086_PRI_FilePath file, new file extensions .txt .meta, respectively. Please note original source repcode variable split two variables named repcode_str stratum value repcode_psu primary sampling unit (PSU) value resulting cache data.","code":""},{"path":[]},{"path":"/reference/readHSB_Senior.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to HS&B Study Senior Data — readHSB_Senior","text":"Tom Fink","code":""},{"path":"/reference/readHSB_Senior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to HS&B Study Senior Data — readHSB_Senior","text":"","code":"if (FALSE) { wrkFld <- \"~/HSB/SENIOR\"  dataPath <- file.path(wrkFld, \"REVISED_ASCII\", \"HSR8086_REV.PRI\") sasPath <- file.path(wrkFld, \"SAS_EXTRACT_LOGIC\", \"HSBsr_READ_HSR8086.SAS\")  # with verbose output as default hsbSR <- readHSB_Senior(dataPath, sasPath)  # silent output hsbSR <- readHSB_Senior(dataPath, sasPath, verbose = FALSE)  # force cache update hsbSR <- readHSB_Senior(dataPath, sasPath, forceReread = TRUE) }"},{"path":"/reference/readHSB_Sophomore.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to HS&B Study Sophomore Data — readHSB_Sophomore","title":"Connect to HS&B Study Sophomore Data — readHSB_Sophomore","text":"Opens connection High School & Beyond 1980--1992 Sophomore cohort data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readHSB_Sophomore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to HS&B Study Sophomore Data — readHSB_Sophomore","text":"","code":"readHSB_Sophomore(   HSO8092_PRI_FilePath,   HSO8092_SASSyntax_Path,   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readHSB_Sophomore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to HS&B Study Sophomore Data — readHSB_Sophomore","text":"HSO8092_PRI_FilePath character value main study-derived analytical data file (HSO8092_REV.PRI). Located within REVISED_ASCII folder. HSO8092_SASSyntax_Path character value SAS syntax file parsing HSO8092_REV.PRI data file. Located within SAS_EXTRACT_LOGIC folder. forceReread logical value force rereading processed data. default value FALSE speed read function using existing read-data already processed. verbose logical value determine want verbose output readHSB_Sophomore function running indicate processing progress. default value TRUE.","code":""},{"path":"/reference/readHSB_Sophomore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to HS&B Study Sophomore Data — readHSB_Sophomore","text":"edsurvey.data.frame HS&B Sophomore 1980--1992 longitudinal dataset","code":""},{"path":"/reference/readHSB_Sophomore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to HS&B Study Sophomore Data — readHSB_Sophomore","text":"Reads specified HSO8092_SASSyntax_Path file parse HSO8092_PRI_FilePath file. cached data file metadata file saved directory filename HSO8092_PRI_FilePath file, new file extensions .txt .meta, respectively. Please note original source repcode variable split two variables named repcode_str stratum value repcode_psu primary sampling unit (PSU) value resulting cache data.","code":""},{"path":[]},{"path":"/reference/readHSB_Sophomore.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to HS&B Study Sophomore Data — readHSB_Sophomore","text":"Tom Fink","code":""},{"path":"/reference/readHSB_Sophomore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to HS&B Study Sophomore Data — readHSB_Sophomore","text":"","code":"if (FALSE) { wrkFld <- \"~/HSB/SOPHOMORE\"  dataPath <- file.path(wrkFld, \"REVISED_ASCII\", \"HSO8092_REV.PRI\") sasPath <- file.path(wrkFld, \"SAS_EXTRACT_LOGIC\", \"HSBso_READ_HSO8092.SAS\")  # with verbose output as default hsbSO <- readHSB_Sophomore(dataPath, sasPath)  # silent output hsbSO <- readHSB_Sophomore(dataPath, sasPath, verbose = FALSE)  # force cache update hsbSO <- readHSB_Sophomore(dataPath, sasPath, forceReread = TRUE) }"},{"path":"/reference/readHSLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to High School Longitudinal Study 2009 (HSLS:2009) Data — readHSLS","title":"Connect to High School Longitudinal Study 2009 (HSLS:2009) Data — readHSLS","text":"Opens connection HSLS data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readHSLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to High School Longitudinal Study 2009 (HSLS:2009) Data — readHSLS","text":"","code":"readHSLS(   path = getwd(),   filename = \"hsls_16_student_v1_0.sav\",   wgtFilename = NA,   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readHSLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to High School Longitudinal Study 2009 (HSLS:2009) Data — readHSLS","text":"path character value full directory path(s) HSLS extracted SPSS (.sav) set data files filename character value name SPSS (.sav) datafile read wgtFilename character value name associated BRR weight SPSS (.sav) data file specificed path read. argument applicable restricted-use student level data, contains separate data-file containing weight replicate information. data files balanced repeated replication (BRR) weight file associated, specify value NULL NA. forceReread logic value force rereading processed data. default value FALSE speeds readHSLS function using existing read-data already processed. verbose logical value set TRUE verbose output indicates progress","code":""},{"path":"/reference/readHSLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to High School Longitudinal Study 2009 (HSLS:2009) Data — readHSLS","text":"edsurvey.data.frame HSLS longitudinal dataset","code":""},{"path":"/reference/readHSLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to High School Longitudinal Study 2009 (HSLS:2009) Data — readHSLS","text":"Reads unzipped files downloaded HSLS longitudinal dataset.","code":""},{"path":"/reference/readHSLS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Connect to High School Longitudinal Study 2009 (HSLS:2009) Data — readHSLS","text":"SPSS (.sav) format preferred fixed-width-format (.dat) ASCII file format time relating value label issues identified ASCII layout specifications.","code":""},{"path":[]},{"path":"/reference/readHSLS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to High School Longitudinal Study 2009 (HSLS:2009) Data — readHSLS","text":"Tom Fink","code":""},{"path":"/reference/readHSLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to High School Longitudinal Study 2009 (HSLS:2009) Data — readHSLS","text":"","code":"if (FALSE) { # use function default values at working directory hsls <- readHSLS(\"~/HSLS/2009\")  # specify parameters with verbose output hsls <- readHSLS(path=\"~/HSLS/2009\",                   filename = \"hsls_16_student_v1_0.sav\",                   forceReread = FALSE,                   verbose = TRUE)  # specify parameters silent output hsls <- readHSLS(path=\"~/HSLS/2009\",                   filename = \"hsls_16_student_v1_0.sav\",                   forceReread = FALSE,                   verbose = FALSE)  #for restricted-use student data, replicate weights stored in separate file hslsRUD <- readHSLS(path=\"~/HSLS/2009\",                      filename = \"hsls_16_student_v1_0.sav\",                      wgtFilename = \"hsls_16_student_BRR_v1_0.sav\",                     forceReread = FALSE,                      verbose = TRUE) }"},{"path":"/reference/readICILS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to ICILS Data — readICILS","title":"Connect to ICILS Data — readICILS","text":"Opens connection ICILS data file residing              disk returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readICILS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to ICILS Data — readICILS","text":"","code":"readICILS(   path,   countries,   dataSet = c(\"student\", \"teacher\"),   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readICILS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to ICILS Data — readICILS","text":"path character value full directory path ICILS extracted SPSS (.sav) set data countries character vector country/countries include using three-digit ISO country code. list country codes can found Wikipedia https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes online sources. Consult ICILS User Guide help determine countries included within specific testing year ICILS. select countries, use wildcard value *. dataSet character value either student (default specified) teacher indicate set data returned. student-level teacher-level datasets returned time, unlike IEA datasets. forceReread logical value force rereading processed data. default value FALSE speed readICILS function using existing read-data already processed. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/readICILS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to ICILS Data — readICILS","text":"edsurvey.data.frame single specified country edsurvey.data.frame.list multiple countries specified","code":""},{"path":"/reference/readICILS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to ICILS Data — readICILS","text":"Reads unzipped files downloaded ICILS international dataset(s) using IEA Study Data Repository. Data files require SPSS data file (.sav) format using default filenames.","code":""},{"path":[]},{"path":"/reference/readICILS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to ICILS Data — readICILS","text":"Tom Fink Jeppe Bundsgaard (updated 2018)","code":""},{"path":"/reference/readICILS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to ICILS Data — readICILS","text":"","code":"if (FALSE) { pol <- readICILS(\"~/ICILS/2013\", countries = \"pol\", dataSet = \"student\") gg <- getData(pol, c(\"idstud\", \"cil\", \"is1g18b\")) head(gg) edsurveyTable(cil ~ is1g18b, pol) }"},{"path":"/reference/readNAEP.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to NAEP Data — readNAEP","title":"Connect to NAEP Data — readNAEP","text":"Opens connection Main NAEP, Long-Term Trend NAEP data file residing              disk. Returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readNAEP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to NAEP Data — readNAEP","text":"","code":"readNAEP(   path,   defaultWeight = \"origwt\",   defaultPvs = \"composite\",   omittedLevels = c(\"Multiple\", NA, \"Omitted\"),   frPath = NULL,   xmlPath = NULL )"},{"path":"/reference/readNAEP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to NAEP Data — readNAEP","text":"path character value indicating full filepath location name (.dat) data file defaultWeight character value indicates default weight specified resulting edsurvey.data.frame. Default value origwt specified. defaultPvs character value indicates default plausible value specified resulting edsurvey.data.frame. Default value composite specified. omittedLevels character vector indicating factor levels/labels excluded. set default value c('Multiple',NA,'Omitted'), adds vector edsurvey.data.frame. frPath character value indicating file location .fr2 parameter layout file included data companion parse specified path data file. default value NULL attempt search parent directory corresponding .fr2 file specified path data file. xmlPath character value indicating file path .xml parameter layout file included part NAEPEX companion. file provides necessary information required read parse (.dat) data file. default value NULL attempt search parent directory corresponding .xml file specified path data file.","code":""},{"path":"/reference/readNAEP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to NAEP Data — readNAEP","text":"edsurvey.data.frame NAEP data file.","code":""},{"path":"/reference/readNAEP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to NAEP Data — readNAEP","text":"frPath file layout information take precedence xmlPath file xmlPath explicitly set, xmlPath file located. readNAEP function includes scaled scores theta scores, latter names ending \\_theta. NAEP administration includes linking error variable variables included end _linking. present, simply use _linking version variable get standard error estimate includes linking error. function supports Main NAEP data files, Long-Term Trend NAEP data files. table outlining differences can found NAEP Nations Report Card website.","code":""},{"path":[]},{"path":"/reference/readNAEP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to NAEP Data — readNAEP","text":"Tom Fink Ahmad Emad","code":""},{"path":"/reference/readNAEP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to NAEP Data — readNAEP","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\")) sdf  # To read in an NCES file first set the directory to the /Data subfolder, # then read in the appropriate .dat file: setwd(\"location/of/Data\") sdf <- readNAEP(path=\"M36NT2PM.dat\")  # Or read in the .dat file directly through the folder pathway: sdf <- readNAEP(path=\"location/of/Data/M36NT2PM.dat\") }"},{"path":"/reference/readNHES.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to NHES Survey Data — readNHES","title":"Connect to NHES Survey Data — readNHES","text":"Opens connection National Household Education Survey (NHES) data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readNHES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to NHES Survey Data — readNHES","text":"","code":"readNHES(savFiles, surveyCode = \"auto\", forceReread = FALSE, verbose = TRUE)"},{"path":"/reference/readNHES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to NHES Survey Data — readNHES","text":"savFiles character vector full file path(s) NHES extracted SPSS (*.sav) data files. surveyCode character vector surveyCode identify year survey type passed savFiles data file(s). default value set auto attempts automatically identify survey/year based file attributes. Occasionally, auto lookup may unable determine surveyCode must explicitly set user. lengths savFiles vector surveyCode vector must match, unless surveyCode set auto. view surveyCodes available, use getNHES_SurveyInfo, viewNHES_SurveyCodes function view codes. forceReread logical value force rereading processed data. default value FALSE speeds readNHES function using existing read-data already processed. verbose logical value defaults TRUE verbose console output indicates progress information. verbose = FALSE, information printed.","code":""},{"path":"/reference/readNHES.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to NHES Survey Data — readNHES","text":"edsurvey.data.frame one NHES file specified savFiles argument, edsurvey.data.frame.list multiple files passed savFiles argument","code":""},{"path":"/reference/readNHES.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to NHES Survey Data — readNHES","text":"Reads unzipped public-use files downloaded NCES Online Codebook (https://nces.ed.gov/OnlineCodebook) SPSS (*.sav) format. sources NHES data, restricted-use files websites, may require additional conversion steps generate required SPSS data format /explicitly setting surveyCode parameter.","code":""},{"path":[]},{"path":"/reference/readNHES.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to NHES Survey Data — readNHES","text":"Tom Fink","code":""},{"path":"/reference/readNHES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to NHES Survey Data — readNHES","text":"","code":"if (FALSE) { rootPath <- \"~/\"  #get instructions for obtaining NHES data  downloadNHES()  #get SPSS *.sav file paths of all NHES files for 2012 and 2016 filesToImport <- list.files(path = file.path(rootPath, \"NHES\", c(2012, 2016)),                              pattern=\"\\\\.sav$\",                              full.names = TRUE,                              recursive = TRUE)  #import all files to edsurvey.data.frame.list object esdfList <- readNHES(savFiles = filesToImport, surveyCode = \"auto\",                       forceReread = FALSE, verbose = TRUE)  viewNHES_SurveyCodes() #view NHES survey codes in console  #get the full file path to the 2016 ATES NHES survey path_ates2016 <- list.files(path = file.path(rootPath, \"NHES\", \"2016\"),                              pattern=\".*ates.*[.]sav$\", full.names = TRUE)  #explicitly setting the surveyCode parameter (if required) esdf <- readNHES(savFiles = path_ates2016, surveyCode = \"ATES_2016\",                   forceReread = FALSE, verbose = TRUE)  #search for variables in the edsurvey.data.frame searchSDF(\"sex\", esdf) }"},{"path":"/reference/readPIAAC.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to PIAAC Data — readPIAAC","title":"Connect to PIAAC Data — readPIAAC","text":"Opens connection PIAAC data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readPIAAC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to PIAAC Data — readPIAAC","text":"","code":"readPIAAC(   path,   countries,   forceReread = FALSE,   verbose = TRUE,   usaOption = \"12_14\" )"},{"path":"/reference/readPIAAC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to PIAAC Data — readPIAAC","text":"path character value full directory path PIAAC .csv files Microsoft Excel codebook countries character vector country/countries include using three-digit ISO country code. list country codes can found PIAAC codebook https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes. files downloaded using downloadPIAAC, country dictionary text file can found filepath. can use * indicate countries available. usa, year must specified using: usa12_14  usa17. forceReread logical value force rereading processed data. Defaults FALSE. Setting forceReread TRUE cause PIAAC data reread increase processing time. verbose logical value determine want verbose output function running indicate progress. Defaults TRUE. usaOption character value 12_14 17 specifies year USA survey used loading countries using * countries argument. make difference loading countries. Defaults 12_14.","code":""},{"path":"/reference/readPIAAC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to PIAAC Data — readPIAAC","text":"edsurvey.data.frame single specified country edsurvey.data.frame.list multiple countries specified","code":""},{"path":"/reference/readPIAAC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to PIAAC Data — readPIAAC","text":"Reads unzipped .csv files downloaded PIAAC dataset using OECD repository (https://www.oecd.org/skills/piaac/). Users can use downloadPIAAC download required files automatically.","code":""},{"path":"/reference/readPIAAC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Connect to PIAAC Data — readPIAAC","text":"Organisation Economic Co-operation Development. (2016). Technical report survey adult skills (PIAAC) (2nd ed.). Paris, France: Author. Retrieved https://www.oecd.org/skills/piaac/PIAAC_Technical_Report_2nd_Edition_Full_Report.pdf","code":""},{"path":[]},{"path":"/reference/readPIAAC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to PIAAC Data — readPIAAC","text":"Trang Nguyen","code":""},{"path":"/reference/readPIAAC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to PIAAC Data — readPIAAC","text":"","code":"if (FALSE) { # the following call returns an edsurvey.data.frame to PIAAC for Canada can <- readPIAAC(\"~/PIAAC/Cycle 1/\", countries = \"can\")  # extract a data.frame with a few variables gg <- getData(can, c(\"c_d05\",\"ageg10lfs\"))   head(gg)  # conduct an analysis on the edsurvey.data.frame edsurveyTable(~ c_d05 + ageg10lfs, data = can)  # the following call returns an edsurvey.data.frame to PIAAC for Canada can <- readPIAAC(\"~/PIAAC/Cycle 1/\", countries = \"can\", us)  # There are two years of usa data for round 1: 2012-2014 and 2017.  # The user must specify which usa year they want with the optional \"usaOption\" argument.  # Otherwise, the read function will return usa 2012-2014. See \"?readPIACC()\" for more info.   # read in usa 2012-2014  usa12 <- readPIAAC(\"~/PIAAC/Cycle 1\",                    countries = \"usa\", usaOption=\"12_14\") # read in usa 2017  usa17 <- readPIAAC(\"~/PIAAC/Cycle 1\",                    countries = \"usa\", usaOption=\"17\") # if reading in all piaac data, the user can still specify usa option.  # Otherwise, by default 2012-1014 will be used when reading in all piaac data.  all_piaac <- readPIAAC(\"~/PIAAC/Cycle 1\",                        countries = \"*\", usaOption=\"17\") }"},{"path":"/reference/readPIRLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to PIRLS Data — readPIRLS","title":"Connect to PIRLS Data — readPIRLS","text":"Opens connection PIRLS data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readPIRLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to PIRLS Data — readPIRLS","text":"","code":"readPIRLS(path, countries, forceReread = FALSE, verbose = TRUE)"},{"path":"/reference/readPIRLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to PIRLS Data — readPIRLS","text":"path character value full directory path PIRLS extracted SPSS (.sav) set data countries character vector country/countries include using three-digit ISO country code. list country codes can found Wikipedia https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes online sources. Consult PIRLS User Guide help determine countries included within specific testing year PIRLS. select countries, use wildcard value *. forceReread logical value force rereading processed data. default value FALSE speed readPIRLS function using existing read-data already processed. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/readPIRLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to PIRLS Data — readPIRLS","text":"edsurvey.data.frame single specified country edsurvey.data.frame.list multiple countries specified","code":""},{"path":"/reference/readPIRLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to PIRLS Data — readPIRLS","text":"Reads unzipped files downloaded PIRLS international database(s) using IEA Study Data Repository. Data files require SPSS data file (.sav) format using default filenames. PIRLS edsurvey.data.frame includes three distinct data levels: student school teacher getData function called using PIRLS edsurvey.data.frame, requested data variables inspected, handles necessary data merges automatically. school data always returned merged student data, even school variables requested. teacher variables requested getData call, cause teacher data merged. Many students can linked many teachers, varies widely countries. Please note calling dim function PIRLS edsurvey.data.frame result row count teacher dataset merged. row count considered full data N edsurvey.data.frame, even teacher data included analysis. column count returned dim count unique column variables across three data levels.","code":""},{"path":[]},{"path":"/reference/readPIRLS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to PIRLS Data — readPIRLS","text":"Tom Fink","code":""},{"path":"/reference/readPIRLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to PIRLS Data — readPIRLS","text":"","code":"if (FALSE) { nor <- readPIRLS(\"~/PIRLS/2011\", countries = c(\"nor\")) gg <- getData(nor, c(\"itsex\", \"totwgt\", \"rrea\")) head(gg) edsurveyTable(rrea ~ itsex, nor) }"},{"path":"/reference/readPISA.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to PISA Data — readPISA","title":"Connect to PISA Data — readPISA","text":"Opens connection PISA data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readPISA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to PISA Data — readPISA","text":"","code":"readPISA(   path,   database = c(\"INT\", \"CBA\", \"FIN\"),   countries,   cognitive = c(\"score\", \"response\", \"none\"),   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readPISA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to PISA Data — readPISA","text":"path character vector full directory path(s) PISA-extracted fixed-width files SPSS control files (.txt). database character indicate selected database. Must one INT (general database people use), CBA (computer-based database PISA 2012 ), FIN (financial literacy database PISA 2012 2018). Defaults INT. countries character vector country/countries include using three-digit ISO country code. list country codes can found PISA codebook https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes. files downloaded using downloadPISA, country dictionary text file can found filepath. cognitive one none, score, response. Default score. PISA database often three student files: student questionnaire, cognitive item response, scored cognitive item response. first file used main student file student background information. Users can choose whether merge score response data main file (none). forceReread logical value force rereading processed data. Defaults FALSE. Setting forceReread TRUE cause PISA data reread increase processing time. verbose logical value determine want verbose output function running indicate progress. Defaults TRUE.","code":""},{"path":"/reference/readPISA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to PISA Data — readPISA","text":"edsurvey.data.frame single specified country  edsurvey.data.frame.list multiple countries specified","code":""},{"path":"/reference/readPISA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to PISA Data — readPISA","text":"Reads unzipped files downloaded PISA database using OECD Repository (https://www.oecd.org/pisa/). Users can use downloadPISA download required files. Student questionnaire files (weights plausible values) used main files, merged cognitive, school, parent files (available). average first-time processing time 1 year one database countries 10--15 minutes. forceReread set FALSE, next time function called take 5--10 seconds. PISA 2000 study, please note study weights subject specific. weight different adjustment factors reading, mathematics, science based original subject source file.  example, w_fstuwt_read weight associated reading subject data file.  Special care must used select correct weight based specific analysis.  See OECD documentation details.  Use showWeights function see three student level subject weights: w_fstuwt_read = Reading (default) w_fstuwt_scie = Science w_fstuwt_math = Mathematics","code":""},{"path":"/reference/readPISA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Connect to PISA Data — readPISA","text":"Organisation Economic Co-operation Development. (2017). PISA 2015 technical report. Paris, France: OECD Publishing. Retrieved https://www.oecd.org/pisa/data/2015-technical-report/","code":""},{"path":[]},{"path":"/reference/readPISA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to PISA Data — readPISA","text":"Tom Fink, Trang Nguyen, Paul Bailey","code":""},{"path":"/reference/readPISA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to PISA Data — readPISA","text":"","code":"if (FALSE) { # the following call returns an edsurvey.data.frame to  # PISA 2012 International Database for Singapore sgp2012 <- readPISA(path = \"~/PISA/2012\", database = \"INT\", countries = \"sgp\")  # extract a data.frame with a few variables gg <- getData(sgp2012, c(\"cnt\",\"read\",\"w_fstuwt\"))   head(gg)  # conduct an analysis on the edsurvey.data.frame edsurveyTable(read ~ st04q01 + st20q01, data = sgp2012) }"},{"path":"/reference/readPISA_YAFS.html","id":null,"dir":"Reference","previous_headings":"","what":"PISA YAFS (Young Adult Follow-up Study) — readPISA_YAFS","title":"PISA YAFS (Young Adult Follow-up Study) — readPISA_YAFS","text":"Opens connection Programme International Student Assessment (PISA) YAFS 2016 data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readPISA_YAFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PISA YAFS (Young Adult Follow-up Study) — readPISA_YAFS","text":"","code":"readPISA_YAFS(   datPath = file.path(getwd(), \"PISA_YAFS2016_Data.dat\"),   spsPath = file.path(getwd(), \"PISA_YAFS2016_SPSS.sps\"),   esdf_PISA2012_USA = NULL )"},{"path":"/reference/readPISA_YAFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PISA YAFS (Young Adult Follow-up Study) — readPISA_YAFS","text":"datPath character value file location data file (.dat) file saved. spsPath character value file location SPSS (.sps) script file saved parse datPath data file. esdf_PISA2012_USA (optional) edsurvey.data.frame USA PISA 2012 data planning analyze PISA YAFS data alongside USA PISA 2012 dataset.","code":""},{"path":"/reference/readPISA_YAFS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PISA YAFS (Young Adult Follow-up Study) — readPISA_YAFS","text":"edsurvey.data.frame PISA YAFS dataset esdf_PISA2012_USA parameter NULL.  PISA 2012 USA edsurvey.data.frame specified esdf_PISA2012_USA parameter, resulting dataset return edsurvey.data.frame allowing analysis combined dataset.","code":""},{"path":"/reference/readPISA_YAFS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PISA YAFS (Young Adult Follow-up Study) — readPISA_YAFS","text":"Reads unzipped files PISA YAFS.  PISA YAFS dataset follow-study subset students participated PISA 2012 USA study.  can analyzed singular dataset optionally merged PISA 2012 USA data, case two sets weights merged dataset (default PISA YAFS weights PISA 2012 USA weights).","code":""},{"path":[]},{"path":"/reference/readPISA_YAFS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PISA YAFS (Young Adult Follow-up Study) — readPISA_YAFS","text":"Tom Fink","code":""},{"path":"/reference/readPISA_YAFS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PISA YAFS (Young Adult Follow-up Study) — readPISA_YAFS","text":"","code":"if (FALSE) { #Return an edsurvey.data.frame for only the PISA YAFS dataset. #Either omit, or set the esdf_PISA2012_USA to a NULL value. yafs <- readPISA_YAFS(datPath = \"~/PISA YAFS/2016/PISA_YAFS2016_Data.dat\",                       spsPath = \"~/PISA YAFS/2016/PISA_YAFS2016_SPSS.sps\",                       esdf_PISA2012_USA = NULL)    #If wanting to analyze the PISA YAFS dataset in conjunction with the PISA 2012  #United States of America (USA) dataset, it should be read in first to an edsurvey.data.frame. #Then pass the resulting edsurvey.data.frame as a parameter for the #esdf_PISA2012_USA argument. No other edsurvey.data.frames are supported. usa2012 <- readPISA(\"~/PISA/2012\", database = \"INT\", countries = \"usa\")    yafs <- readPISA_YAFS(datPath = \"~/PISA YAFS/2016/PISA_YAFS2016_Data.dat\",                       spsPath = \"~/PISA YAFS/2016/PISA_YAFS2016_SPSS.sps\",                       esdf_PISA2012_USA = usa2012) head(yafs) }"},{"path":"/reference/readSSOCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to School Survey on Crime and Safety Data — readSSOCS","title":"Connect to School Survey on Crime and Safety Data — readSSOCS","text":"Opens connection School Survey Crime Safety (SSOCS) data file              returns edsurvey.data.frame, edsurvey.data.frame.list multiple files specified,              information file(s) data.","code":""},{"path":"/reference/readSSOCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to School Survey on Crime and Safety Data — readSSOCS","text":"","code":"readSSOCS(sasDataFiles, years, forceReread = FALSE, verbose = TRUE)"},{"path":"/reference/readSSOCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to School Survey on Crime and Safety Data — readSSOCS","text":"sasDataFiles character vector full SAS (*.sas7bdat) data file path(s) wish read. multiple paths specified vector, return edsurvey.data.frame.list. years integer vector year associated index position sasDataFile data file vector. year required correctly determine required metadata file. Valid year values follows: 2000 (1999--2000), 2004 (2003--2004), 2006 (2005--2006), 2008 (2007--2008), 2010 (2009--2010), 2016 (2015--2016), 2018 (2017--2018). forceReread logical value force rereading processed data. default value FALSE speed readSSOCS function using existing read-data already processed. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/readSSOCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to School Survey on Crime and Safety Data — readSSOCS","text":"edsurvey.data.frame one data file specified edsurvey.data.frame.list multiple files specified sasDataFiles parameter.","code":""},{"path":"/reference/readSSOCS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to School Survey on Crime and Safety Data — readSSOCS","text":"Reads unzipped files downloaded SSOCS Data Products website SAS format.  sources SSOCS data, restricted-use data websites, may require additional conversion steps generate required SAS format.","code":""},{"path":"/reference/readSSOCS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Connect to School Survey on Crime and Safety Data — readSSOCS","text":"readSSOCS function, value label information stored retrieved automatically within EdSurvey package (based year parameter),       SAS files contain raw data values.","code":""},{"path":[]},{"path":"/reference/readSSOCS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to School Survey on Crime and Safety Data — readSSOCS","text":"Tom Fink","code":""},{"path":"/reference/readSSOCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to School Survey on Crime and Safety Data — readSSOCS","text":"","code":"if (FALSE) { #download SSOCS data for years 2016 and 2018  downloadSSOCS(years = c(2016, 2018))  rootPath <- \"~/\"# may need to change this  #get SAS *.sas7bdat file paths of all SSOCS files for 2016 and 2018 filesToImport <- list.files(path = file.path(rootPath, \"SSOCS\", c(2016, 2018)),                             pattern=\"\\\\.sas7bdat$\",                             full.names = TRUE)    #import all files to edsurvey.data.frame.list object esdfList <- readSSOCS(sasDataFiles = filesToImport,                       years = c(2016, 2018),                       forceReread = FALSE,                       verbose = TRUE)  #reading in the 2018 to an edsurvey.data.frame object esdf <- readSSOCS(sasDataFiles = file.path(rootPath, \"SSOCS/2018/pu_ssocs18.sas7bdat\"),                   years = 2018,                   forceReread = FALSE,                   verbose = TRUE)    #search for variables in the edsurvey.data.frame containing the word 'bully' searchSDF(\"bully\", esdf) }"},{"path":"/reference/readTALIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to TALIS Data — readTALIS","title":"Connect to TALIS Data — readTALIS","text":"Opens connection TALIS data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readTALIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to TALIS Data — readTALIS","text":"","code":"readTALIS(   path,   countries,   isced = c(\"b\", \"a\", \"c\"),   dataLevel = c(\"teacher\", \"school\"),   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readTALIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to TALIS Data — readTALIS","text":"path character vector full directory path(s) TALIS SPSS files (.sav) countries character vector country/countries include using three-digit ISO country code. list country codes can found TALIS codebook, can use https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes. can use * indicate countries available. isced character value one , b, c. stands Primary Level, b Lower Secondary Level, c Upper Secondary Level. Default b. dataLevel character value indicates data level used. can teacher (default) school (see details). forceReread logical value force rereading processed data. Defaults FALSE. Setting forceReread TRUE cause readTALIS data reread increase processing time. verbose logical value determine want verbose output function running indicate progress. Defaults TRUE.","code":""},{"path":"/reference/readTALIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to TALIS Data — readTALIS","text":"edsurvey.data.frame single specified country   edsurvey.data.frame.list multiple countries specified","code":""},{"path":"/reference/readTALIS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to TALIS Data — readTALIS","text":"Reads unzipped files downloaded TALIS database using OECD Repository (https://www.oecd.org/education/talis/).        dataLevel set teacher, treats teacher data file main dataset, merges school data teacher data        country automatically. Use option wanting analyze just teacher variables, teacher school level variables together.        dataLevel set school, uses school data file (teacher data available).","code":""},{"path":"/reference/readTALIS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Connect to TALIS Data — readTALIS","text":"Organisation Economic Co-operation Development. (2018). TALIS 2018 technical report. Retrieved https://www.oecd.org/education/talis/TALIS_2018_Technical_Report.pdf","code":""},{"path":[]},{"path":"/reference/readTALIS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to TALIS Data — readTALIS","text":"Paul Bailey, Tom Fink, Trang Nguyen","code":""},{"path":"/reference/readTALIS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to TALIS Data — readTALIS","text":"","code":"if (FALSE) { #TALIS 2018 - school level data for all countries talis18 <- readTALIS(path = \"~/TALIS/2018\",                       isced = \"b\",                       dataLevel = \"school\",                       countries = \"*\")  #unweighted summary result <- summary2(talis18, \"tc3g01\", weightVar = \"\")  #print usa results to console result$usa  # the following call returns an edsurvey.data.frame to TALIS 2013  # for US teacher-level data at secondary level usa2013 <- readTALIS(path = \"~/TALIS/2013\", isced = \"b\",                      dataLevel = \"teacher\", countries = \"usa\")  # extract a data.frame with a few variables gg <- getData(usa2013, c(\"tt2g05b\", \"tt2g01\"))   head(gg)  # conduct an analysis on the edsurvey.data.frame edsurveyTable(tt2g05b ~ tt2g01, data = usa2013)  }"},{"path":"/reference/readTIMSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to TIMSS Data — readTIMSS","title":"Connect to TIMSS Data — readTIMSS","text":"Opens connection TIMSS data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readTIMSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to TIMSS Data — readTIMSS","text":"","code":"readTIMSS(   path,   countries,   gradeLvl = c(\"4\", \"8\", \"4b\", \"8b\"),   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readTIMSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to TIMSS Data — readTIMSS","text":"path character vector full directory path(s) TIMSS extracted SPSS (.sav) set data countries character vector country/countries include using three-digit ISO country code. list country codes can found Wikipedia https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes online sources. Consult TIMSS User Guide documentation help determine countries included within specific testing year TIMSS country code definitions. select countries available, use wildcard value *. gradeLvl character value indicate specific grade level wish return 4 = fourth grade (default specified) 8 = eighth grade 4B = fourth grade bridge study (TIMSS 2019 ) 8B = eight grade bridge study (TIMSS 2019 ) forceReread logical value force rereading processed data. default value FALSE speed readTIMSS function using existing read-data already processed. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/readTIMSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to TIMSS Data — readTIMSS","text":"edsurvey.data.frame single specified country edsurvey.data.frame.list multiple countries specified","code":""},{"path":"/reference/readTIMSS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to TIMSS Data — readTIMSS","text":"Reads unzipped files downloaded TIMSS international database(s) using IEA Study Data Repository. Data files require SPSS data file (.sav) format using default filenames. TIMSS edsurvey.data.frame includes three distinct data levels: student school teacher getData function called using TIMSS edsurvey.data.frame, requested data variables inspected, handles necessary data merges automatically. school data always returned merged student data, even school variables requested. teacher variables requested getData call, cause teacher data merged. Many students can linked many teachers, varies widely countries. Please note calling dim function TIMSS edsurvey.data.frame result row count teacher dataset merged. row count considered full data N edsurvey.data.frame, even teacher data included analysis. column count returned dim count unique column variables across three data levels. Beginning TIMSS 2015, numeracy dataset designed assess mathematics end primary school cycle countries children still developing fundamental mathematics skills. numeracy dataset handled automatically user included within fourth-grade dataset gradeLvl=4. numeracy countries 4th grade dataset addition numeracy dataset, . countries numeracy 4th grade dataset, two datasets combined one edsurvey.data.frame country. Data variables missing either dataset kept, NA values inserted dataset records variable exist. Data variables common datasets kept single data variable, records retaining original values source dataset. Consult TIMSS User Guide information. TIMSS 2019 study, bridge study conducted help compute adjustment factors electronic test format paper/pencil format.  bridge study considered separate normal TIMSS 2019 study. gradeLvl parameter now includes \"4B\" option Grade 4 bridge study, \"8B\" option Grade 8 bridge study files.","code":""},{"path":[]},{"path":"/reference/readTIMSS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to TIMSS Data — readTIMSS","text":"Tom Fink","code":""},{"path":"/reference/readTIMSS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to TIMSS Data — readTIMSS","text":"","code":"if (FALSE) { # single country specified fin <- readTIMSS(\"~/TIMSS/2015\", countries = c(\"fin\"), gradeLvl = 4) gg <- getData(fin, c(\"asbg01\", \"totwgt\", \"srea\")) head(gg) edsurveyTable(srea ~ asbg01, fin)  # multiple countries returned as edsurvey.data.frame.list, specify all countries with '*' argument timss2011 <- readTIMSS(\"~/TIMSS/2011\", countries=\"*\", gradeLvl = 8, verbose = TRUE) # print out edsurvey.data.frame.list covariates timss2011$covs }"},{"path":"/reference/readTIMSSAdv.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to TIMSS Advanced Data — readTIMSSAdv","title":"Connect to TIMSS Advanced Data — readTIMSSAdv","text":"Opens connection TIMSS Advanced data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/readTIMSSAdv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to TIMSS Advanced Data — readTIMSSAdv","text":"","code":"readTIMSSAdv(   path,   countries,   subject = c(\"math\", \"physics\"),   forceReread = FALSE,   verbose = TRUE )"},{"path":"/reference/readTIMSSAdv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to TIMSS Advanced Data — readTIMSSAdv","text":"path character vector full directory path TIMSS Advanced extracted SPSS (.sav) set data countries character vector country/countries include using three-digit ISO country code. list country codes can found Wikipedia https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes online sources. Consult TIMSS Advanced User Guide help determine countries included within specific testing year TIMSS Advanced. select countries, use wildcard value *. subject character value indicate wish import math physics dataset. one subject can read time. forceReread logical value force rereading processed data. default value FALSE speed readTIMSSAdv function using existing read-data already processed. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/readTIMSSAdv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to TIMSS Advanced Data — readTIMSSAdv","text":"edsurvey.data.frame single specified country edsurvey.data.frame.list multiple countries specified","code":""},{"path":"/reference/readTIMSSAdv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to TIMSS Advanced Data — readTIMSSAdv","text":"Reads unzipped files downloaded TIMSS Advanced international database(s) using IEA Study Data Repository. Data files require SPSS data file (.sav) format using default filenames. TIMSS Advanced edsurvey.data.frame includes three distinct data levels: student school teacher getData function called using TIMSS Advanced edsurvey.data.frame, requested data variables inspected, handles necessary data merges automatically. school data always returned merged student data, even school variables requested. teacher variables requested getData call cause teacher data merged. Many students can linked many teachers, varies widely countries. Please note calling dim function TIMSS Advanced edsurvey.data.frame result row count teacher dataset merged. row count considered full data N edsurvey.data.frame, even teacher data included analysis. column count returned dim count unique column variables across three data levels.","code":""},{"path":[]},{"path":"/reference/readTIMSSAdv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to TIMSS Advanced Data — readTIMSSAdv","text":"Tom Fink","code":""},{"path":"/reference/readTIMSSAdv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to TIMSS Advanced Data — readTIMSSAdv","text":"","code":"if (FALSE) { swe <- readTIMSSAdv(\"~/TIMSSAdv/2015\",                     countries = c(\"swe\"), subject = \"math\") gg <- getData(swe, c(\"itsex\", \"totwgt\", \"malg\")) head(gg) edsurveyTable(malg ~ itsex, swe) }"},{"path":"/reference/read_ePIRLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to ePIRLS Data — read_ePIRLS","title":"Connect to ePIRLS Data — read_ePIRLS","text":"Opens connection ePIRLS data file              returns edsurvey.data.frame              information file data.","code":""},{"path":"/reference/read_ePIRLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to ePIRLS Data — read_ePIRLS","text":"","code":"read_ePIRLS(path, countries, forceReread = FALSE, verbose = TRUE)"},{"path":"/reference/read_ePIRLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to ePIRLS Data — read_ePIRLS","text":"path character value full directory path ePIRLS extracted SPSS (.sav) set data countries character vector country/countries include using three-digit ISO country code. list country codes can found Wikipedia https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes online sources. Consult ePIRLS User Guide help determine countries included within specific testing year ePIRLS. select countries, use wildcard value *. forceReread logical value force rereading processed data. default value FALSE speed read_ePIRLS function using existing read-data already processed. verbose logical value either print suppress status message output. default value TRUE.","code":""},{"path":"/reference/read_ePIRLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to ePIRLS Data — read_ePIRLS","text":"edsurvey.data.frame single specified country edsurvey.data.frame.list multiple countries specified","code":""},{"path":"/reference/read_ePIRLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to ePIRLS Data — read_ePIRLS","text":"Reads unzipped files downloaded ePIRLS international database(s) using IEA Study Data Repository. Data files require SPSS data file (.sav) format using default filenames. ePIRLS edsurvey.data.frame includes three distinct data levels: student school teacher getData function called using ePIRLS edsurvey.data.frame,          requested data variables inspected, handles necessary data merges automatically.          school data always returned merged student          data, even school variables requested.          teacher variables requested getData call, cause teacher data merged.          student can linked many teachers, varies widely countries. Please note calling dim function ePIRLS edsurvey.data.frame result          row count teacher dataset merged.          row count considered full data N edsurvey.data.frame, even teacher data included analysis.          column count returned dim count unique column variables across three data levels.","code":""},{"path":[]},{"path":"/reference/read_ePIRLS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to ePIRLS Data — read_ePIRLS","text":"Tom Fink","code":""},{"path":"/reference/read_ePIRLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to ePIRLS Data — read_ePIRLS","text":"","code":"if (FALSE) { usa <- read_ePIRLS(\"~/ePIRLS/2016\", countries = c(\"usa\")) gg <- getData(usa, c(\"itsex\", \"totwgt\", \"erea\")) head(gg) edsurveyTable(erea ~ itsex, usa) }"},{"path":"/reference/rebindAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Data Frame Attributes — rebindAttributes","title":"Copy Data Frame Attributes — rebindAttributes","text":"Many R functions strip attributes data frame objects.              function assigns attributes attributeData argument              data frame data argument.","code":""},{"path":"/reference/rebindAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Data Frame Attributes — rebindAttributes","text":"","code":"rebindAttributes(data, attributeData)"},{"path":"/reference/rebindAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Data Frame Attributes — rebindAttributes","text":"data data.frame attributeData edsurvey.data.frame light.edsurvey.data.frame contains desired attributes","code":""},{"path":"/reference/rebindAttributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Data Frame Attributes — rebindAttributes","text":"data.frame class light.edsurvey.data.frame containing elements data attributes (except names row.names) attributeData","code":""},{"path":"/reference/rebindAttributes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Copy Data Frame Attributes — rebindAttributes","text":"Paul Bailey Trang Nguyen","code":""},{"path":"/reference/rebindAttributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy Data Frame Attributes — rebindAttributes","text":"","code":"if (FALSE) { require(dplyr) PISA2012 <- readPISA(path = paste0(edsurveyHome, \"PISA/2012\"),                      database = \"INT\",                      countries = \"ALB\", verbose=TRUE) ledf <- getData(data = PISA2012, varnames = c(\"cnt\", \"oecd\", \"w_fstuwt\",                                               \"st62q04\", \"st62q11\",                                               \"st62q13\", \"math\"),                 omittedLevels = FALSE, addAttributes = TRUE)  omittedLevels <- c('Invalid', 'N/A', 'Missing', 'Miss', 'NA', '(Missing)') for (i in c(\"st62q04\", \"st62q11\", \"st62q13\")) {   ledf[,i] <- factor(ledf[,i], exclude=omittedLevels) }  # after applying some dplyr functions, the \"light.edsurvey.data.frame\" becomes just \"data.frame\" PISA2012_ledf <- ledf %>%           rowwise() %>%    mutate(avg_3 = mean(c(st62q04, st62q11, st62q13), na.rm = TRUE)) %>%    ungroup() %>%   rebindAttributes(PISA2012) # could also be called with ledf class(PISA2012_ledf)  # again, a light.edsurvey.data.frame lma <- lm.sdf(math ~ avg_3,data=PISA2012_ledf) summary(lma)  PISA2012_ledf <- ledf %>%           rowwise() %>%    mutate(avg_3 = mean(c(st62q04, st62q11, st62q13), na.rm = TRUE)) %>%    ungroup() %>%   rebindAttributes(ledf) # return attributes and make a light.edsurvey.data.frame  # again a light.edsurvey.data.frame lma <- lm.sdf(math ~ avg_3,data=PISA2012_ledf) summary(lma) }"},{"path":"/reference/recode.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Levels Within Variables — recode.sdf","title":"Recode Levels Within Variables — recode.sdf","text":"Recodes variables edsurvey.data.frame,              light.edsurvey.data.frame, edsurvey.data.frame.list.","code":""},{"path":"/reference/recode.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Levels Within Variables — recode.sdf","text":"","code":"recode.sdf(x, recode)"},{"path":"/reference/recode.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Levels Within Variables — recode.sdf","text":"x edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list recode list recoding rules. See Examples format recoding rules.","code":""},{"path":"/reference/recode.sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Levels Within Variables — recode.sdf","text":"object class x recode added ","code":""},{"path":"/reference/recode.sdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recode Levels Within Variables — recode.sdf","text":"Trang Nguyen Paul Bailey","code":""},{"path":"/reference/recode.sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Levels Within Variables — recode.sdf","text":"","code":"if (FALSE) { # filepath argument will vary by operating system conventions usaG4.15 <- readTIMSS(\"~/TIMSS/2015\", \"usa\", 4) d <- getData(usaG4.15, \"itsex\") summary(d) #show details: MALE/FEMALE usaG4.15 <- recode.sdf(usaG4.15,                        recode = list(itsex=list(from=c(\"MALE\"),                                                 to=c(\"BOY\")),                                      itsex=list(from=c(\"FEMALE\"),                                                 to=c(\"GIRL\"))))  d <- getData(usaG4.15, \"itsex\") #apply recode summary(d) #show details: BOY/GIRL }"},{"path":"/reference/rename.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify Variable Names — rename.sdf","title":"Modify Variable Names — rename.sdf","text":"Renames variables edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list. function often used users want conduct gap analysis across  years variable names differ across two years data.","code":""},{"path":"/reference/rename.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify Variable Names — rename.sdf","text":"","code":"rename.sdf(x, oldnames, newnames, avoid_duplicated = TRUE)"},{"path":"/reference/rename.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify Variable Names — rename.sdf","text":"x edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list oldnames character vector old variable names newnames character vector new variable names replace corresponding old names avoid_duplicated logical value indicate whether avoid renaming variable corresponding new name already exists data. Defaults TRUE.","code":""},{"path":"/reference/rename.sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify Variable Names — rename.sdf","text":"object class x new variable names","code":""},{"path":"/reference/rename.sdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify Variable Names — rename.sdf","text":"variable names coerced lowercase comply          EdSurvey standard.","code":""},{"path":[]},{"path":"/reference/rename.sdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify Variable Names — rename.sdf","text":"Trang Nguyen","code":""},{"path":"/reference/rename.sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify Variable Names — rename.sdf","text":"","code":"if (FALSE) { usaG4.15 <- readTIMSS(\"~/TIMSS/2015\", \"usa\", 4) usaG4.15.renamed <- rename.sdf(usaG4.15,                                c(\"itsex\", \"mmat\"),                                c(\"gender\", \"math_overall\")) lm1 <- lm.sdf(math_overall ~ gender, data = usaG4.15.renamed) summary(lm1) }"},{"path":"/reference/rq.sdf.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Quantile Regression Models — rq.sdf","title":"EdSurvey Quantile Regression Models — rq.sdf","text":"Fits quantile regression model uses weights variance estimates appropriate data.","code":""},{"path":"/reference/rq.sdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Quantile Regression Models — rq.sdf","text":"","code":"rq.sdf(   formula,   data,   tau = 0.5,   weightVar = NULL,   relevels = list(),   jrrIMax = 1,   dropOmittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   returnNumberOfPSU = FALSE,   omittedLevels = deprecated(),   ... )"},{"path":"/reference/rq.sdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Quantile Regression Models — rq.sdf","text":"formula formula quantile regression model. See rq. y left blank, default subject scale subscale variable used. (can find default using showPlausibleValues.) y variable subject scale subscale (one names shown showPlausibleValues), subject scale subscale used. data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list tau quantile estimated. value set 0 1 default 0.5. weightVar character indicating weight variable use. weightVar must one weights edsurvey.data.frame. NULL,  uses default edsurvey.data.frame. relevels list. Used change contrasts default treatment contrasts treatment contrasts chosen omitted group (reference group). name element variable name, value group omitted (reference group). jrrIMax using jackknife variance estimation method, default estimation option, jrrIMax=1, uses sampling variance first plausible value component sampling variance estimation. \\(V_{jrr}\\) term can estimated number plausible values, values larger number plausible values survey (including Inf) result plausible values used. Higher values jrrIMax lead longer computing times accurate variance estimates. dropOmittedLevels logical value. set default value TRUE, drops levels factor variables specified edsurvey.data.frame. Use print edsurvey.data.frame see omitted levels. defaultConditions logical value. set default value TRUE, uses default conditions stored edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode=list(var1 = list(= c(\"\", \"b\", \"c\"), = \"d\")). returnNumberOfPSU logical value set TRUE return number primary sampling units (PSUs) omittedLevels argument deprecated. Use dropOmittedLevels ... additional parameters passed rq","code":""},{"path":"/reference/rq.sdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Quantile Regression Models — rq.sdf","text":"edsurvey.rq following elements: call function call formula formula used fit model tau quantile estimated coef estimates coefficients se standard error estimates coefficients Vimp estimated variance uncertainty scores (plausible value variables) Vjrr estimated variance sampling M number plausible values varm variance estimates various plausible values coefm values coefficients various plausible values coefmat coefficient matrix (typically produced summary model) weight name weight variable npv number plausible values njk number jackknife replicates used; set NA Taylor series variance    estimates used rho mean value objective function across plausible values","code":""},{"path":"/reference/rq.sdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Quantile Regression Models — rq.sdf","text":"function computes estimate tau-th conditional quantile function response, given covariates, specified formula argument. Like lm.sdf(), function presumes linear specification quantile regression model (.e., formula defines model linear parameters). Unlike lm.sdf(), jackknife applicable variance estimation method used function. details quantile regression models implemented R, see Koenker Bassett (1978), Koenker (2005), vignette quantreg package--- accessible vignette(\"rq\",package=\"quantreg\")---function built. details left-hand side variables, survey sampling weights, estimated variances correctly handled, see lm.sdf vignette titled Statistical Methods Used EdSurvey.","code":""},{"path":"/reference/rq.sdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EdSurvey Quantile Regression Models — rq.sdf","text":"Binder, D. . (1983). variances asymptotically normal estimators complex surveys. International Statistical Review, 51(3), 279--292. Johnson, E. G., & Rust, K. F. (1992). Population inferences variance estimation NAEP data. Journal Education Statistics, 17(2), 175--190. Koenker, R. W., & Bassett, G. W. (1978). Regression quantiles, Econometrica, 46, 33--50. Koenker, R. W. (2005). Quantile regression. Cambridge, UK: Cambridge University Press. Rubin, D. B. (1987). Multiple imputation nonresponse surveys. New York, NY: Wiley.","code":""},{"path":[]},{"path":"/reference/rq.sdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Quantile Regression Models — rq.sdf","text":"Trang Nguyen, Paul Bailey, Yuqi Liao","code":""},{"path":"/reference/rq.sdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Quantile Regression Models — rq.sdf","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # conduct quantile regression at a given tau value (by default, tau is set to be 0.5)  rq1 <- rq.sdf(composite ~ dsex + b017451, data=sdf, tau = 0.8) summary(rq1) }"},{"path":"/reference/scoreDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Assessment scoring — scoreDefault","title":"Assessment scoring — scoreDefault","text":"Score assessments","code":""},{"path":"/reference/scoreDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assessment scoring — scoreDefault","text":"","code":"scoreDefault(edf, polyParamTab, dichotParamTab, scoreDict)"},{"path":"/reference/scoreDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assessment scoring — scoreDefault","text":"edf data polyParamTab see mml.sdf dichotParamTab see mml.sdf scoreDict data frame; see Details.","code":""},{"path":"/reference/scoreDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assessment scoring — scoreDefault","text":"data frame columns scoreDict  key column mapped answer score.","code":""},{"path":"/reference/scoreDefault.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assessment scoring — scoreDefault","text":"default scorer scores column edf identified polyParamTab$ItemID, dichotParamTab$ItemID using crosswalk scoreDict scoreDict data frame long format columns key, answer, score. function maps, within item identified key answer score.","code":""},{"path":[]},{"path":"/reference/scoreDefault.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assessment scoring — scoreDefault","text":"Paul Bailey  Tom Fink","code":""},{"path":"/reference/scoreTIMSS.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Direct Estimation - TIMSS scoring — scoreTIMSS","title":"EdSurvey Direct Estimation - TIMSS scoring — scoreTIMSS","text":"Scoring TIMSS data","code":""},{"path":"/reference/scoreTIMSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Direct Estimation - TIMSS scoring — scoreTIMSS","text":"","code":"scoreTIMSS(edf, polyParamTab, dichotParamTab, scoreCard = NULL)"},{"path":"/reference/scoreTIMSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Direct Estimation - TIMSS scoring — scoreTIMSS","text":"edf TIMSS light.edsurvey.data.frame edsurvey.data.frame polyParamTab dataframe containing IRT parameters polytomous items edf dichotParamTab dataframe containing IRT parameters dichotomous items edf scoreCard unused","code":""},{"path":"/reference/scoreTIMSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Direct Estimation - TIMSS scoring — scoreTIMSS","text":"scored edf","code":""},{"path":"/reference/scoreTIMSS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Direct Estimation - TIMSS scoring — scoreTIMSS","text":"function scores TIMSS data. multiple choice items, correct answers assigned 1 point, incorrect answers assigned 0 points. constructed response items, correct answers assigned 2 points, partially correct answers assigned 1 point, incorrect answers assigned 0 points. types items, \"REACHED\" \"OMITTED INVALID\" assigned 0 points. defaults can changed modifying scoreDict columns pointMult pointConst, respectively.","code":""},{"path":"/reference/SD.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Standard Deviation — SD","title":"EdSurvey Standard Deviation — SD","text":"Calculate standard deviation numeric variable edsurvey.data.frame.","code":""},{"path":"/reference/SD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Standard Deviation — SD","text":"","code":"SD(   data,   variable,   weightVar = NULL,   jrrIMax = 1,   varMethod = \"jackknife\",   dropOmittedLevels = TRUE,   defaultConditions = TRUE,   recode = NULL,   targetLevel = NULL,   jkSumMultiplier = getAttributes(data, \"jkSumMultiplier\"),   returnVarEstInputs = FALSE,   omittedLevels = deprecated() )"},{"path":"/reference/SD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Standard Deviation — SD","text":"data edsurvey.data.frame, edsurvey.data.frame.list, light.edsurvey.data.frame variable character vector variable names weightVar character weight variable name. Default default weight data exists. given survey data default weight, function produce unweighted statistics instead. Can set NULL return unweighted statistics. jrrIMax numeric value; using jackknife variance estimation method, default estimation option, jrrIMax=1, uses                   sampling variance first plausible value component sampling variance estimation. Vjrr                   term (see Statistical Methods Used EdSurvey)                   can estimated number plausible values, values larger number                   plausible values survey (including Inf) result plausible values used.                   Higher values jrrIMax lead longer computing times accurate variance estimates. varMethod deprecated parameter; gap always uses jackknife variance estimation dropOmittedLevels logical value. set TRUE, drops levels specified variable. Use print edsurvey.data.frame see omitted levels. Defaults FALSE. defaultConditions logical value. set default value TRUE, uses default conditions stored  edsurvey.data.frame subset data. Use print edsurvey.data.frame see default conditions. recode list lists recode variables. Defaults NULL. Can set recode = list(var1 = list(= c(\"\",\"b\",\"c\"), = \"d\")). targetLevel character string. specified, calculates gap percentage students targetLevel variable argument, useful comparing gap percentage students survey response level. jkSumMultiplier jackknife variance estimation method---balanced repeated replication (BRR) method---multiplies final jackknife variance estimate value, set jkSumMultiplier value. edsurvey.data.frame, light.edsurvey.data.frame, recommended value can recovered EdSurvey::getAttributes(myData, \"jkSumMultiplier\"). returnVarEstInputs logical value set TRUE return inputs jackknife imputation variance estimates, allows computation covariances estimates. omittedLevels argument deprecated. Use dropOmittedLevels","code":""},{"path":"/reference/SD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Standard Deviation — SD","text":"list object elements: mean mean assessment score variable, calculated according vignette titled             Statistical Methods Used EdSurvey std standard deviation mean stdSE standard error std df degrees freedom std varEstInputs variance estimate inputs used calculating covariances varEstToCov. returned returnVarEstInputs TRUE","code":""},{"path":"/reference/SD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Standard Deviation — SD","text":"Paul Bailey Huade Huo","code":""},{"path":"/reference/SD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Standard Deviation — SD","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # get standard deviation for Male's composite score SD(data = subset(sdf, dsex == \"Male\"), variable = \"composite\")  # get several standard deviations  # build an edsurvey.data.frame.list sdfA <- subset(sdf, scrpsu %in% c(5,45,56)) sdfB <- subset(sdf, scrpsu %in% c(75,76,78)) sdfC <- subset(sdf, scrpsu %in% 100:200) sdfD <- subset(sdf, scrpsu %in% 201:300)  sdfl <- edsurvey.data.frame.list(list(sdfA, sdfB, sdfC, sdfD),                                  labels=c(\"A locations\",                                           \"B locations\",                                           \"C locations\",                                           \"D locations\"))  # this shows how these datasets will be described: sdfl$covs  # SD results for each survey SD(data = sdfl, variable = \"composite\") # SD results more compactly and with comparisons gap(variable=\"composite\", data=sdfl, stDev=TRUE, returnSimpleDoF=TRUE) }"},{"path":"/reference/searchSDF.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Codebook Search — searchSDF","title":"EdSurvey Codebook Search — searchSDF","text":"Retrieves variable names labels edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list using character string matching.","code":""},{"path":"/reference/searchSDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Codebook Search — searchSDF","text":"","code":"searchSDF(string, data, fileFormat = NULL, levels = FALSE)"},{"path":"/reference/searchSDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Codebook Search — searchSDF","text":"string vector character strings search database connection object (data). function search codebook matching character string using regular expressions. string several elements, must present variable returned. data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list fileFormat character vector indicating data source search variables. default NULL argument searches codebooks. levels logical value; set TRUE return snapshot levels edsurvey.data.frame","code":""},{"path":"/reference/searchSDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Codebook Search — searchSDF","text":"data.frame shows variable names, labels,                   levels (applicable) edsurvey.data.frame light.edsurvey.data.frame based matching character string","code":""},{"path":"/reference/searchSDF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Codebook Search — searchSDF","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/searchSDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Codebook Search — searchSDF","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # search both the student and school files by a character string searchSDF(string=\"book\", data=sdf)  # use the `|` (OR) operator to search several strings simultaneously searchSDF(string=\"book|home|value\", data=sdf)  # use a vector of strings to search for variables that contain multiple strings, # such as both \"book\" and \"home\" searchSDF(string=c(\"book\",\"home\"), data=sdf)  # search only the student files by a character string searchSDF(string=\"algebra\", data=sdf, fileFormat=\"student\")  # search both the student and school files and return a glimpse of levels searchSDF(string=\"value\", data=sdf, levels=TRUE)  # save the search as an object to return a full data.frame of search ddf <- searchSDF(string=\"value\", data=sdf, levels=TRUE) ddf }"},{"path":"/reference/setNAEPScoreCard.html","id":null,"dir":"Reference","previous_headings":"","what":"set NAEP Score Card — setNAEPScoreCard","title":"set NAEP Score Card — setNAEPScoreCard","text":"add item response theory data necessary use mml.sdf NAEP data","code":""},{"path":"/reference/setNAEPScoreCard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set NAEP Score Card — setNAEPScoreCard","text":"","code":"setNAEPScoreCard(data, dctPath = NULL)"},{"path":"/reference/setNAEPScoreCard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set NAEP Score Card — setNAEPScoreCard","text":"data NAEP edsurvey.data.frame dctPath file location points location NAEP .dct file (usually folder). .dct file can used input custom item response theory (IRT) parameters subscale/subtest weights NAEP assessments compared provided NAEPirtparams package.","code":""},{"path":"/reference/setNAEPScoreCard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set NAEP Score Card — setNAEPScoreCard","text":"NAEP edsurvey.data.frame updated attributes","code":""},{"path":"/reference/setNAEPScoreCard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"set NAEP Score Card — setNAEPScoreCard","text":"","code":"if (FALSE) { datFP <- \"~/NAEP_Folder/Data/M50NT3AT.dat\" sdf <- readNAEP(datFP)  #how to set NAEP mml attributes #if readNAEP does not detect them automatically dctFP <- \"~/NAEP_Folder/AM/M50NT3AT.dct\" sdf <- setNAEPScoreCard(sdf, dctFP) }"},{"path":"/reference/showCodebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Codebook — showCodebook","title":"Summary Codebook — showCodebook","text":"Retrieves variable names, variable labels, value labels              edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list.","code":""},{"path":"/reference/showCodebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Codebook — showCodebook","text":"","code":"showCodebook(   data,   fileFormat = NULL,   labelLevels = FALSE,   includeRecodes = FALSE )"},{"path":"/reference/showCodebook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Codebook — showCodebook","text":"data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list fileFormat character string indicating data source search variables. default NULL argument searches available codebooks database connection object. labelLevels logical value; set TRUE return snapshot label levels edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list. set FALSE (default), label levels removed. includeRecodes logical value; set TRUE return value labels recoded edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list. set FALSE (default), original value labels included returned data.frame.","code":""},{"path":"/reference/showCodebook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Codebook — showCodebook","text":"data.frame shows variable names, variable labels, value labels,                        value levels (applicable), file format data source edsurvey.data.frame, light.edsurvey.data.frame,                        edsurvey.data.frame.list","code":""},{"path":"/reference/showCodebook.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Codebook — showCodebook","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/showCodebook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Codebook — showCodebook","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # search both the student and school files, returning levels for variable values showCodebook(sdf, c(\"student\",\"school\"), labelLevels = TRUE, includeRecodes = FALSE)  # return codebook information for the student file, excluding variable value levels, # including recoded variables sdf <- recode.sdf(sdf, recode = list(dsex = list(from = c(\"Male\"), to = c(\"MALE\")))) showCodebook(sdf, c(\"student\"), labelLevels = FALSE, includeRecodes = TRUE)  # return codebook information for the student file, including variable value levels # and recoded variables showCodebook(sdf, c(\"student\",\"school\"), labelLevels = FALSE, includeRecodes = TRUE)  # return codebook information for all codebooks in an edsurvey.data.frame; commonly use View() View(showCodebook(sdf)) }"},{"path":"/reference/showCutPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Achievement Level Cutpoints — showCutPoints","title":"Retrieve Achievement Level Cutpoints — showCutPoints","text":"Retrieves summary achievement level cutpoints              selected study represented              edsurvey.data.frame, light.edsurvey.data.frame,              edsurvey.data.frame.list.","code":""},{"path":"/reference/showCutPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Achievement Level Cutpoints — showCutPoints","text":"","code":"showCutPoints(data)"},{"path":"/reference/showCutPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Achievement Level Cutpoints — showCutPoints","text":"data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list","code":""},{"path":"/reference/showCutPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Achievement Level Cutpoints — showCutPoints","text":"achievement levels defined, prints one line per subject scale. line names subject shows cut point achievement level.","code":""},{"path":"/reference/showCutPoints.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve Achievement Level Cutpoints — showCutPoints","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/showCutPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Achievement Level Cutpoints — showCutPoints","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # show the cut points showCutPoints(data=sdf) }"},{"path":"/reference/showPlausibleValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Plausible Value Variable Names — showPlausibleValues","title":"Plausible Value Variable Names — showPlausibleValues","text":"Prints summary subject scale subscale associated variables              plausible values edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list.","code":""},{"path":"/reference/showPlausibleValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plausible Value Variable Names — showPlausibleValues","text":"","code":"showPlausibleValues(data, verbose = FALSE)"},{"path":"/reference/showPlausibleValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plausible Value Variable Names — showPlausibleValues","text":"data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list verbose logical value; set TRUE get variable names plausible values. Otherwise, prints subject scale subscale names variables use plausible values.","code":""},{"path":"/reference/showPlausibleValues.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plausible Value Variable Names — showPlausibleValues","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/showPlausibleValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plausible Value Variable Names — showPlausibleValues","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # show the plausible values showPlausibleValues(data=sdf, verbose=TRUE) }"},{"path":"/reference/showWeights.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Weight Variables — showWeights","title":"Retrieve Weight Variables — showWeights","text":"Prints summary weights edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list.","code":""},{"path":"/reference/showWeights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Weight Variables — showWeights","text":"","code":"showWeights(data, verbose = FALSE)"},{"path":"/reference/showWeights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Weight Variables — showWeights","text":"data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list verbose logical value; set TRUE print complete list jackknife replicate weights associated full sample weight; otherwise, prints full sample weights","code":""},{"path":"/reference/showWeights.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve Weight Variables — showWeights","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/showWeights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Weight Variables — showWeights","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # show the weights showWeights(sdf, TRUE) }"},{"path":"/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"EdSurvey Subset — subset","title":"EdSurvey Subset — subset","text":"Subsets edsurvey.data.frame, edsurvey.data.frame.list, light.edsurvey.data.frame.","code":""},{"path":"/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EdSurvey Subset — subset","text":"","code":"# S3 method for edsurvey.data.frame subset(x, subset, ..., inside = FALSE)"},{"path":"/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EdSurvey Subset — subset","text":"x edsurvey.data.frame, edsurvey.data.frame.list, light.edsurvey.data.frame subset logical expression indicating elements rows keep ... used; included compatibility inside set TRUE prevent substitute condition called (see Details)","code":""},{"path":"/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EdSurvey Subset — subset","text":"object class x","code":""},{"path":"/reference/subset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EdSurvey Subset — subset","text":"variables defined condition references column names edsurvey.data.frame part environment subset.edsurvey.data.frame called evaluated environment subset.edsurvey.data.frame called. Similar difficulty using subset within function call call substitute condition, function difficult use (inside set default value FALSE) inside another function call. See Examples call function within another function.","code":""},{"path":"/reference/subset.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EdSurvey Subset — subset","text":"Wickham, H. (2014). Advanced R. Boca Raton, FL: Chapman & Hall/CRC.","code":""},{"path":"/reference/subset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EdSurvey Subset — subset","text":"Paul Bailey Trang Nguyen","code":""},{"path":"/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EdSurvey Subset — subset","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # table to compare to subsequent tables with subsets edsurveyTable(composite ~ dsex, data=sdf, returnMeans=FALSE, returnSepct=FALSE)  # subset to just males newsdf <-  subset(x=sdf, subset= dsex == \"Male\")  # table of dsex after subset edsurveyTable(composite ~ dsex, data=newsdf, returnMeans=FALSE, returnSepct=FALSE)  # Variable names that are not in the sdf get resolved in the parent frame. # practically, that means that the following two subset  # calls sdfM1 and sdfM2 do the same thing male_var <- \"Male\" sdfM1 <- subset(x=sdf, subset= dsex == male_var) sdfM2 <- subset(x=sdf, subset= dsex == \"Male\") table(getData(data=sdfM1, varnames=\"dsex\")) table(getData(data=sdfM2, varnames=\"dsex\"))  # variable can also be resolved as members of lists genders <- c(\"Male\", \"Female\",\"not a sex level\") sdfn <- subset(x=sdf, subset= dsex == genders[2])  table(getData(data=sdfn, varnames=\"dsex\"))  # variables can also be subset using %in% sdfM3 <- subset(x=sdf, subset= dsex %in% c(\"Male\", \"not a sex level\"))  table(getData(data=sdfM3, varnames=\"dsex\"))  # if you need to call a name on the sdf dynamically, you can use as.name dsex_standin <- as.name(\"dsex\") sdfM4 <- subset(x=sdf, subset= dsex_standin == \"Male\") table(getData(data=sdfM4, varnames=\"dsex\"))  # Here is an example of how one might want to call # subset from within a function or loop. # First, define a few variables to use dynamically rhs_vars <- c(\"dsex\", \"b017451\") lvls <- c(\"Male\", \"Female\")  # create a parsed condition cond <- parse(text=paste0(rhs_vars[1], \" == \\\"\",lvls[1],\"\\\"\"))[[1]]  # when inside=TRUE a parsed condition can be passed to subset dsdf <- subset(x=sdf, subset=cond, inside=TRUE)  # check the result table(getData(data=dsdf, varnames=\"dsex\"))  # both of these return data, but uses substantial memory head(sdf[ , c(\"origwt\",\"m145101\")]) head(sdf[[c(\"origwt\",\"m145101\")]])  # subset an edsurvey.data.frame.list sdfA <- subset(sdf, scrpsu %in% c(5,45,56)) sdfB <- subset(sdf, scrpsu %in% c(75,76,78)) sdfC <- subset(sdf, scrpsu %in% 100:200) sdfD <- subset(sdf, scrpsu %in% 201:300)  # construct an edsurvey.data.frame.list from these four datasets sdfl <- edsurvey.data.frame.list(list(sdfA, sdfB, sdfC, sdfD),                                  labels=c(\"A locations\",                                            \"B locations\",                                            \"C locations\",                                            \"D locations\"))  sdfl2 <- subset(sdfl, dsex==\"Male\") # the number of rows in each element of the sdfl nrow(sdfl) # the number of rows after subsetting each element to just the Males nrow(sdfl2) }"},{"path":"/reference/suggestWeights.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight suggestions for ECLS-K:2011 data — suggestWeights","title":"Weight suggestions for ECLS-K:2011 data — suggestWeights","text":"Suggest Weights ECLS-K:2011 data based inputting variables.","code":""},{"path":"/reference/suggestWeights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weight suggestions for ECLS-K:2011 data — suggestWeights","text":"","code":"suggestWeights(   varnames = NULL,   data,   showAllWeightSuggestions = FALSE,   verbose = FALSE )"},{"path":"/reference/suggestWeights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weight suggestions for ECLS-K:2011 data — suggestWeights","text":"varnames character vector indicating variables included weight suggestion. data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list showAllWeightSuggestions logical value. set TRUE, applicable weights covers components, typically conservative smaller sample size, returned. default (.e., FALSE), appropriate weight displayed. verbose logical value either print suppress status message output.","code":""},{"path":"/reference/suggestWeights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weight suggestions for ECLS-K:2011 data — suggestWeights","text":"list weight variables. first one approperate choice.","code":""},{"path":"/reference/suggestWeights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weight suggestions for ECLS-K:2011 data — suggestWeights","text":"suggestWeights provides one additional way assist researchers deciding weight use analyses.          function find intersect possible weights given variables provided, rank intersect          based number components weight can adjust. best weight adjust every source used sources.          However, many analyses, weight adjusts nonresponse          sources data included source.          weight corresponds exactly combination components included desired analysis,          researchers might prefer use weight includes nonresponse adjustments components          using analysis weight also includes          nonresponse adjustments components using. Researchers always consult research questions optimal weight choice.","code":""},{"path":"/reference/suggestWeights.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weight suggestions for ECLS-K:2011 data — suggestWeights","text":"Tourangeau, K., Nord, C., Le, T., Sorongon, .G., Hagedorn, M.C., Daly, P., Najarian, M. (2015). Early Childhood Longitudinal Study, Kindergarten Class 2010-11 (ECLS-K:2011), User's Manual ECLS-K:2011 Kindergarten Data File Electronic Codebook, Public Version (NCES 2015-074). U.S. Department Education. Washington, DC: National Center Education Statistics. Tourangeau, K., Nord, C., Le, T., Wallner-Allen, K., Hagedorn, M.C., Leggitt, J., Najarian, M. (2015). Early Childhood Longitudinal Study, Kindergarten Class 2010-11 (ECLS-K:2011), User's Manual ECLS-K:2011 Kindergarten-First Grade Data File Electronic Codebook, Public Version (NCES 2015-078). U.S. Department Education. Washington, DC: National Center Education Statistics. Tourangeau, K., Nord, C., Le, T., Wallner-Allen, K., Vaden-Kiernan, N., Blaker, L. Najarian, M. (2017). Early Childhood Longitudinal Study, Kindergarten Class 2010-11 (ECLS-K:2011) User's Manual ECLS-K:2011 Kindergarten-Second Grade Data File Electronic Codebook, Public Version (NCES 2017-285). U.S. Department Education. Washington, DC: National Center Education Statistics. Tourangeau, K., Nord, C., Le, T., Wallner-Allen, K., Vaden-Kiernan, N., Blaker, L. Najarian, M. (2018). Early Childhood Longitudinal Study, Kindergarten Class 2010-11 ( ECLS -K:2011) User's Manual ECLS-K:2011 Kindergarten-Third G rade Data File Electronic Codebook, Public Version (NCES 2018-034). U.S. Department Education. Washington, DC: National Center Education Statistics Tourangeau, K., Nord, C., Le, T., Wallner-Allen, K., Vaden-Kiernan, N., Blaker, L. Najarian, M. (2018). Early Childhood Longitudinal Study, Kindergarten Class 2010-11 (ECLS-K:2011) User's Manual ECLS-K:2011 Kindergarten-Fourth Grade Data File Electronic Codebook, Public Version (NCES 2018-032). U.S. Department Education. Washington, DC: National Center Education Statistics. Tourangeau, K., Nord, C., Le, T., Wallner-Allen, K., Vaden-Kiernan, N., Blaker, L. Najarian, M. (2019). Early Childhood Longitudinal Study, Kindergarten Class 2010-11 (ECLS-K:2011) User's Manual ECLS-K:2011 Kindergarten-Fifth Grade Data File Electronic Codebook, Public Version (NCES 2019-051). U.S. Department Education. Washington, DC: National Center Education Statistics.","code":""},{"path":"/reference/suggestWeights.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weight suggestions for ECLS-K:2011 data — suggestWeights","text":"Huade Huo","code":""},{"path":"/reference/suggestWeights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weight suggestions for ECLS-K:2011 data — suggestWeights","text":"","code":"if (FALSE) { # read-in ECLS-K:2011 data file with parameters specified eclsk11 <- readECLS_K2011(file.path(\"~/\", \"ECLS_K\", \"2011\"), filename = \"childK5p.dat\",                            layoutFilename = \"ECLSK2011_K5PUF.sps\", verbose = FALSE)  # suggest weight for individual variable suggestWeights(\"x8mscalk5\", eclsk11)  # suggest weight for multiple variables suggestWeights(c(\"x8mscalk5\", \"x_chsex_r\", \"x12sesl\"), eclsk11) }"},{"path":"/reference/summary2.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize edsurvey.data.frame Variables — summary2","title":"Summarize edsurvey.data.frame Variables — summary2","text":"Summarizes edsurvey.data.frame variables.","code":""},{"path":"/reference/summary2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize edsurvey.data.frame Variables — summary2","text":"","code":"summary2(   data,   variable,   weightVar = attr(getAttributes(data, \"weights\"), \"default\"),   dropOmittedLevels = FALSE,   omittedLevels = deprecated() )"},{"path":"/reference/summary2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize edsurvey.data.frame Variables — summary2","text":"data edsurvey.data.frame, edsurvey.data.frame.list, light.edsurvey.data.frame variable character vector variable names weightVar character weight variable name. Default default weight data exists. given survey data default weight, function produce unweighted statistics instead. Can set NULL return unweighted statistics. dropOmittedLevels logical value. set TRUE, drops levels specified variable. Use print edsurvey.data.frame see omitted levels. Defaults FALSE. omittedLevels argument deprecated. Use dropOmittedLevels","code":""},{"path":"/reference/summary2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize edsurvey.data.frame Variables — summary2","text":"summary weighted unweighted statistics given variable edsurvey.data.frame categorical variables, summary results crosstab variables include following: [variable name] level variable column name row regards. one column per element variable. N number cases category. Weighted N also produced users choose produce weighted statistics. Percent percentage category. Weighted percent also produced users choose produce weighted statistics. SE standard error percentage statistics continuous variables, summary results variable include following: Variable name variable row regards N total number cases (valid invalid cases) Min. smallest value variable 1st Qu. first quantile variable Median median value variable Mean mean variable 3rd Qu. third quantile variable Max. largest value variable SD standard deviation weighted standard deviation NA's number NA variable weight variables Zero weights number zero weight cases users choose produce weighted statistics weight option chosen, function produces weighted percentile standard deviation. Refer vignette titled Statistical Methods Used EdSurvey vignette titled Methods Used Estimating Percentiles EdSurvey function calculates statistics (without plausible values).","code":""},{"path":[]},{"path":"/reference/summary2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize edsurvey.data.frame Variables — summary2","text":"Paul Bailey Trang Nguyen","code":""},{"path":"/reference/summary2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize edsurvey.data.frame Variables — summary2","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # print out summary of weighted statistics of a continuous variable summary2(sdf, \"composite\") # print out summary of weighted statistics of a variable, including omitted levels summary2(sdf, \"b017451\", omittedLevels = FALSE) # make a crosstab summary2(sdf, c(\"b017451\", \"dsex\"), omittedLevels = FALSE)  # print out summary of unweighted statistics of a variable summary2(sdf, \"composite\", weightVar = NULL) }"},{"path":"/reference/UnclassCols.html","id":null,"dir":"Reference","previous_headings":"","what":"remove non-standard classes from data frame columns — UnclassCols","title":"remove non-standard classes from data frame columns — UnclassCols","text":"removes haven defined column classes returned tibble needed issues revolving around `user_na=TRUE` argument haven 'read_sav' method parameter","code":""},{"path":"/reference/UnclassCols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove non-standard classes from data frame columns — UnclassCols","text":"","code":"UnclassCols(tbl)"},{"path":"/reference/updatePlausibleValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Plausible Value Variable Names — updatePlausibleValue","title":"Update Plausible Value Variable Names — updatePlausibleValue","text":"Changes name used refer set plausible values oldVar newVar edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list.","code":""},{"path":"/reference/updatePlausibleValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Plausible Value Variable Names — updatePlausibleValue","text":"","code":"updatePlausibleValue(oldVar, newVar, data)"},{"path":"/reference/updatePlausibleValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Plausible Value Variable Names — updatePlausibleValue","text":"oldVar character value indicating existing name variable newVar character value indicating new name variable data edsurvey.data.frame, light.edsurvey.data.frame, edsurvey.data.frame.list","code":""},{"path":"/reference/updatePlausibleValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Plausible Value Variable Names — updatePlausibleValue","text":"object class data argument, name         plausible value updated oldVar newVar","code":""},{"path":[]},{"path":"/reference/updatePlausibleValue.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update Plausible Value Variable Names — updatePlausibleValue","text":"Michael Lee Paul Bailey","code":""},{"path":"/reference/updatePlausibleValue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Plausible Value Variable Names — updatePlausibleValue","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package=\"NAEPprimer\"))  # get the PVs before showPlausibleValues(sdf) sdf2 <- updatePlausibleValue(\"composite\", \"overall\", sdf) showPlausibleValues(sdf2) lm1 <- lm.sdf(overall ~ b017451, data=sdf2) summary(lm1) }"},{"path":"/reference/varEstToCov.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance Estimation — varEstToCov","title":"Covariance Estimation — varEstToCov","text":"variance derived statistic (e.g., difference)              required, covariance two statistics must              calculated. function uses results generated various              functions (e.g., lm.sdf) find covariance              two statistics.","code":""},{"path":"/reference/varEstToCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance Estimation — varEstToCov","text":"","code":"varEstToCov(   varEstA,   varEstB = varEstA,   varA,   varB = varA,   jkSumMultiplier,   returnComponents = FALSE )"},{"path":"/reference/varEstToCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance Estimation — varEstToCov","text":"varEstA list two data.frames returned function returnVarEstInputs argument turned . statistic named varA argument must present data.frame. varEstB list two data.frames returned function returnVarEstInputs argument turned . statistic named varA argument must present data.frame. varEstA, covariance within one result. varA character names statistic varEstA argument covariance required varB character names statistic varEstB argument covariance required jkSumMultiplier jackknife variance estimation method---balanced repeated replication (BRR) method---multiplies final jackknife variance estimate value, set jkSumMultiplier value. edsurvey.data.frame light.edsurvey.data.frame, recommended value can recovered EdSurvey::getAttributes(myData, \"jkSumMultiplier\"). returnComponents set TRUE return imputation variance separate sampling variance","code":""},{"path":"/reference/varEstToCov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance Estimation — varEstToCov","text":"numeric value; jackknife covariance estimate. returnComponents TRUE, returns vector length three, V variance estimate, Vsamp sampling component variance, Vimp imputation component variance","code":""},{"path":"/reference/varEstToCov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covariance Estimation — varEstToCov","text":"functions vectorized, varA varB must contain exactly one variable name. method used compute covariance vignette titled Statistical Methods Used EdSurvey method used compute degrees freedom vignette titled Statistical Methods Used EdSurvey section “Estimation Degrees Freedom.”","code":""},{"path":"/reference/varEstToCov.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Covariance Estimation — varEstToCov","text":"Paul Bailey","code":""},{"path":"/reference/varEstToCov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance Estimation — varEstToCov","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # estimate a regression lm1 <- lm.sdf(composite ~ dsex + b017451, sdf, returnVarEstInputs=TRUE) summary(lm1) # estimate the covariance between two regression coefficients # note that the variable names are parallel to what they are called in lm1 output covFEveryDay <- varEstToCov(lm1$varEstInputs,                             varA=\"dsexFemale\",                             varB=\"b017451Every day\",                             jkSumMultiplier=EdSurvey:::getAttributes(sdf, \"jkSumMultiplier\")) # the estimated difference between the two coefficients # note: unname prevents output from being named after the first coefficient unname(coef(lm1)[\"dsexFemale\"] - coef(lm1)[\"b017451Every day\"]) # the standard error of the difference # uses the formula SE(A-B) = sqrt(var(A) + var(B) - 2*cov(A,B)) sqrt(lm1$coefmat[\"dsexFemale\", \"se\"]^2      + lm1$coefmat[\"b017451Every day\", \"se\"]^2      - 2 * covFEveryDay) }"},{"path":"/reference/viewNHES_SurveyCodes.html","id":null,"dir":"Reference","previous_headings":"","what":"View NHES Survey Code Definitions — viewNHES_SurveyCodes","title":"View NHES Survey Code Definitions — viewNHES_SurveyCodes","text":"function prints defined NHES Survey Codes console output compatible readNHES function use.              Typically user need manually set codes 'auto' survey parameter able correctly identify              correct survey type, unusual situations.","code":""},{"path":"/reference/viewNHES_SurveyCodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View NHES Survey Code Definitions — viewNHES_SurveyCodes","text":"","code":"viewNHES_SurveyCodes()"},{"path":[]},{"path":"/reference/viewNHES_SurveyCodes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"View NHES Survey Code Definitions — viewNHES_SurveyCodes","text":"Tom Fink","code":""},{"path":"/reference/viewNHES_SurveyCodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View NHES Survey Code Definitions — viewNHES_SurveyCodes","text":"","code":"if (FALSE) {   #print the NHES survey information to the console for quick reference   viewNHES_SurveyCodes() }"},{"path":"/reference/waldTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Wald Tests — waldTest","title":"Wald Tests — waldTest","text":"Tests coefficient(s) edsurveyGlm              edsurveyLm models.","code":""},{"path":"/reference/waldTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wald Tests — waldTest","text":"","code":"waldTest(model, coefficients, H0 = NULL)"},{"path":"/reference/waldTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wald Tests — waldTest","text":"model edsurveyGlm edsurveyLm coefficients coefficients tested, name position coef vector. See Details. H0 reference values test coefficients , default = 0","code":""},{"path":"/reference/waldTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wald Tests — waldTest","text":"edsurveyWaldTest object following elements: Sigma coefficient covariance matrix coefficients indices coefficients tested H0 null hypothesis values coefficients tested result result object containing values chi-square F-tests hypoMatrix hypothesis matrix used Wald Test","code":""},{"path":"/reference/waldTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wald Tests — waldTest","text":"plausible values present, likelihood ratio tests used. However, Wald test can used test estimated parameters model, null hypothesis parameter(s) equal value(s). default case null hypothesis value parameters 0, test fails reject null hypothesis, removing variables model substantially harm fit model. Alternative null hypothesis values also can specified H0 argument. See Examples. Coefficients test can specified integer (integer vector) corresponding order coefficients summary output. Coefficients also can specified using character vector, specify coefficient names test. name factor variable can used test levels variable. test produces chi-square F-tests; calculation described vignette titled Methods Overview Using EdSurvey Running Wald Tests.","code":""},{"path":"/reference/waldTest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wald Tests — waldTest","text":"Diggle, P. J., Liang, K.-Y., & Zeger, S. L. (1994). Analysis longitudinal data. Oxford, UK: Clarendon Press. Draper, N. R., & Smith, H. (1998). Applied regression analysis. New York, NY: Wiley. Fox, J. (1997). Applied regression analysis, linear models, related methods. Thousand Oaks, CA: SAGE. [Institute Digital Research Education. (n.d.). FAQ: likelihood ratio, Wald, LaGrange multiplier (score) tests different /similar?](https://stats.idre.ucla.edu//mult-pkg/faq/general/faqhow---likelihood-ratio-wald--lagrange-multiplier-score-tests-different-andor-similar/). Los Angeles: University California Los Angeles. Retrieved [https://stats.idre.ucla.edu//mult-pkg/faq/general/faqhow---likelihood-ratio-wald--lagrange-multiplier-score-tests-different-andor-similar/](https://stats.idre.ucla.edu//mult-pkg/faq/general/faqhow---likelihood-ratio-wald--lagrange-multiplier-score-tests-different-andor-similar/) Korn, E., & Graubard, B. (1990). Simultaneous testing regression coefficients complex survey data: Use Bonferroni t statistics. American Statistician, 44(4), 270--276.","code":""},{"path":"/reference/waldTest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wald Tests — waldTest","text":"Alex Lishinski Paul Bailey","code":""},{"path":"/reference/waldTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wald Tests — waldTest","text":"","code":"if (FALSE) { # read in the example data (generated, not real student data) sdf <- readNAEP(system.file(\"extdata/data\", \"M36NT2PM.dat\", package = \"NAEPprimer\"))  # example with glm model myLogit <- logit.sdf(dsex ~ b017451 + b003501, data = sdf, returnVarEstInputs = T)  # single coefficient integer waldTest(model = myLogit, coefficients = 2)  # set of coefficients integer vector waldTest(model = myLogit, coefficients = 2:5)  # specify levels of factor variable to test waldTest(myLogit, c(\"b017451Every day\", \"b017451About once a week\"))  # specify all levels of factor variable to test waldTest(myLogit, \"b017451\")  # example with lm model fit <- lm.sdf(composite ~ dsex + b017451, data = sdf, returnVarEstInputs = T)  waldTest(model = fit, coefficients = \"b017451\")  # examples with alternative (nonzero) null hypothesis values waldTest(model = myLogit, coefficients = 2, H0 = 0.5)  waldTest(model = myLogit, coefficients = 2:5, H0 = c(0.5, 0.6, 0.7, 0.8))  waldTest(model = myLogit, coefficients = \"b017451\", H0 = c(0.5, 0.6, 0.7, 0.8))  waldTest(model = myLogit, coefficients = c(\"b017451Every day\", \"b017451About once a week\"),          H0 = c(0.1, 0.2)) }"}]
